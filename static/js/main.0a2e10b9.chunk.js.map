{"version":3,"sources":["world/constants.js","world/WorldToken.js","contexts/WorldTokenContext.js","hooks/useBlock.js","hooks/useTokenBalance.js","world/utils.js","hooks/useEthUsdPrice.js","hooks/useTokenPrice.js","components/common/Value.js","components/layout/MainNavbar/NavbarSearch.js","assets/metamask-fox.svg","assets/wallet-connect.svg","components/layout/MainNavbar/NavbarNav/Notifications.js","components/layout/MainNavbar/NavbarNav/NavbarNav.js","components/layout/MainNavbar/NavbarNav/UserActions.js","contexts/SidebarContext.js","hooks/useSidebar.js","components/layout/MainNavbar/NavbarToggle.js","components/layout/MainNavbar/MainNavbar.js","assets/logo.png","components/layout/MainSidebar/SidebarMainNavbar.js","components/common/NavLinkAnchorTag.jsx","components/layout/MainSidebar/SidebarNavItem.js","components/layout/MainSidebar/SidebarNavItems.js","components/layout/MainSidebar/MainSidebar.js","components/layout/MainFooter.js","components/layout/DefaultLayout.js","components/common/PageTitle.js","world/chart.js","components/common/SmallStats.js","world/WorldFarm.js","hooks/useWorldFarm.js","hooks/useLpTokenBalance.js","hooks/useLpTokenAllowance.js","components/common/BadgeAnchorTag.jsx","components/farm/Stake.jsx","components/farm/StakingInfo.jsx","hooks/useStakedBalance.js","hooks/usePendingRewards.js","components/farm/StakingActions.jsx","components/farm/FarmLineChart.jsx","hooks/useWorldPerBlock.js","hooks/useFarmROI.js","hooks/useWorldPerBlockUpdate.js","hooks/useStats.js","world/WorldData.js","views/Farm.js","views/PageNotFound.js","hooks/useRecentTrades.js","components/overview/RecentTrades.jsx","hooks/useHolderFees.js","components/overview/FeeDistributionLineChart.jsx","views/Overview.js","views/PageInProgress.jsx","App.jsx","reportWebVitals.jsx","index.jsx"],"names":["CONTRACT_ADDRESSES","worldToken","worldFarm","DEFAULT_PROVIDER","ethers","infura","alchemy","etherscan","pollingInterval","WORLD_ETH_PAIR","address","Pair","getAddress","Token","WETH","pid","WETH_CONTRACT","ERC20Abi","LP_TOKEN_CONTRACT","Contract","BLOCKS_PER_DAY","FIREBASE_CONFIG","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","uniClient","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","shouldBatch","WorldToken","signer","this","read","wallet","balanceOf","allowance","WorldTokenAbi","currentBlockNumber","Context","createContext","undefined","WorldTokenContext","children","useWallet","account","ethereum","useState","setWorldToken","useEffect","a","provider","Web3Provider","getSigner","init","Provider","value","fetched","fetchBlockNumber","getBlockNumber","latestBlockNumber","console","log","setInterval","useBlock","block","setBlock","interval","clearInterval","useTokenBalance","BigNumber","from","balance","setBalance","fetchBalance","useCallback","ZERO_BN","displayAmount","amount","decimals","utils","formatEther","e","isNaN","Infinity","num","fixed","re","RegExp","toString","match","toFixedString","shortenAddress","length","substr","getStatPercentage","currentValue","chartData","lastValue","pct","getAverage","arr","filter","n","reduce","p","c","toNumber","bn","getFeeDistribution","fees","pastFees","pastFee","distributed","forEach","fee","push","groupDataByKey","data","stats","pastStats","monday","d","date","dayjs","unix","timestamp","seconds","obj","isBefore","Object","keys","k","Array","idx","day","i","slice","flatten","elements","el","isArray","cgPrice","fetchEthUsdPrice","fetch","response","ok","json","usd","useEthUsdPrice","price","setEthUsdPrice","useTokenPrice","eth","setTokenPrice","ethUsdPrice","fetchTokenPrice","lpWethAmount","lpTokenAmount","tokenPriceInWeth","Value","start","updateStart","end","updateEnd","duration","separator","className","in","theme","Notifications","connect","reset","connector","visible","setVisible","onClick","style","cursor","open","minWidth","src","metamaskLogo","alt","height","width","walletConnectLogo","React","Component","navbar","SidebarContext","setOpen","toggle","useSidebar","useContext","NavbarToggle","href","MainNavbar","stickyTop","ethPrice","setEthPrice","tokenPrice","classes","classNames","fluid","type","NavbarSearch","NavbarNav","defaultProps","SidebarMainNavbar","target","rel","lineHeight","id","maxWidth","worldLogo","NavLinkAnchorTag","SidebarNavItem","item","tag","to","RouteNavLink","htmlBefore","dangerouslySetInnerHTML","__html","title","htmlAfter","SidebarNavItems","MainSidebar","lg","size","md","MainFooter","contained","menuItems","copyright","map","DefaultLayout","noNavbar","noFooter","offset","sm","PageTitle","subtitle","attrs","xs","Chart","defaults","LineWithLine","line","controllers","extend","draw","ease","prototype","call","chart","tooltip","_active","activePoint","ctx","x","tooltipPosition","topY","scales","top","bottomY","bottom","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","labels","_","SmallStats","props","canvasRef","createRef","chartOptions","maintainAspectRatio","responsive","legend","display","tooltips","enabled","custom","point","radius","tension","xAxes","gridLines","ticks","yAxes","scaleLabel","isplay","suggestedMax","Math","max","chartConfig","datasets","options","current","prevProps","variation","label","percentage","increase","append","prepend","subAppend","cardClasses","cardBodyClasses","innerWrapperClasses","dataFieldClasses","labelClasses","valueClasses","innerDataFieldClasses","percentageClasses","canvasHeight","small","ref","shortid","create","chartLabels","WorldFarm","contract","WorldFarmingAbi","lpToken","constants","MaxUint256","approve","tx","wait","userInfo","pendingRewards","deposit","parseEther","withdraw","worldPerBlock","lpContractToken","lpContractWeth","totalSupply","roiPerYear","roiPerMonth","roiPerDay","tokenPriceUSD","portionLp","balanceUSD","rewardPerThousand","totalStakedLP","totalValueLocked","poolInfo","allocPoint","totalAllocPoint","div","tokenAmountWholeLP","totalLpWethValue","tokenAmount","wethAmount","poolWeight","totalWethValue","totalStakedLp","useWorldFarm","setWorldFarm","useLpTokenBalance","lpTokenBalance","useLpTokenAllowance","setAllowance","fetchAllowance","lpTokenAllowance","BadgeAnchorTag","Stake","setAmount","stakingAllowed","isZero","stakeAmount","totalStaked","add","worldPerDay","stakeValue","share","htmlFor","placeholder","onChange","outline","stake","lpTokenMaxApprove","flush","StakingInfo","stakedBalance","stakedValue","useStakedBalance","usePendingRewards","rewards","setRewards","fetchRewards","claimRewards","unstake","days","FarmLineChart","typeOpen","setTypeOpen","setType","setChart","apy","past","subject","poolRewards","tvl","blockReward","pastAverage","average","fill","backgroundColor","borderColor","borderDash","borderWidth","pointRadius","pointHoverRadius","position","callback","tick","index","approx","min10k","hover","mode","intersect","callbacks","toLocaleString","datasetIndex","destroy","Overview","buoMeta","getDatasetMeta","_model","render","caret","useWorldPerBlock","worldPerBlockUpdated","setWorldPerBlock","fetchWorldPerBlock","getWorldPerBlock","update","useFarmROI","roiPerHour","roi","setROI","fetchFarmingAPY","useWorldPerBlockUpdate","time","setTime","fetchUpdateTime","getWorldPerBlockUpdateTime","updateTime","fetchStats","fetcher","cb","millisecond","second","minute","hour","pastWeekMonday","useStats","dataset","setDataset","WorldData","firebase","initializeApp","db","firestore","farmRef","collection","tokenRef","startDate","orderBy","startAt","get","snapshot","docs","doc","Calendar","Farm","calendarRewardUpdate","setCalendarRewardUpdate","rewardUpdateTime","rewardUpdateDay","Date","getFarmStats","poolReward","totalValueLockedPct","rewardPerThousandPct","blockRewardPct","currentStats","smallStats","decrease","fontSize","calendar","noGutters","StakingActions","PageNotFound","RelativeTime","fetching","trades","fetchTrades","query","gql","swaps","totalEth","token1Weth","pair","token1","symbol","buy","amount1In","amount0In","transaction","fromNow","amount0Out","amount1Out","priceEth","useRecentTrades","recentTrades","setRecentTrades","RecentTrades","overflowX","scope","trade","toFixed","useHolderFees","setFees","totalFees","holderFees","FeeDistributionLineChart","prependTitle","pastData","marketingBalance","uniLpBalance","burnedWorld","getTokenStats","feeDistribution","pastFeeDistribution","worldBurn","burned","pastWorldBurn","avgDailyYield","pricePct","burnedPct","feesPct","avgDailyYieldPct","PageInProgress","Providers","chainId","connectors","walletconnect","rpcUrl","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"opeAkBaA,EAAqB,CAChCC,YAAU,mBAPa,EAQD,8CADZ,cAHW,KAKD,8CAFV,GAIVC,UAAU,eAXa,EAYD,+CAaXC,EACTC,qBA1BqB,EA0BuB,CAC5CC,OAXsB,mCAYtBC,QAXoB,mCAYpBC,UAXsB,uCAe1BJ,EAAiBK,gBAAkB,KAE5B,IAAMC,EAAiB,CAC5BC,QAASC,IAAKC,WACZ,IAAIC,IArCiB,EAqCOb,EAAmBC,WArC1B,GAqCwD,GAAI,OACjFa,IAtCqB,IAwCvBC,IAAK,GAGMC,EAAgB,IAAIZ,IAC/BU,IA5CuB,GA4CAJ,QACvBO,EACAd,GAGWe,EAAoB,IAAIC,IACnCV,EAAeC,QACfO,EACAd,GAGWiB,EAAiB,KAEjBC,EAAmB,CAC9BC,OAAQ,uCACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,cACnBC,MAAO,eAGIC,EAAY,IAAIC,eAAa,CACxCC,KAAM,IAAIC,WAAS,CACjBC,IAAK,+DAEPC,MAAO,IAAIC,gBACXC,aAAa,I,wDCzEMC,E,WASnB,WAAYC,GAAS,oBACnBC,KAAKD,OAASA,E,wLAIPC,KAAKD,OAAO1B,c,4PAIZyB,EAAWG,K,SAAqBD,KAAKE,S,iDAArBC,U,+QAQhBL,EAAWG,K,SAAqBD,KAAKE,S,+BAAUJ,EAAWG,KAAK9B,Q,uBAA/CiC,U,uMALFjC,G,0FACd2B,EAAWG,KAAKE,UAAUhC,I,yGAtBhB2B,EACZG,KAAO,IAAIrB,IAChBnB,EAAmBC,WDDE,GCErB2C,EACAzC,GAJiBkC,EAOZ3B,QAAUV,EAAmBC,WDNb,GEDlB,ICLH4C,EDKSC,EAAUC,wBAAc,CACnC9C,gBAAY+C,IAqBCC,EAlBW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACZC,cAAtBC,EADkC,EAClCA,QAASC,EADyB,EACzBA,SADyB,EAENC,mBAAS,MAFH,mBAEnCrD,EAFmC,KAEvBsD,EAFuB,KAe1C,OAXAC,qBAAU,YACE,uCAAG,4BAAAC,EAAA,sDACPJ,IACIK,EAAW,IAAItD,YAAiBuD,aAAaN,GACnDE,EAAc,IAAIlB,EAAWqB,EAASE,eAH7B,2CAAH,qDAOVC,KACC,CAACT,EAASC,IAEN,cAACP,EAAQgB,SAAT,CAAkBC,MAAO,CAAE9D,cAA3B,SAA0CiD,K,wBCvB/Cc,GAAU,EACRC,EAAgB,uCAAG,4BAAAR,EAAA,sEACStD,EAAiB+D,iBAD1B,OACjBC,EADiB,OAEnBtB,IAAuBsB,IACzBtB,EAAqBsB,GAEvBC,QAAQC,IAAI,gBAAiBF,GALN,2CAAH,qDAOtBG,YAAYL,EAAkB,MAE9B,IAqBeM,EArBE,WAAO,IAAD,EACKjB,mBAAST,GADd,mBACd2B,EADc,KACPC,EADO,KAkBrB,OAfAjB,qBAAU,WACHQ,IACHC,IACAD,GAAU,GAGZ,IAAMU,EAAWJ,YAAW,sBAAC,sBAAAb,EAAA,sDACvBe,IAAU3B,GACZ4B,EAAS5B,GAFgB,2CAI1B,KAEH,OAAO,kBAAM8B,cAAcD,MAC1B,IAEIF,G,QCXMI,EAlBS,SAAClE,GAAa,IAAD,EACL4C,mBAASuB,IAAUC,KAAK,IADnB,mBAC5BC,EAD4B,KACnBC,EADmB,KAE7BR,EAAQD,IAERU,EAAeC,sBAAW,sBAAC,4BAAAzB,EAAA,0DAC3B/C,EAD2B,gCAEP2B,EAAWK,UAAUhC,GAFd,OAEvBqE,EAFuB,OAG7BC,EAAWD,GAHkB,2CAK9B,CAACP,EAAO9D,IAMX,OAJA8C,qBAAU,WACRyB,MACC,CAACT,EAAO9D,IAEJqE,G,yBCfII,EAAUN,IAAUC,KAAK,GAEzBM,EAAgB,SAACC,EAAQC,GACpC,GAAsB,kBAAXD,EACT,IACEA,EAASE,QAAMC,YAAYH,GAC3B,MAAOI,IAIX,OAAKC,MAAML,IAAWA,IAAWM,IAI1B,KAGT,SAAuBC,EAAKC,GAC1B,IAAMC,EAAK,IAAIC,OAAJ,2BAAgCF,IAAU,EAA1C,QACX,OAAOD,EAAII,WACRC,MAAMH,GAAI,GATHI,CAAcb,EAAQC,GAAY,IAYvC,IAoBMa,EAAiB,SAAC/C,GAAyB,IAAhBgD,EAAe,uDAAN,EAC/C,OAAKhD,EAGC,GAAN,OAAUA,EAAQiD,OAAO,EAAGD,GAA5B,cAAyChD,EAAQiD,OAAOjD,EAAQgD,QAAUA,EAAS,GAAIhD,EAAQgD,OAAS,IAF/F,IAKEE,GAAoB,SAACC,EAAcC,GAC9C,IAAKA,IAAcD,EACjB,OAAO,EAGT,IAAME,EAAYD,EAAUA,EAAUJ,OAAS,GACzCM,EAAyC,KAAjCD,EAAYF,EAAgB,GAC1C,OAAOA,GAAgBE,EAAYC,GAAOA,GAG/BC,GAAa,SAACC,GACzB,OAAKA,EAGEA,EAAIC,QAAO,SAACC,GAAD,OAAOA,KACtBC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAAKL,EAAIR,OAH3B,GAMEc,GAAW,SAACC,GAAD,OAAS/G,SAAOmF,MAAMC,YAAY2B,IAE7CC,GAAqB,SAACC,EAAMC,GACvC,IAAKD,EACH,MAAO,GAGT,IAAME,GAAkB,OAARD,QAAQ,IAARA,OAAA,EAAAA,EAAUlB,QAASkB,EAASA,EAASlB,OAAS,GAAK,EAC7DoB,EAAc,GAChB/D,EAAI8D,EAUR,OAPAF,EAAKI,SAAQ,SAACC,GAEZjE,EADIiE,EAAMjE,EAGV+D,EAAYG,KAAKlE,MAGZ+D,GAGII,GAAiB,SAACC,EAAMC,EAAOC,EAAWC,GACrDH,EAAKJ,SAAQ,SAACQ,GACZ,IAAMC,EAAOC,IAAMC,KAAKH,EAAEI,UAAUC,SAC9BC,EAAML,EAAKM,SAASR,GAAUD,EAAYD,EAEhDW,OAAOC,KAAKT,GACTR,SAAQ,SAACkB,GACHJ,EAAII,KACPJ,EAAII,GAAKC,MAAM9D,KAAK,IAAI8D,MAAM,IAAI,kBAAM,MAG1C,IAAIC,EAAMX,EAAKY,MAAQ,EACnBD,EAAM,IACRA,EAAM,GAGRN,EAAII,GAAGE,GAAOZ,EAAEU,SAItBF,OAAOC,KAAKZ,GACTL,SAAQ,SAACkB,GAGR,IAFA,IACIE,EADEjC,EAAMkB,EAAMa,GAETI,EAAInC,EAAIR,OAAS,EAAG2C,GAAK,EAAGA,IACnC,GAAInC,EAAImC,GAAK,EAAG,CACdF,EAAME,EACN,MAIJjB,EAAMa,GAAKb,EAAMa,GAAGK,MAAM,EAAGH,EAAM,OAK5BI,GAAU,WAAiB,IACtC,IAAMrC,EAAM,GAD0B,mBAAbsC,EAAa,yBAAbA,EAAa,gBAYtC,OAVAA,EAASzB,SAAQ,SAAC0B,GACXA,IAGDP,MAAMQ,QAAQD,GAChBA,EAAG1B,SAAQ,SAAChC,GAAD,OAAOmB,EAAIe,KAAKlC,MAG7BmB,EAAIe,KAAKwB,OAEJvC,GC1ILyC,GAAU,EACVrF,IAAU,EAERsF,GAAgB,uCAAG,8BAAA7F,EAAA,sEACA8F,MALb,gFAIa,YACjBC,EADiB,QAEVC,GAFU,gCAGFD,EAASE,OAHP,OAGfA,EAHe,OAIrBL,GAAUK,EAAKrG,SAASsG,IAJH,2CAAH,qDAOtBrF,YAAYgF,GAAkB,KAE9B,IAiBeM,GAjBQ,WAAO,IAAD,EACKtG,mBAAS+F,IADd,mBACpBQ,EADoB,KACbC,EADa,KAc3B,OAXAtG,qBAAU,WACHQ,KACHsF,KACAtF,IAAU,GAGRqF,KAAYQ,GACdC,EAAeT,OAIZQ,GCiBME,GAlCO,WAAO,IAAD,EACKzG,mBAAS,CACtC0G,IAAK,EACLL,IAAK,IAHmB,mBACnBE,EADmB,KACZI,EADY,KAKpBC,EAAcN,KACdpF,EAAQD,IAER4F,EAAkBjF,sBAAW,sBAAC,gCAAAzB,EAAA,sEACPzC,EAAc0B,UAAUxB,EAAkBR,SADnC,cAC5B0J,EAD4B,gBAEN/H,EAAWG,KAAKE,UAAUxB,EAAkBR,SAFtC,OAE5B2J,EAF4B,OAW5BC,EAAmBF,EAAapE,WAAaqE,EAAcrE,WAEjEiE,EAAc,CACZD,IAAKM,EACLX,IAAKW,EAAmBJ,IAfQ,2CAiBjC,CAAC1F,EAAO0F,IAMX,OAJA1G,qBAAU,WACR2G,MACC,CAAC3F,EAAO0F,EAAaD,IAEjBJ,G,qBCdMU,GA7BD,SAAC,GAGR,IAFLxG,EAEI,EAFJA,MACAuB,EACI,EADJA,SACI,EACyBhC,mBAAS,GADlC,mBACGkH,EADH,KACUC,EADV,OAEqBnH,mBAAS,GAF9B,mBAEGoH,EAFH,KAEQC,EAFR,KAWJ,OAPAnH,qBAAU,WACa,kBAAVO,IACT0G,EAAYC,GACZC,EAAU5G,MAEX,CAACA,IAEmB,iBAATA,EACZA,EAEA,cAAC,KAAD,CACEyG,MAAOA,EACPE,IAAKA,EACLpF,cACetC,IAAbsC,EAAyBA,EAAWoF,EAAM,EAAI,EAAIA,EAAM,IAAM,EAAI,EAEpEE,SAAU,EACVC,UAAU,OCnBD,cAAO,IACZzH,EAAYD,cAAZC,QACF2B,EAAUH,EAAgBxB,GAEhC,OACE,sBAAK0H,UAAU,iCAAf,UACE,cAAC,IAAD,CAAMC,GAAI3H,EAAV,SACI,eAAC,IAAD,CAAO4H,MAAM,UAAUF,UAAU,OAAjC,UACE,cAAC,GAAD,CAAO/G,MAAQgB,IADjB,cAIF,cAAC,IAAD,CAAMgG,GAAI3H,EAAV,SACE,cAAC,IAAD,CAAO0H,UAAU,oBAAoBE,MAAM,YAA3C,SAAwD5H,UCpBnD,OAA0B,yCCA1B,OAA0B,2CC6G1B6H,GAtGO,WAAO,IAAD,EACmB9H,cAAtC+H,EADmB,EACnBA,QAAS9H,EADU,EACVA,QAAS+H,EADC,EACDA,MAAOC,EADN,EACMA,UADN,EAEI9H,oBAAS,GAFb,mBAEnB+H,EAFmB,KAEVC,EAFU,KAI1B,OACE,eAAC,IAAD,CAASR,UAAU,sCAAnB,UACE,cAAC,IAAD,CACEA,UAAU,4BACVS,QAAS,kBAAMD,GAAYD,IAF7B,SAIE,qBACEP,UAAU,8BACVU,MAAO,CAACC,OAAQ,WAFlB,SAIGJ,EACG,yCAAW,uBAAX,cACAjI,EAAU,0CAAY,uBAAZ,YAAiC,2CAAa,uBAAb,gBAGnD,eAAC,IAAD,CACEsI,KAAML,EACNP,UAAU,oCACVU,MAAO,CAACG,SAAU,SAHpB,UAKE,eAAC,IAAD,CACEb,UAAU,8BACVS,QAAO,sBAAE,sBAAA9H,EAAA,yDACW,aAAd2H,EADG,iEAIDF,EAAQ,YAJP,OAKPI,GAAW,GALJ,2CAFX,UAUE,qBAAKR,UAAU,6BAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,qBACEA,UAAU,6BACVc,IAAKC,GACLC,IAAI,WACJC,OAAQ,GACRC,MAAO,KACN,SAGP,sBAAKlB,UAAU,wBAAf,UACE,sBAAMA,UAAU,uCAAhB,sBACe,aAAdM,EACC,cAAC,IAAD,CAAML,IAAI,EAAV,SACE,4CAAe5E,EAAe/C,QAE9B,WAGR,eAAC,IAAD,CACE0H,UAAU,8BACVS,QAAO,sBAAE,sBAAA9H,EAAA,yDACW,kBAAd2H,EADG,iEAIDF,EAAQ,iBAJP,OAKPI,GAAW,GALJ,2CAFX,UAUE,qBAAKR,UAAU,6BAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,qBACEA,UAAU,6BACVc,IAAKK,GACLH,IAAI,gBACJC,OAAQ,GACRC,MAAO,KACN,SAGP,sBAAKlB,UAAU,wBAAf,UACE,sBAAMA,UAAU,uCAAhB,2BACe,kBAAdM,EACC,cAAC,IAAD,CAAML,IAAI,EAAV,SACE,4CAAe5E,EAAe/C,QAE9B,WAGPA,EACC,cAAC,IAAD,CAAM2H,IAAI,EAAV,SACE,eAAC,IAAD,CACED,UAAU,gCACVS,QAAO,sBAAE,sBAAA9H,EAAA,sEACD0H,IADC,OAEPG,GAAW,GAFJ,2CAFX,UAOE,mBAAGR,UAAU,6BAAb,oBAPF,0BAUA,Y,2BCjGG,ICO0BoB,IAAMC,UDPhC,kBACb,cAAC,IAAD,CAAKC,QAAM,EAACtB,UAAU,uBAAtB,SACE,cAAC,GAAD,QENShI,GAAUC,wBAAc,CACnC2I,MAAM,IASOW,GANQ,SAAC,GAAkB,IAAhBnJ,EAAe,EAAfA,SAAe,EACfI,oBAAS,GADM,mBAChCoI,EADgC,KAC1BY,EAD0B,KAGvC,OAAO,cAAC,GAAQxI,SAAT,CAAkBC,MAAO,CAAE2H,OAAMa,OADzB,kBAAMD,GAASZ,KACvB,SAA4CxI,KCFtCsJ,GAJI,WACjB,OAAOC,qBAAW3J,KCWL4J,GAZM,WAAO,IAClBH,EAAWC,KAAXD,OACR,OACE,qBAAKzB,UAAU,MAAf,SACE,mBAAG6B,KAAK,IAAIpB,QAASgB,EAClBzB,UAAU,oFADb,SAEE,mBAAGA,UAAU,iBAAb,yBCEF8B,GAAa,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACJvJ,oBAAS,GADL,mBAC7BwJ,EAD6B,KACnBC,EADmB,KAE9BC,EAAajD,KACbkD,EAAUC,IACd,cACA,WACAL,GAAa,cAGf,OACE,qBAAK/B,UAAWmC,EAAhB,SACE,cAAC,IAAD,CAAWE,OAAK,EAACrC,UAAU,MAA3B,SACE,eAAC,IAAD,CAAQsC,KAAK,QAAQtC,UAAU,yCAA/B,UACE,qBAAKA,UAAU,iCAAf,SACE,eAAC,IAAD,CACE6B,KAAK,qBACL3B,MAAM,YACNF,UAAU,mBACVS,QAAS,WACPwB,GAAaD,IALjB,uBAOY,cAAC,GAAD,CAAO/I,MAAO+I,EAAWE,EAAWhD,IAAMgD,EAAWrD,IAC9CrE,SAAU,IAR7B,IAQmCwH,EAAW,MAAQ,WAGxD,gCACE,cAACO,GAAD,IACA,cAACC,GAAD,IACA,cAAC,GAAD,eAmBZV,GAAWW,aAAe,CACxBV,WAAW,GAGED,UC9DA,OAA0B,iCC8C1BY,GAzCW,WAAO,IAE7BjB,EACEC,KADFD,OAGF,OACE,qBAAKzB,UAAU,cAAf,SACE,eAAC,IAAD,CACEA,UAAU,gEACVsC,KAAK,QAFP,UAIE,eAAC,IAAD,CACEtC,UAAU,8DACV6B,KAAK,6BACLc,OAAO,SACPC,IAAI,sBACJlC,MAAO,CAAEmC,WAAY,QALvB,UAOE,qBACEC,GAAG,YACH9C,UAAU,gCACVU,MAAO,CAAEqC,SAAU,QACnBjC,IAAKkC,GACLhC,IAAI,gBAEN,sBAAMhB,UAAU,8BAAhB,sBAGF,mBACEA,UAAU,yEACVS,QAAS,WACPgB,KAHJ,SAME,mBAAGzB,UAAU,iBAAiBU,MAAO,CAAEmC,WAAY,UAAnD,4BCjCKI,GANU,SAAC,GAAD,IAAG7K,EAAH,EAAGA,SAAUyJ,EAAb,EAAaA,KAAb,OACvB,mBAAGA,KAAMA,EAAMc,OAAO,SAASC,IAAI,sBAAsB5C,UAAU,WAAnE,SACG5H,KC0CU8K,GAlCQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB1B,EAAWC,KAAXD,OACR,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CACEhB,QAASgB,EACT2B,IAAKD,EAAKE,GAAKC,UAAeL,GAC9BpB,KAAMsB,EAAKtB,KACXwB,GAAIF,EAAKE,GAJX,UAKGF,EAAKI,YACJ,qBACEvD,UAAU,mCACVwD,wBAAyB,CAAEC,OAAQN,EAAKI,cAG3CJ,EAAKO,OAAS,+BAAOP,EAAKO,QAC1BP,EAAKQ,WACJ,qBACE3D,UAAU,mCACVwD,wBAAyB,CAAEC,OAAQN,EAAKQ,mBCqGrCC,GA3HS,WACtB,OACE,sBAAK5D,UAAU,cAAf,UACE,gCACE,oBAAIA,UAAU,0BAAd,uBACA,eAAC,IAAD,CAAKA,UAAU,8BAAf,UACE,cAAC,GAAD,CACEmD,KAAM,CACJO,MAAO,WACPL,GAAI,YACJE,WAAY,uCACZI,UAAW,MAGf,cAAC,GAAD,CACER,KAAM,CACJO,MAAO,OACPL,GAAI,QACJE,WAAY,4CACZI,UAAW,MAGf,cAAC,GAAD,CACER,KAAM,CACJO,MAAO,cACPL,GAAI,eACJE,WAAY,sCACZI,UAAW,YAKnB,gCACE,oBAAI3D,UAAU,0BAAd,mBACA,eAAC,IAAD,CAAKA,UAAU,8BAAf,UACE,cAAC,GAAD,CACEmD,KAAM,CACJO,MAAO,UACP7B,KAAM,WACN0B,WAAY,2CACZI,UAAW,MAGf,cAAC,GAAD,CACER,KAAM,CACJO,MAAO,WACP7B,KAAM,YACN0B,WAAY,4CACZI,UAAW,YAKnB,gCACE,oBAAI3D,UAAU,0BAAd,yBACA,eAAC,IAAD,CAAKA,UAAU,8BAAf,UACE,cAAC,GAAD,CACEmD,KAAM,CACJO,MAAO,YACP7B,KAAM,2CACN0B,WAAY,8CACZI,UAAW,MAGf,cAAC,GAAD,CACER,KAAM,CACJO,MAAO,YACP7B,KAAM,6CACN0B,WAAY,8CACZI,UAAW,MAGf,cAAC,GAAD,CACER,KAAM,CACJO,MAAO,QACP7B,KAAM,yCACN0B,WAAY,8CACZI,UAAW,MAGf,cAAC,GAAD,CACER,KAAM,CACJO,MAAO,YACP7B,KAAK,6BAAD,OAA+B3M,EAAmBC,WvB9E3C,IuB+EXoO,WAAY,uCACZI,UAAW,YAKnB,gCACE,oBAAI3D,UAAU,0BAAd,uBACA,eAAC,IAAD,CAAKA,UAAU,8BAAf,UACE,cAAC,GAAD,CACEmD,KAAM,CACJO,MAAO,WACP7B,KAAM,kCACN0B,WAAY,iDACZI,UAAW,MAGf,cAAC,GAAD,CACER,KAAM,CACJO,MAAO,UACP7B,KAAM,kCACN0B,WAAY,gDACZI,UAAW,MAGf,cAAC,GAAD,CACER,KAAM,CACJO,MAAO,SACP7B,KAAM,sCACN0B,WAAY,+CACZI,UAAW,gBC5FVE,GAtBK,WAAO,IACjBjD,EAASc,KAATd,KACFuB,EAAUC,IACd,eACA,OACA,SACAxB,GAAQ,QAGV,OACE,eAAC,IAAD,CACEwC,IAAI,QACJpD,UAAWmC,EACX2B,GAAI,CAAEC,KAAM,GACZC,GAAI,CAAED,KAAM,GAJd,UAME,cAAC,GAAD,IACA,cAAC,GAAD,QClBAE,GAAa,SAAC,GAAD,IAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,UAAxB,OACjB,wBAAQpE,UAAU,kDAAlB,SACE,cAAC,IAAD,CAAWqC,MAAO6B,EAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACGC,EAAUE,KAAI,SAAClB,EAAMpF,GAAP,OACb,cAAC,IAAD,UACE,cAAC,IAAD,CAEE8D,KAAMsB,EAAKE,GAFb,SAIGF,EAAKO,SALI3F,QAUlB,sBAAMiC,UAAU,iCAAhB,SAAkDoE,YAqB1DH,GAAWxB,aAAe,CACxByB,WAAW,EACXE,UAAW,kCACXD,UAAW,CACT,CACET,MAAM,UAAD,OAAYxO,EAAmBC,WzBpCjB,IyBqCnBkO,GAAG,8BAAD,OAAgCnO,EAAmBC,WzBrClC,OyB0CV8O,UC9CTK,GAAgB,SAAC,GAAD,IAAGlM,EAAH,EAAGA,SAAUmM,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,SAAvB,OACpB,cAAC,IAAD,CAAWnC,OAAK,EAAhB,SACE,eAAC,IAAD,WACE,cAAC,GAAD,IACA,eAAC,IAAD,CACErC,UAAU,mBACV8D,GAAI,CAAEC,KAAM,GAAIU,OAAQ,GACxBT,GAAI,CAAED,KAAM,EAAGU,OAAQ,GACvBC,GAAG,KACHtB,IAAI,OALN,WAOImB,GAAY,cAAC,GAAD,IACbnM,GACCoM,GAAY,cAAC,GAAD,aAiBtBF,GAAc7B,aAAe,CAC3B8B,UAAU,EACVC,UAAU,GAGGF,U,kDCXAK,GA3BG,SAAC,GAA8C,IAA5CjB,EAA2C,EAA3CA,MAAOkB,EAAoC,EAApCA,SAAU5E,EAA0B,EAA1BA,UAAc6E,EAAY,iDACxD1C,EAAUC,IACdpC,EACA,cAEA,WAGF,OACE,eAAC,IAAD,2BAAK8E,GAAG,KAAKJ,GAAG,KAAK1E,UAAWmC,GAAc0C,GAA9C,cACE,sBAAM7E,UAAU,+BAAhB,SAAgD4E,IAChD,oBAAI5E,UAAU,yCAAd,SAAwD0D,S,mDCd9DqB,KAAMC,SAASC,aAAeF,KAAMC,SAASE,KAC7CH,KAAMI,YAAYF,aAAeF,KAAMI,YAAYD,KAAKE,OAAO,CAC7DC,KAD6D,SACxDC,GAGH,GAFAP,KAAMI,YAAYD,KAAKK,UAAUF,KAAKG,KAAK/N,KAAM6N,GAE7C7N,KAAKgO,MAAMC,QAAQC,SAAWlO,KAAKgO,MAAMC,QAAQC,QAAQrK,OAAQ,CACnE,IAAMsK,EAAcnO,KAAKgO,MAAMC,QAAQC,QAAQ,GACvCE,EAAQpO,KAAKgO,MAAbI,IACAC,EAAMF,EAAYG,kBAAlBD,EACFE,EAAOvO,KAAKgO,MAAMQ,OAAO,YAAYC,IACrCC,EAAU1O,KAAKgO,MAAMQ,OAAO,YAAYG,OAG9CP,EAAIQ,OACJR,EAAIS,YACJT,EAAIU,OAAOT,EAAGE,GACdH,EAAIW,OAAOV,EAAGK,GACdN,EAAIY,UAAY,GAChBZ,EAAIa,YAAc,OAClBb,EAAIc,SACJd,EAAIe,cAKK7B,UAAf,EClBM8B,GAAS/I,MAAM9D,KAAK,IAAI8D,MAAM,KAAK,SAACgJ,EAAG7I,GAAJ,OAAU,QAE7C8I,G,oDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,UAAY7F,IAAM8F,YAHN,E,gEAOjB,IAAMC,EAAY,6BACb,CACDC,qBAAqB,EACrBC,YAAY,EACZC,OAAQ,CACNC,SAAS,GAEXC,SAAU,CACRC,SAAS,EACTC,QAAQ,GAEVtJ,SAAU,CACRuJ,MAAO,CACLC,OAAQ,GAEV1C,KAAM,CACJ2C,QAAS,MAGb5B,OAAQ,CACN6B,MAAO,CACL,CACEC,WAAW,EACXC,MAAO,CACLT,SAAS,KAIfU,MAAO,CACL,CACEF,WAAW,EACXG,YAAY,EACZF,MAAO,CACLT,SAAS,EACTY,QAAQ,EAGRC,aAAcC,KAAKC,IAAL,MAAAD,KAAI,aAAQ5Q,KAAKuP,MAAMtL,UAAU,GAAGqB,OAAQ,QAMjEtF,KAAKuP,MAAMG,cAGhB1P,KAAK8Q,YAAL,6BACK,CACDjG,KAAM,OACNvF,KAAK,6BACA,CACD8J,YAEC,CACD2B,SAAU/Q,KAAKuP,MAAMtL,YAGzB+M,QAAStB,IAER1P,KAAKuP,MAAMuB,aAGhB,IAAIxD,GAAMtN,KAAKwP,UAAUyB,QAASjR,KAAK8Q,e,yCAGtBI,GACbA,EAAUjN,UAAU,GAAGqB,KAAKzB,SAAW7D,KAAKuP,MAAMtL,UAAU,GAAGqB,KAAKzB,SAIxE7D,KAAK8Q,YAAYxL,KAAKyL,SAAS,GAAGzL,KAAOtF,KAAKuP,MAAMtL,UAAU,GAAGqB,KACjE,IAAIgI,GAAMtN,KAAKwP,UAAUyB,QAASjR,KAAK8Q,gB,+BAG/B,IAAD,EAWH9Q,KAAKuP,MATP4B,EAFK,EAELA,UACAC,EAHK,EAGLA,MACA5P,EAJK,EAILA,MACA6P,EALK,EAKLA,WACAC,EANK,EAMLA,SACAC,EAPK,EAOLA,OACAC,EARK,EAQLA,QACAzO,EATK,EASLA,SACA0O,EAVK,EAULA,UAGIC,EAAc/G,IAClB,cACAwG,GAAS,uBAAoBA,IAGzBQ,EAAkBhH,IACR,MAAdwG,EAAoB,aAAe,aAG/BS,EAAsBjH,IAC1B,SACc,MAAdwG,EAAoB,qBAAuB,QAGvCU,EAAmBlH,IACvB,oBACc,MAAdwG,GAAqB,eAGjBW,EAAenH,IACnB,qBACA,iBACc,MAAdwG,GAAqB,QAGjBY,EAAepH,IACnB,qBACA,QACc,MAAdwG,EAAoB,OAAS,OAGzBa,EAAwBrH,IAC5B,oBACc,MAAdwG,GAAqB,gCACrB,cAGIc,EAAoBtH,IACxB,0BADkC,mCAEN2G,EAAW,WAAa,aAGhDY,EAA6B,MAAdf,EAAoB,IAAM,GAE/C,OACE,cAAC,IAAD,CAAMgB,OAAK,EAAC5J,UAAWmJ,EAAvB,SACE,eAAC,IAAD,CAAUnJ,UAAWoJ,EAArB,UACE,sBAAKpJ,UAAWqJ,EAAhB,UACE,sBAAKrJ,UAAWsJ,EAAhB,UACE,sBAAMtJ,UAAWuJ,EAAjB,SAAgCV,IAChC,qBAAI7I,UAAWwJ,EAAf,UACGP,EAAQ,cAAC,GAAD,CAAOhQ,MAAQA,EAAQuB,SAAUA,IAAYwO,EADxD,OAEQ,sBAAMhJ,UAAWuJ,EAAjB,SAAgCL,UAG1C,qBAAKlJ,UAAWyJ,EAAhB,SACE,uBAAMzJ,UAAW0J,EAAjB,UACE,cAAC,GAAD,CAAOzQ,MAAQ6P,EAAatO,SAAU,IADxC,YAKJ,wBACEyG,OAAQ0I,EACRE,IAAKpS,KAAKwP,UACVjH,UAAS,sBAAiB8J,mB,GA/Jb1I,IAAMC,WAgN/B0F,GAAWtE,aAAe,CACxBsG,UAAU,EACVD,WAAY,EACZ7P,MAAO,EACP4P,MAAO,QACP1B,aAAcxJ,OAAOoM,OAAO,MAC5BxB,YAAa5K,OAAOoM,OAAO,MAC3BrO,UAAW,GACXsO,YAAa,IAGAjD,U,UCvNMkD,G,WAKnB,WAAYzS,GAAS,oBACnBC,KAAKyS,SAAW,IAAI7T,IAAS4T,EAAUrU,QAASuU,GAAiB3S,GACjEC,KAAKD,OAASA,E,wLAIPC,KAAKD,OAAO1B,c,mQAIZM,E,SAAkCqB,KAAKE,S,iDAArBC,U,sRAIlBxB,E,SAAkCqB,KAAKE,S,+BAAUF,KAAKyS,SAAStU,Q,uBAA7CiC,U,iSAInBuS,EAAU,IAAI/T,IAClBV,EAAeC,QACfO,EACAsB,KAAKD,QAED+C,EAASjF,SAAO+U,UAAUC,W,SACfF,EAAQG,QAAQ9S,KAAKyS,SAAStU,QAAS2E,G,cAAlDiQ,E,gBACAA,EAAGC,O,gCAEFlQ,G,0QAIkB9C,KAAKyS,S,KAAkBvU,EAAeM,I,SAAWwB,KAAKE,S,wCAAxC+S,S,4CAA/BnQ,E,EAAAA,O,kBACDA,G,oQAiGA9C,KAAKyS,S,KAAwBvU,EAAeM,I,SAAWwB,KAAKE,S,iDAA9CgT,e,iMAGXpQ,G,uFACO9C,KAAKyS,SAASU,QAAQjV,EAAeM,IAAKwE,QAAMoQ,WAAWtQ,I,cAAtEiQ,E,gBACAA,EAAGC,O,8KAGGlQ,G,uFACK9C,KAAKyS,SAASY,SAASnV,EAAeM,IAAKwE,QAAMoQ,WAAWtQ,I,cAAvEiQ,E,gBACAA,EAAGC,O,4QAIQhT,KAAKyS,SAASU,QAAQjV,EAAeM,IAAKoE,G,cAArDmQ,E,gBACAA,EAAGC,O,2KA7GMM,EAAe3L,G,2GACF7H,EAAWG,KAAKE,UAAUxB,EAAkBR,S,cACxEoV,IADIA,E,QAC+B9P,WAAa,K,SAErBhF,EAAc0B,UAAUxB,EAAkBR,S,cACrEqV,IADIA,E,QAC6B/P,WAAa,K,UAE1B9E,EAAkBwB,UAAUqS,EAAUrU,S,eAC1DqE,IADIA,E,QACeiB,WAAa,K,UAER9E,EAAkB8U,c,eAC1CA,IADIA,E,QACuBhQ,WAAa,KAwBlCiQ,EAA2B,IAD3BC,EAA0B,IAD1BC,EALeN,GATfO,GADA9L,EAFcyL,GAHdM,EAAYtR,EAAUiR,IAEPF,EAAkBO,IAIEnM,IAOnCoM,EAAaD,IAFAN,EAAkBD,EAAkBxL,GACvBJ,IAQA9I,I,kBAIzB,CAGL+U,YACAD,cACAD,aACAM,kBAAmBJ,GAAa,IAAOC,GACvCI,cAAejR,QAAMoQ,WAAW5Q,EAAQiB,YACxCyQ,iBAAkBH,I,4QAKSvB,EAAUvS,KAAKkU,SAASjW,EAAeM,K,uBAA5D4V,E,EAAAA,W,SACsB5B,EAAUvS,KAAKoU,kB,cAAvCA,E,yBACCD,EAAWE,IAAID,I,0RAKSvU,EAAWG,KAAKE,UAAUxB,EAAkBR,S,cAC3EoW,IADIA,E,QACqC9Q,W,SAGrB9E,EAAkBwB,UAAUqS,EAAUrU,S,cAC1DqE,IADIA,E,QACeiB,W,UAGK9E,EAAkB8U,c,eAC1CA,IADIA,E,QACuBhQ,W,UAGAhF,EAAc0B,UAAUxB,EAAkBR,S,eACrEqV,IADIA,E,QAC6B/P,WAI3B+Q,GADAV,EAAYtR,EAAUiR,GACSD,EAAiB,EAGhDiB,EAAeF,EAAqBT,EAAa,KACjDY,EAAclB,EAAiBM,EAAa,K,UAE3BtB,EAAUmC,a,eACjCA,IADIA,E,QACqBlR,W,kBAElB,CACLgR,cACAC,aACAC,aACAC,eAAgBJ,EAAmB,KACnCzM,iBAAkB2M,EAAaD,EAC/BI,cAAerS,EAAU,O,yGAjIVgQ,GACZrU,QAAUV,EAAmBE,U9BJb,G8BGJ6U,GAGZvS,KAAO,IAAIrB,IAAS4T,GAAUrU,QAASuU,GAAiB9U,GCbjE,IAoBekX,GApBM,WAAO,IAAD,EACKlU,cAAtBC,EADiB,EACjBA,QAASC,EADQ,EACRA,SADQ,EAESC,mBAAS,MAFlB,mBAElBpD,EAFkB,KAEPoX,EAFO,KAInBzT,EAAI,uCAAG,4BAAAJ,EAAA,0DACPJ,EADO,uBAEHK,EAAW,IAAItD,YAAiBuD,aAAaN,GACnDiU,EAAa,IAAIvC,GAAUrR,EAASE,cAH3B,0BAMX0T,EAAa,MANF,2CAAH,qDAaV,OAJA9T,qBAAU,WACRK,MACC,CAACT,EAASC,IAENnD,GCKMqX,GAjBW,WAAO,IAAD,EACAjU,mBAAS6B,GADT,mBACvBJ,EADuB,KACdC,EADc,KAExBR,EAAQD,IACRrE,EAAYmX,KAEZpS,EAAeC,sBAAW,sBAAC,4BAAAzB,EAAA,6EACTvD,QADS,IACTA,OADS,EACTA,EAAWsX,iBADF,OACzBzS,EADyB,OAE/BC,EAAWD,GAFoB,2CAG9B,CAACP,IAMJ,OAJAhB,qBAAU,WACRyB,MACC,CAACT,EAAOQ,IAEJD,GCSM0S,GAxBa,WAAO,IAAD,EACEnU,mBAASuB,IAAUC,KAAK,IAD1B,mBACzBnC,EADyB,KACd+U,EADc,OAK5BvU,cAFFC,EAH8B,EAG9BA,QACAC,EAJ8B,EAI9BA,SAEImB,EAAQD,IACRrE,EAAYmX,KAEZM,EAAiBzS,sBAAW,sBAAC,4BAAAzB,EAAA,6EACTvD,QADS,IACTA,OADS,EACTA,EAAW0X,mBADF,OAC3BjV,EAD2B,OAEjC+U,EAAa/U,GAFoB,2CAGhC,CAACzC,IAMJ,OAJAsD,qBAAU,WACRmU,MACC,CAACvU,EAASC,EAAUmB,IAEhB,CACL7B,UAAWA,GAAakC,IAAUC,KAAK,GACvC4S,iBCvBWG,GANQ,SAAC,GAAD,IAAG3U,EAAH,EAAGA,SAAUyJ,EAAb,EAAaA,KAAb,OACrB,mBAAGA,KAAMA,EAAMc,OAAO,SAASC,IAAI,sBAAsB5C,UAAU,8BAAnE,SACG5H,KCsKU4U,GAnID,SAAC,GAKR,IAJL9K,EAII,EAJJA,WACA6I,EAGI,EAHJA,cACAW,EAEI,EAFJA,cACAC,EACI,EADJA,iBACI,GACgBtT,cAAZC,QACoBE,mBAAS,IAFjC,mBAEG+B,EAFH,KAEW0S,EAFX,OAMAN,KAFFC,EAJE,EAIFA,aACA/U,EALE,EAKFA,UAEIzC,EAAYmX,KACZtS,EAAUwS,KACVS,GAAkBrV,EAAUsV,SAE5BC,EAAc3S,QAAMoQ,WAAWtQ,EAAOW,YACtCmS,EAAc3B,EAAc4B,IAAIF,GAElCG,EAAc,EACdC,EAAa,EACjB,IAAK9B,EAAcyB,UAAY5S,EAAQ,CACrC,IAAMkT,EAAQL,EAAYlS,WAAamS,EAAYnS,WACnDqS,EAAcE,EAAQ1C,EAAgBzU,EACtCkX,EAAa7B,EAAmB8B,EAGlC,OACE,eAAC,IAAD,CAAM7D,OAAK,EAAC5J,UAAU,gBAAtB,UACE,cAAC,IAAD,CAAYA,UAAU,gBAAtB,SACE,oBAAIA,UAAU,MAAd,yCAGF,eAAC,IAAD,CAAUA,UAAU,qBAApB,UACE,uBAAO0N,QAAQ,WAAf,sCACA,eAAC,IAAD,WACE,cAAC,IAAD,CACE5K,GAAG,WACH6K,YAAY,IACZC,SAAU,SAACjT,GACT,IAAMG,EAAMH,EAAEgI,OAAO1J,MACrBgU,EAAUnS,GAAO,MAEnB7B,MAAOsB,IAET,cAAC,IAAD,CAAiB+H,KAAK,SAAtB,SACE,cAAC,IAAD,CACEpC,MAAM,QACNO,QAAS,WACFxG,EAAQkT,UACXF,EAAUxS,QAAMC,YAAYT,KAJlC,mBAWF,cAAC,IAAD,CAAiBqI,KAAK,SAAtB,SACE,cAAC,IAAD,CACEpC,MAAM,SACN2N,SAAO,EACPpN,QAAO,sBAAE,4BAAA9H,EAAA,0DACHuU,EADG,iDAGG9X,QAHH,IAGGA,OAHH,EAGGA,EAAW0Y,MAAMvT,GAHpB,OAIH0S,EAAU,KAJP,gDAMH3T,QAAQC,IAAI,gBAAZ,MACAqT,EAAa7S,IAAUC,KAAK,IAPzB,4EAagB5E,QAbhB,IAagBA,OAbhB,EAagBA,EAAW2Y,oBAb3B,QAaCxT,EAbD,OAcLqS,EAAarS,GAdR,mDAgBLjB,QAAQC,IAAI,kBAAZ,MAhBK,iEAHX,SAuBG2T,EAAiB,QAAU,iBAKlC,eAAC,IAAD,CAAWc,OAAK,EAAChO,UAAU,mBAA3B,UACE,cAAC,IAAD,IACA,eAAC,IAAD,CAAeA,UAAU,cAAzB,UACE,sBAAMA,UAAU,gCAAhB,SAAgD,oDAChD,sBAAMA,UAAU,qDAAhB,SACE,4BAAG,cAAC,GAAD,CAAO/G,MAAQgB,WAGtB,eAAC,IAAD,CAAe+F,UAAU,cAAzB,UACE,sBAAMA,UAAU,gCAAhB,yBACA,uBAAMA,UAAU,qDAAhB,eACI,cAAC,GAAD,CAAO/G,MAAQuU,EAAahT,SAAU,UAG5C,eAAC,IAAD,CAAewF,UAAU,cAAzB,UACE,sBAAMA,UAAU,gCAAhB,2BACA,uBAAMA,UAAU,qDAAhB,cACG,cAAC,GAAD,CAAO/G,MAAQsU,UAGpB,eAAC,IAAD,CAAevN,UAAU,cAAzB,UACE,sBAAMA,UAAU,gCAAhB,oCACA,uBAAMA,UAAU,qDAAhB,eACI,cAAC,GAAD,CAAO/G,MAAQsU,EAAcrL,EAAWrD,IAAMrE,SAAU,gBAMlE,cAAC,IAAD,CAAYwF,UAAU,aAAtB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKA,UAAU,eAAe0E,GAAG,KAAKV,GAAG,KAAzC,SACE,eAAC,IAAD,CACEnC,KAAI,wCAAmC3M,EAAmBE,UnChJ/C,ImCiJXgO,IAAK2J,GAFP,uBAIa7X,EAAmBE,UnCnJnB,gBoC0EV6Y,GAxEK,SAAC,GAMd,IALLC,EAKI,EALJA,cACAxC,EAII,EAJJA,cACAX,EAGI,EAHJA,cACA7I,EAEI,EAFJA,WACAyJ,EACI,EADJA,iBAEI4B,EAAc,EACdY,EAAc,EAElB,IAAKzC,EAAcyB,WAAae,EAAcf,SAAU,CACtD,IAAMM,EAAQS,EAAchT,WAAawQ,EAAcxQ,WACvDqS,EAAcE,EAAQ1C,EAAgBzU,EACtC6X,EAAcxC,EAAmB8B,EAGnC,OACE,eAAC,IAAD,CAAM7D,OAAK,EAAC5J,UAAU,gBAAtB,UACE,cAAC,IAAD,CAAYA,UAAU,gBAAtB,SACE,oBAAIA,UAAU,MAAd,mCAGF,cAAC,IAAD,CAAUA,UAAU,qBAApB,SACE,eAAC,IAAD,CAAWgO,OAAK,EAAChO,UAAU,mBAA3B,UACE,eAAC,IAAD,CAAeA,UAAU,cAAzB,UACE,sBAAMA,UAAU,gCAAhB,SAAgD,+CAChD,sBAAMA,UAAU,qDAAhB,SACE,kCAAI,cAAC,GAAD,CAAO/G,MAAQkV,EAAc3T,SAAU,YAG/C,eAAC,IAAD,CAAewF,UAAU,cAAzB,UACE,sBAAMA,UAAU,gCAAhB,2BACA,sBAAMA,UAAU,qDAAhB,SACE,cAAC,GAAD,CAAO/G,MAAQsU,SAGnB,eAAC,IAAD,CAAevN,UAAU,cAAzB,UACE,sBAAMA,UAAU,gCAAhB,4BACA,sBAAMA,UAAU,qDAAhB,SACE,cAAC,GAAD,CAAO/G,MAAsB,EAAdsU,SAGnB,eAAC,IAAD,CAAevN,UAAU,cAAzB,UACE,sBAAMA,UAAU,gCAAhB,6BACA,sBAAMA,UAAU,qDAAhB,SACE,cAAC,GAAD,CAAO/G,MAAsB,GAAdsU,SAGnB,eAAC,IAAD,CAAevN,UAAU,cAAzB,UACE,sBAAMA,UAAU,gCAAhB,oCACA,uBAAMA,UAAU,qDAAhB,cACG,cAAC,GAAD,CAAO/G,MAAQsU,EAAcrL,EAAWrD,IAAMrE,SAAU,UAG7D,eAAC,IAAD,CAAewF,UAAU,cAAzB,UACE,sBAAMA,UAAU,gCAAhB,qCACA,uBAAMA,UAAU,qDAAhB,cACG,cAAC,GAAD,CAAO/G,MAAuB,EAAdsU,EAAmBrL,EAAWrD,IAAMrE,SAAU,UAGnE,eAAC,IAAD,CAAewF,UAAU,cAAzB,UACE,sBAAMA,UAAU,gCAAhB,sCACA,uBAAMA,UAAU,qDAAhB,cACG,cAAC,GAAD,CAAO/G,MAAuB,GAAdsU,EAAoBrL,EAAWrD,IAAMrE,SAAU,mBC/C/D4T,GAtBU,WAAO,IAAD,EACC5V,mBAAS6B,GADV,mBACtBJ,EADsB,KACbC,EADa,OAED7B,cAArBC,EAFsB,EAEtBA,QAASC,EAFa,EAEbA,SACVnD,EAAYmX,KACZ7S,EAAQD,IAERU,EAAY,uCAAG,4BAAAxB,EAAA,yDACdL,GAAYlD,EADE,uBAEjB8E,EAAWG,GAFM,iDAKGjF,QALH,IAKGA,OALH,EAKGA,EAAW8Y,gBALd,OAKbjU,EALa,OAMnBC,EAAWD,GANQ,2CAAH,qDAalB,OAJAvB,qBAAU,WACRyB,MACC,CAAC7B,EAASlD,EAAWmD,EAAUmB,IAE3BO,GCGMoU,GAtBW,WAAO,IAAD,EACA7V,mBAASuB,IAAUC,KAAK,IADxB,mBACvBsU,EADuB,KACdC,EADc,OAEFlW,cAArBC,EAFuB,EAEvBA,QAASC,EAFc,EAEdA,SACVnD,EAAYmX,KACZ7S,EAAQD,IAER+U,EAAY,uCAAG,4BAAA7V,EAAA,yDACdL,EADc,uBAEjBiW,EAAWxU,IAAUC,KAAK,IAFT,iDAKG5E,QALH,IAKGA,OALH,EAKGA,EAAWuV,iBALd,OAKb2D,EALa,OAMnBC,EAAWD,GANQ,2CAAH,qDAalB,OAJA5V,qBAAU,WACR8V,MACC,CAAClW,EAASC,EAAUmB,EAAOtE,IAEvBkZ,GCwFML,GA7FK,SAAC,GAGd,IAFNC,EAEK,EAFLA,cACAhM,EACK,EADLA,WACK,EACwB1J,qBADxB,mBACG+B,EADH,KACW0S,EADX,KAEEtC,EAAiB0D,MAAuB,IACxCjZ,EAAYmX,KAElB,OACE,eAAC,IAAD,CAAM3C,OAAK,EAAC5J,UAAU,gBAAtB,UACE,cAAC,IAAD,CAAYA,UAAU,gBAAtB,SACE,oBAAIA,UAAU,MAAd,+BAGF,eAAC,IAAD,CAAUA,UAAU,qBAApB,UACE,cAAC,IAAD,CACEE,MAAM,SACN2N,SAAO,EACPpN,QAAO,sBAAE,sBAAA9H,EAAA,6EACDvD,QADC,IACDA,OADC,EACDA,EAAWqZ,eADV,2CAHX,2BASA,eAAC,IAAD,CAAWT,OAAK,EAAChO,UAAU,mBAA3B,UACE,cAAC,IAAD,IACA,eAAC,IAAD,CAAeA,UAAU,cAAzB,UACE,sBAAMA,UAAU,gCAAhB,SAAgD,kDAChD,sBAAMA,UAAU,qDAAhB,SACE,8BAAG,cAAC,GAAD,CAAO/G,MAAQ0R,IAAlB,iBAGJ,eAAC,IAAD,CAAe3K,UAAU,cAAzB,UACE,sBAAMA,UAAU,gCAAhB,oCACA,uBAAMA,UAAU,qDAAhB,cACG,cAAC,GAAD,CAAO/G,MAAQwB,QAAMC,YAAYiQ,GAAkBzI,EAAWrD,IAAMrE,SAAU,gBAOvF,eAAC,IAAD,CAAYwF,UAAU,aAAtB,UACE,uBAAO0N,QAAQ,gBAAf,wCACA,eAAC,IAAD,WACE,cAAC,IAAD,CACE5K,GAAG,gBACH6K,YAAY,IACZC,SAAU,SAACjT,GACT,IAAMG,EAAMH,EAAEgI,OAAO1J,MACrBgU,EAAUnS,GAAY,KAExB7B,MAAOsB,IAET,cAAC,IAAD,CAAiB+H,KAAK,SAAtB,SACE,cAAC,IAAD,CACEpC,MAAM,QACNO,QAAS,WACFyN,EAAcf,UACjBF,EAAUxS,QAAMC,YAAYwT,KAJlC,mBAUF,cAAC,IAAD,CAAiB5L,KAAK,SAAtB,SACE,cAAC,IAAD,CACEpC,MAAM,SACN2N,SAAO,EACPpN,QAAO,sBAAE,sBAAA9H,EAAA,6EACDvD,QADC,IACDA,OADC,EACDA,EAAWsZ,QAAQnU,GADlB,OAEP0S,EAAU,KAFH,2CAHX,0BAaJ,eAAC,IAAD,CAAWe,OAAK,EAAChO,UAAU,mBAA3B,UACE,cAAC,IAAD,IACA,eAAC,IAAD,CAAeA,UAAU,cAAzB,UACE,sBAAMA,UAAU,gCAAhB,SAAgD,iDAChD,sBAAMA,UAAU,qDAAhB,SACE,4BAAG,cAAC,GAAD,CAAO/G,MAAQiV,qB,qBClF1BS,GAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAyPzCC,GAvPO,SAAC,GAIhB,IAHL5R,EAGI,EAHJA,MACAC,EAEI,EAFJA,UACAkK,EACI,EADJA,aAEMF,EAAYC,sBADd,EAE4B1O,oBAAS,GAFrC,mBAEGqW,EAFH,KAEaC,EAFb,OAGoBtW,mBAAS,OAH7B,mBAGG8J,EAHH,KAGSyM,EAHT,OAIsBvW,mBAAS,MAJ/B,mBAIGiN,EAJH,KAIUuJ,EAJV,KAMEjS,EAAO,CACX,IAAO,CACL2L,QAAS1L,EAAMiS,IACfC,KAAMjS,EAAUgS,IAChBE,QAAS,OAEX,eAAgB,CACdzG,QAAS1L,EAAMoS,YACfF,KAAMjS,EAAUmS,YAChBD,QAAS,gBAEX,qBAAsB,CACpBzG,QAAS1L,EAAMqS,IACfH,KAAMjS,EAAUoS,IAChBF,QAAS,OAEX,wBAAyB,CACvBzG,QAAS1L,EAAMyO,kBACfyD,KAAMjS,EAAUwO,kBAChB0D,QAAS,SAEX,kBAAmB,CACjBzG,QAAS1L,EAAMsS,YACfJ,KAAMjS,EAAUqS,YAChBH,QAAS,WAEX7M,GACI7G,EAAesB,EAAK2L,QAAQ3L,EAAK2L,QAAQpN,OAAS,IAAM,EAExDiU,EAAc1T,GAAWkB,EAAKmS,MAC9BM,EAAU3T,GAAWkB,EAAK2L,SA6IhC,OA3IAhQ,qBAAU,WAMR,IAAMgD,EAAY,CAChBmL,OAAQ8H,GACRnG,SAAU,CACR,CACEK,MAAO,YACP4G,KAAM,QACN1S,KAAMA,EAAKmS,KACXQ,gBAAiB,wBACjBC,YAAa,sBAGbC,WAAY,CAAC,EAAG,GAChBC,YAAa,EACbC,YAAa,EACbC,iBAAkB,GAGpB,CACElH,MAAO,eACP4G,KAAM,QACN1S,KAAMA,EAAK2L,QACXiH,YAAa,qBACbD,gBAAiB,uBAGjBG,YAAa,IACbC,YAAa,EACbC,iBAAkB,KAKlBtH,EAAO,6BACR,CACDpB,YAAY,EACZC,OAAQ,CACN0I,SAAU,OAEZ5R,SAAU,CACR8G,KAAM,CAEJ2C,QAAS,IAEXF,MAAO,CACLC,OAAQ,IAGZ3B,OAAQ,CACN6B,MAAO,CACL,CACEC,WAAW,EACXC,MAAO,CACLiI,SADK,SACIC,EAAMC,GAOb,OAAOD,MAKfjI,MAAO,CACL,CACED,MAAO,CACLI,aAAc,GACd6H,SAFK,SAEIC,GACP,OAAa,IAATA,EACKA,EAEFE,KAAOF,EAAM,CAAEG,QAAQ,SAMxCC,MAAO,CACLC,KAAM,UACNC,WAAW,GAEbhJ,SAAU,CACRE,QAAQ,EACR6I,KAAM,UACNC,WAAW,EACXC,UAAW,CACT5H,MADS,SACH1F,EAAMpG,GACV,IAAMvC,EAAoB,QAAT8H,EAAiB,EAAI,EAClCuG,EAAQvO,GAAe6I,EAAKlK,MAAOuB,GACpCkW,iBAYH,MAVa,QAATpO,IACFuG,GAAS,KAGE,uBAATvG,IACFuG,EAAQ,IAAMA,GAGA9L,EAAKyL,SAASrF,EAAKwN,cAAc9H,MAEhC,KAAOA,OAK7B1B,GAGD1B,GACFA,EAAMmL,UAGR,IAAMC,EAAW,IAAI9L,GAAMkC,EAAUyB,QAAS,CAC5CpG,KAAM,eACNvF,KAAMrB,EACN+M,YAIIqI,EAAUD,EAASE,eAAe,GACpCD,GAAWA,EAAQ/T,KAAK,KAC1B+T,EAAQ/T,KAAK,GAAGiU,OAAOpJ,OAAS,EAChCkJ,EAAQ/T,KAAKrB,EAAU8M,SAAS,GAAGzL,KAAKzB,OAAS,GAAG0V,OAAOpJ,OAAS,GAItEiJ,EAASI,SAETjC,EAAS6B,KACR,CAACpV,IAGF,eAAC,IAAD,CAAMmO,OAAK,EAAC5J,UAAU,QAAtB,UACE,eAAC,IAAD,CAAYA,UAAU,gBAAtB,UACE,eAAC,IAAD,CACEY,KAAMiO,EACNpN,OAAQ,kBAAMqN,GAAaD,IAC3B9K,KAAK,KACL/D,UAAU,sBAJZ,UAME,cAAC,IAAD,CAAgBkR,OAAK,EAAChR,MAAM,SAAS2N,SAAO,EAA5C,SAA8CvL,IAC9C,eAAC,IAAD,WACE,cAAC,IAAD,CAAc7B,QAAS,kBAAMsO,EAAQ,QAArC,iBACA,cAAC,IAAD,CAActO,QAAS,kBAAMsO,EAAQ,iBAArC,0BACA,cAAC,IAAD,CAActO,QAAS,kBAAMsO,EAAQ,uBAArC,gCACA,cAAC,IAAD,CAActO,QAAS,kBAAMsO,EAAQ,0BAArC,6CAEA,cAAC,IAAD,CAActO,QAAS,kBAAMsO,EAAQ,oBAArC,mCAGJ,oBAAI/O,UAAU,qBAAd,+BAIF,eAAC,IAAD,CAAUA,UAAU,OAApB,UACE,cAAC,IAAD,CAAKA,UAAU,8BAAf,SAIE,sBAAKA,UAAU,4CAAf,UACE,gCACE,eAAC,IAAD,CACE+D,KAAK,KACL7D,MAAM,QACN2N,SAAO,EAHT,2BAKgB,cAAC,GAAD,CAAO5U,MAAOsW,OAE9B,eAAC,IAAD,CACExL,KAAK,KACL7D,MAAM,QACN2N,SAAO,EAHT,8BAKmB,cAAC,GAAD,CAAO5U,MAAOuW,UAGnC,qBAAKxP,UAAU,4BAAf,SACE,eAAC,IAAD,CACE+D,KAAK,KACL7D,MAAM,YACNF,UAAU,cAHZ,qBAKWjD,EAAKoS,QALhB,KAK4C,QAAjBpS,EAAKoS,QAAoB,IAAM,GAAG,cAAC,GAAD,CAAOlW,MAAOwC,IAAiC,QAAjBsB,EAAKoS,QAAoB,IAAM,aAKhI,wBACElO,OAAO,MACP4I,IAAK5C,EACLvG,MAAO,CAAEqC,SAAU,4BCjPdoO,GArBU,SAACzX,GAAW,IAAD,EACQlB,mBAAS,CACjDuS,cAAe1Q,EACf+W,sBAAsB,IAHU,mBAC3BrG,EAD2B,KACZsG,EADY,KAM5BC,EAAqBlX,sBAAW,sBAAC,kCAAAzB,EAAA,sEACCsR,GAAUvS,KAAK6Z,mBADhB,mCAC9BxG,EAD8B,KACfyG,EADe,KAErCH,EAAiB,CACftG,gBACAqG,qBAAsBI,IAJa,2CAMpC,CAAC9X,IAMJ,OAJAhB,qBAAU,WACR4Y,MACC,CAAC5X,EAAO2X,IAEJtG,GC4BM0G,GAjCI,WAAO,IAAD,EACDjZ,mBAAS,CAC7BkZ,WAAY,EACZrG,UAAW,EACXD,YAAa,EACbD,WAAY,EACZM,kBAAmB,EACnBC,cAAe3R,IAAUC,KAAK,GAC9B2R,iBAAkB,EAClBZ,cAAe,IATM,mBAChB4G,EADgB,KACXC,EADW,KAWjBlY,EAAQD,IAXS,EAaqB0X,GAAiBzX,GAAxDqR,EAbkB,EAalBA,cAAeqG,EAbG,EAaHA,qBACpBrG,EAAgBA,EAAc7P,WAAa,KAE3C,IAAMkE,EAAcN,KACd+S,EAAkBzX,sBAAW,sBAAC,4BAAAzB,EAAA,sEAChBsR,GAAU0H,IAAI5G,EAAe3L,GADb,OAC5BuS,EAD4B,OAElCC,EAAO,6BACFD,GADC,IAEJ5G,gBACAqG,0BALgC,2CAOjC,CAAC1X,IAMJ,OAJAhB,qBAAU,WACRmZ,MACC,CAACnY,EAAOkY,IAEJD,GC1BMG,GAhBgB,WAAO,IAAD,EACXtZ,mBAAS6B,GADE,mBAC5B0X,EAD4B,KACtBC,EADsB,KAE7BtY,EAAQD,IAERwY,EAAkB7X,sBAAW,sBAAC,4BAAAzB,EAAA,sEACTsR,GAAUvS,KAAKwa,6BADN,OAC5BC,EAD4B,OAElCH,EAAQG,GAF0B,2CAGjC,CAACzY,IAMJ,OAJAhB,qBAAU,WACRuZ,MACC,CAACvY,EAAOsY,IAEJD,GCdL9U,GAAY,GACZD,GAAQ,GACNoV,GAAU,uCAAG,WAAOC,EAASC,GAAhB,qBAAA3Z,EAAA,6DACXyE,EAAOC,MACVkV,YAAY,GACZC,OAAO,GACPC,OAAO,GACPC,KAAK,GACFC,EAAiBvV,EAAKY,KAAK,GAC3Bd,EAASE,EAAKY,IAAI,GAPP,SASEqU,EAAQM,EAAerV,QATzB,OASXP,EATW,OAUjBD,GAAeC,EAAMC,GAAOC,GAAWC,GAEnCoV,GACFA,IAbe,2CAAH,wDAmCDM,GAlBE,SAACP,GAAa,IAAD,EACE7Z,mBAAS,CACrCyE,aACAD,WAH0B,mBACrB6V,EADqB,KACZC,EADY,KAe5B,OATApa,qBAAU,WACR0Z,GAAWC,GAAS,WAClBS,EAAW,CACT7V,aACAD,gBAGH,IAEI6V,G,UClCYE,I,2GAMjBC,KAASC,cAAc1c,GACvB,IAAM2c,EAAKF,KAASG,YACpBJ,EAAUK,QAAUF,EAAGG,WAAW,cAClCN,EAAUO,SAAWJ,EAAGG,WAAW,iB,4EAGXE,G,yFACDR,EAAUK,QAC9BI,QAAQ,aACRC,QAAQF,GACRG,M,cAHGC,E,OAIA5W,EAAO4W,EAASC,KAAKvP,KAAI,SAACwP,GAAD,OAASA,EAAI9W,U,kBAQrCA,GAAQ,I,+KAGUwW,G,yFACFR,EAAUO,SAC9BE,QAAQ,aACRC,QAAQF,GACRG,M,cAHGC,E,OAIA5W,EAAO4W,EAASC,KAAKvP,KAAI,SAACwP,GAAD,OAASA,EAAI9W,U,kBACrCA,GAAQ,I,0GChBnBM,IAAM+H,OAAO0O,MAEb,IA8MeC,GA9MF,WAAO,IAAD,EACuCvb,oBAAS,GADhD,mBACVwb,EADU,KACYC,EADZ,OASbxC,KANFtG,EAHe,EAGfA,WACAM,EAJe,EAIfA,kBACAV,EALe,EAKfA,cACAqG,EANe,EAMfA,qBACA1F,EAPe,EAOfA,cACAC,EARe,EAQfA,iBAEIuC,EAAgBE,KAChBlM,EAAajD,KACbiV,EAAmBpC,KACnBqC,EAAkB9W,IAAM,IAAI+W,KAAwB,IAAnBF,IAbtB,EAiBbtB,GAAQ,uCAAC,WAAOxV,GAAP,SAAAzE,EAAA,sEAAsBoa,GAAUsB,aAAajX,GAA7C,mFAAD,uDAFVH,EAfe,EAefA,UACAD,EAhBe,EAgBfA,MAEIsX,EAAalY,GAAStC,EAAgB5E,EAAmBE,U9C9BxC,K8CgCjBmf,EAAsB/Y,GAAkBmQ,EAAkB3O,EAAMqS,KAChEmF,EAAuBhZ,GAAkBiQ,EAAmBzO,EAAMyO,mBAClEgJ,EAAiBjZ,GAAkBuP,EAAe/N,EAAMsS,aAExDoF,EAAe,GACrBA,EAAazF,IAAM9Q,GAAQnB,EAAMiS,IAAkB,IAAb9D,GACtCuJ,EAAatF,YAAcjR,GAAQnB,EAAMoS,YAAakF,GACtDI,EAAarF,IAAMlR,GAAQnB,EAAMqS,IAAK1D,GACtC+I,EAAajJ,kBAAoBtN,GAAQnB,EAAMyO,kBAAmBA,GAClEiJ,EAAapF,YAAcnR,GAAQnB,EAAMsS,YAAavE,GAEtD,IAAM4J,EAAa,CACjB,CACE9L,MAAO,qBACP5P,MAAO0S,EACP1C,QAAS,IACTH,WAAYyL,EACZxL,SAAUwL,GAAuB,EACjCK,SAAUL,EAAsB,EAChCvK,YAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAClDxB,SAAU,CACR,CACEK,MAAO,QACP4G,KAAM,QACNI,YAAa,IACbF,YAAa,qBACbD,gBAAiB,uBACjB3S,KAAM2X,EAAarF,OAIzB,CACExG,MAAO,wBACP5P,MAAOwS,EACP3C,WAAY0L,EACZha,SAAU,EACVuO,SAAUyL,GAAwB,EAClCI,SAAUJ,EAAuB,EACjCxK,YAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAClDxB,SAAU,CACR,CACEK,MAAO,QACP4G,KAAM,QACNI,YAAa,IACbF,YAAa,qBACbD,gBAAiB,uBACjB3S,KAAM2X,EAAajJ,qBAIzB,CACE5C,MACE,uDAEIqL,EAAiB/G,UACfiE,IACD/T,MACAK,SAASyW,GAgBR,KAfF,sBAAMzT,MAAO,CAAEmU,SAAU,SAAzB,SACI,cAAC,IAAD,CACEhT,KAAK,qBACL3B,MAAM,QACNO,QAAS,WACPwT,GAAyBD,IAJ7B,SAOGA,EACC,gDAAWG,EAAgBW,cAE3B,mDAAa,cAAC,KAAD,CAAW1X,KAAM+W,cAO5Clb,MAAO8R,EACPjC,WAAY2L,EACZ1L,SAAU0L,GAAkB,EAC5BG,SAAUH,EAAiB,EAC3BzK,YAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAClDxB,SAAU,CACR,CACEK,MAAO,QACP4G,KAAM,QACNI,YAAa,IACbF,YAAa,qBACbD,gBAAiB,uBACjB3S,KAAM2X,EAAapF,gBAM3B,OACE,eAAC,IAAD,CAAWjN,OAAK,EAACrC,UAAU,8BAA3B,UACE,cAAC,IAAD,CAAK+U,WAAS,EAAC/U,UAAU,mBAAzB,SACE,cAAC,GAAD,CACE0D,MAAM,oBACNkB,SAAS,uCAKb,eAAC,IAAD,WACE,cAAC,IAAD,CAAKd,GAAG,IAAIE,GAAG,KAAKU,GAAG,KAAK1E,UAAU,OAAtC,SACE,cAAC,GAAD,CACEmL,WAAYA,EACZlO,UAAWA,EACXD,MAAO0X,MAGX,eAAC,IAAD,CAAK5Q,GAAG,IAAIE,GAAG,KAAKU,GAAG,KAAK1E,UAAU,iDAAtC,UACE,8BACE,cAAC,GAAD,CACEtE,UAAWiZ,EAAW,GAAGnM,SACzBK,MAAO8L,EAAW,GAAG9L,MACrB5P,MAAO0b,EAAW,GAAG1b,MACrB6P,WAAY6L,EAAW,GAAG7L,WAC1BC,SAAU4L,EAAW,GAAG5L,SACxB6L,SAAUD,EAAW,GAAGC,SACxB5L,OAAQ2L,EAAW,GAAG3L,OACtBC,QAAS0L,EAAW,GAAG1L,QACvBzO,SAAUma,EAAW,GAAGna,aAG5B,qBAAKwF,UAAU,OAAf,SACE,cAAC,GAAD,CACEtE,UAAWiZ,EAAW,GAAGnM,SACzBK,MAAO8L,EAAW,GAAG9L,MACrB5P,MAAO0b,EAAW,GAAG1b,MACrB6P,WAAY6L,EAAW,GAAG7L,WAC1BC,SAAU4L,EAAW,GAAG5L,SACxB6L,SAAUD,EAAW,GAAGC,SACxB5L,OAAQ2L,EAAW,GAAG3L,OACtBC,QAAS0L,EAAW,GAAG1L,QACvBzO,SAAUma,EAAW,GAAGna,aAG5B,8BACE,cAAC,GAAD,CACEkB,UAAWiZ,EAAW,GAAGnM,SACzBK,MAAO8L,EAAW,GAAG9L,MACrB5P,MAAO0b,EAAW,GAAG1b,MACrB6P,WAAY6L,EAAW,GAAG7L,WAC1BC,SAAU4L,EAAW,GAAG5L,SACxB6L,SAAUD,EAAW,GAAGC,SACxB5L,OAAQ2L,EAAW,GAAG3L,OACtBC,QAAS0L,EAAW,GAAG1L,QACvBzO,SAAUma,EAAW,GAAGna,mBAMhC,eAAC,IAAD,WACE,cAAC,IAAD,CAAKsJ,GAAG,IAAIE,GAAG,KAAKU,GAAG,KAAK1E,UAAU,OAAtC,SACE,cAAC,GAAD,CACE0L,cAAeA,EACfxJ,WAAYA,EACZ6I,cAAeA,EACfY,iBAAkBA,MAItB,cAAC,IAAD,CAAK7H,GAAG,IAAIE,GAAG,KAAKU,GAAG,KAAK1E,UAAU,OAAtC,SACE,cAACgV,GAAD,CACE9G,cAAeA,EACfhM,WAAYA,MAIhB,cAAC,IAAD,CAAK4B,GAAG,IAAIE,GAAG,KAAKU,GAAG,KAAK1E,UAAU,OAAtC,SACE,cAAC,GAAD,CACEkO,cAAeA,EACfxC,cAAeA,EACfX,cAAeA,EACf7I,WAAYA,EACZyJ,iBAAkBA,aCpMfsJ,GAnBM,kBACnB,cAAC,IAAD,CAAW5S,OAAK,EAACrC,UAAU,mCAA3B,SACE,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qCACA,oBAAIA,UAAU,gBAAd,6BACA,oDAAsB,mBACpB6B,KAAK,kCACLc,OAAO,SACPC,IAAI,sBAHgB,oBAAtB,gBAOA,cAAC,OAAD,CAAMS,GAAG,YAAT,SAAqB,cAAC,IAAD,CAAQwK,SAAO,EAAC3N,MAAM,SAAtB,6C,6mBCd7B7C,IAAM+H,OAAO8P,MAEb,IAAIC,IAAW,EACXC,GAAS,GACPC,GAAW,uCAAG,WAAO/C,GAAP,iBAAA3Z,EAAA,sEACY5B,EAAUue,MAAM,CAC5CA,MAAOC,cAAF,QAFW,gBACJC,EADI,EACXzY,KAAOyY,MA8BdJ,GAASI,EAAMnR,KAAI,SAACtH,GAClB,IAIIxC,EAOAkb,EAXEC,EAAyC,SAA5B3Y,EAAK4Y,KAAKC,OAAOC,OAC9BC,EAAMJ,GAAc3Y,EAAKgZ,WAAahZ,EAAKiZ,UAC3CjE,EAAQ1U,IAAoC,KAA7BN,EAAKkZ,YAAY1Y,WAAkB2Y,UAgBxD,OAZE3b,EADEub,EACOJ,GAAc3Y,EAAKoZ,YAAcpZ,EAAKqZ,WAEtCV,GAAc3Y,EAAKiZ,WAAajZ,EAAKgZ,UAK9CN,EADEK,EACSJ,GAAc3Y,EAAKgZ,WAAahZ,EAAKiZ,UAErCN,GAAc3Y,EAAKqZ,YAAcrZ,EAAKoZ,WAG5C,CACL3L,GAAIzN,EAAKkZ,YAAYnT,GACrBuT,SAAUZ,EAAWlb,EACrBub,MACAvb,SACAwX,OACA0D,eAIAnD,GACFA,IA7DgB,2CAAH,sDAoFFgE,GAnBS,WAAO,IAAD,EACY9d,mBAAS4c,IADrB,mBACrBmB,EADqB,KACPC,EADO,KAgB5B,OAbA9d,qBAAU,WACJyc,IAICA,KACHA,IAAW,EACXE,IAAY,WACVmB,EAAgBpB,UAGnB,IAEImB,GChCME,GAtDM,WACnB,IAAMrB,EAASkB,KAEf,OACE,eAAC,IAAD,CAAM1M,OAAK,EAAC5J,UAAU,OAAtB,UACE,cAAC,IAAD,CAAYA,UAAU,gBAAtB,SACE,oBAAIA,UAAU,MAAd,6BAEF,cAAC,IAAD,CAAUA,UAAU,WAAWU,MAAO,CAACgW,UAAW,QAAlD,SACE,wBAAO1W,UAAU,aAAjB,UACE,uBAAOA,UAAU,WAAjB,SACA,+BACE,oBAAI2W,MAAM,MAAM3W,UAAU,WAA1B,kBAGA,oBAAI2W,MAAM,MAAM3W,UAAU,WAA1B,kBAGA,oBAAI2W,MAAM,MAAM3W,UAAU,WAA1B,yBAGA,oBAAI2W,MAAM,MAAM3W,UAAU,WAA1B,4BAGA,oBAAI2W,MAAM,MAAM3W,UAAU,WAA1B,yBAGA,oBAAI2W,MAAM,MAAM3W,UAAU,WAA1B,qBAKF,gCACCoV,EAAO/Q,KAAI,SAACuS,EAAO3Y,GAAR,OACV,qBAAY+B,UAAU,qBAAtB,UACE,6BAAK4W,EAAMd,IAAM,cAAC,IAAD,CAAO5V,MAAM,UAAb,iBACf,cAAC,IAAD,CAAOA,MAAM,YAAb,oBACF,6BAAK0W,EAAM7E,OACX,6BAAK6E,EAAMP,SAASQ,QAAQ,KAC5B,6BAAKD,EAAMrc,OAAOsc,QAAQ,KAC1B,6BAAKD,EAAMnB,SAASoB,QAAQ,KAC5B,6BACE,mBAAGhV,KAAI,mCAA8B+U,EAAMpM,IAAM7H,OAAO,SAASC,IAAI,sBAArE,SACGvH,EAAeub,EAAMpM,UATnBvM,iBCjBN6Y,GAhBO,WAAO,IAAD,EACFte,mBAASuB,IAAUC,KAAK,IADtB,mBACnBuC,EADmB,KACbwa,EADa,KAEpBrd,EAAQD,IAERU,EAAeC,sBAAW,sBAAC,4BAAAzB,EAAA,sEACNpB,EAAWG,KAAKsf,YADV,OACzBC,EADyB,OAE/BF,EAAQE,GAFuB,2CAG9B,CAACvd,IAMJ,OAJAhB,qBAAU,WACRyB,MACC,CAACT,IAEG6C,GCFHoS,GAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OA4NzCuI,GAjNkB,SAAC,GAO3B,IANLC,EAMI,EANJA,aACAhI,EAKI,EALJA,QACAzL,EAII,EAJJA,MACA3G,EAGI,EAHJA,KACAqa,EAEI,EAFJA,SACAjQ,EACI,EADJA,aAEMF,EAAYC,sBADd,EAIsB1O,mBAAS,MAJ/B,mBAIGiN,EAJH,KAIUuJ,EAJV,KAKEvT,GAAmB,OAAJsB,QAAI,IAAJA,OAAA,EAAAA,EAAMzB,QAASyB,GAAS,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMzB,QAAS,GAAK,EACvDiU,EAAc1T,GAAWub,GACzB5H,EAAU3T,GAAWkB,GAwI3B,OAtIArE,qBAAU,WAYR,IAAMgD,EAAY,CAChBmL,OAAQ8H,GACRnG,SAAU,CACR,CACEK,MAAO,YACP4G,KAAM,QACN1S,KAAMqa,EACN1H,gBAAiB,wBACjBC,YAAa,sBAGbC,WAAY,CAAC,EAAG,GAChBC,YAAa,EACbC,YAAa,EACbC,iBAAkB,GAGpB,CACElH,MAAO,eACP4G,KAAM,QACN1S,KAAMA,EACN4S,YAAa,qBACbD,gBAAiB,uBAGjBG,YAAa,IACbC,YAAa,EACbC,iBAAkB,KAKlBtH,EAAO,6BACR,CACDpB,YAAY,EACZC,OAAQ,CACN0I,SAAU,OAEZ5R,SAAU,CACR8G,KAAM,CAEJ2C,QAAS,IAEXF,MAAO,CACLC,OAAQ,IAGZ3B,OAAQ,CACN6B,MAAO,CACL,CACEC,WAAW,EACXC,MAAO,CACLiI,SADK,SACIC,EAAMC,GAOb,OAAOD,MAKfjI,MAAO,CACL,CACED,MAAO,CACLI,aAAc,GACd6H,SAFK,SAEIC,GACP,OAAa,IAATA,EACKA,EAEFE,KAAOF,EAAM,CAAEG,QAAQ,SAMxCC,MAAO,CACLC,KAAM,UACNC,WAAW,GAEbhJ,SAAU,CACRE,QAAQ,EACR6I,KAAM,UACNC,WAAW,EACXC,UAAW,CACT5H,MADS,SACH1F,EAAMpG,GACV,IAAM8L,EAAQvO,GAAe6I,EAAKlK,OAC/ByX,iBAEH,OADgB3T,EAAKyL,SAASrF,EAAKwN,cAAc9H,MAChC,KAAOA,OAK7B1B,GAGD1B,GACFA,EAAMmL,UAGR,IAAMC,EAAW,IAAI9L,GAAMkC,EAAUyB,QAAS,CAC5CpG,KAAM,eACNvF,KAAMrB,EACN+M,YAIIqI,EAAUD,EAASE,eAAe,GACpCD,GAAWA,EAAQ/T,KAAK,KAC1B+T,EAAQ/T,KAAK,GAAGiU,OAAOpJ,OAAS,EAChCkJ,EAAQ/T,KAAKrB,EAAU8M,SAAS,GAAGzL,KAAKzB,OAAS,GAAG0V,OAAOpJ,OAAS,GAItEiJ,EAASI,SAETjC,EAAS6B,KACR,CAACpV,IAGF,eAAC,IAAD,CAAMmO,OAAK,EAAC5J,UAAU,QAAtB,UACE,cAAC,IAAD,CAAYA,UAAU,gBAAtB,SAaE,qBAAIA,UAAU,qBAAd,UACGmX,EADH,WAC6BzT,OAG/B,eAAC,IAAD,CAAU1D,UAAU,OAApB,UACE,cAAC,IAAD,CAAKA,UAAU,8BAAf,SACE,sBAAKA,UAAU,4CAAf,UACE,gCACE,eAAC,IAAD,CACE+D,KAAK,KACL7D,MAAM,QACN2N,SAAO,EAHT,2BAKgB,cAAC,GAAD,CAAO5U,MAAOsW,OAE9B,eAAC,IAAD,CACExL,KAAK,KACL7D,MAAM,QACN2N,SAAO,EAHT,8BAKmB,cAAC,GAAD,CAAO5U,MAAOuW,UAGnC,qBAAKxP,UAAU,4BAAf,SACE,eAAC,IAAD,CACE+D,KAAK,KACL7D,MAAM,YACNF,UAAU,cAHZ,qBAKWmP,EALX,KAKqB,cAAC,GAAD,CAAOlW,MAAOwC,cAKzC,wBACEwF,OAAO,MACP4I,IAAK5C,EACLvG,MAAO,CAAEqC,SAAU,4BCjN7B1F,IAAM+H,OAAO0O,MAEb,IAiNejD,GAjNE,WAAO,IACT3O,EAAejD,KAApBJ,IACFwY,EAAmBjb,GAAStC,EpD+DH,+CoD9DzBwd,EAAelb,GAAStC,EAAgBnE,EAAeC,UACvD2hB,EAAcnb,GAAStC,EpD4DH,+CoD3DpBmd,EAAa7a,GAAS0a,MALP,EASjBlE,GAAQ,uCAAC,WAAOxV,GAAP,SAAAzE,EAAA,sEAAsBoa,GAAUyE,cAAcpa,GAA9C,mFAAD,uDAFVH,EAPmB,EAOnBA,UACAD,EARmB,EAQnBA,MAGIya,EAAkBnb,GAAmB6B,GAAQnB,EAAMia,WAAYA,GAAaha,EAAUga,YACtFS,EAAsBpb,GAAmBW,EAAUga,YAEnDU,EAAYrb,GAAmB6B,GAAQnB,EAAM4a,OAAQL,GAActa,EAAU2a,QAC7EC,EAAgBvb,GAAmBW,EAAU2a,QAO7CE,EADS,KpD8CW,IoD/CKT,EpD8CK,IoD9CwCC,GAC1C,IAFnBzb,GAAWsC,GAAQ8Y,EAAYja,EAAMia,WAAYha,EAAUga,aAKpEc,EAAWvc,GAAkB0G,EAAYlF,EAAM+B,OAC/CiZ,EAAYxc,GAAkB+b,EAAava,EAAM4a,QACjDK,EAAUzc,GAAkByb,EAAYja,EAAMia,YAC9CiB,EAAmB1c,GAAkBsc,EAAe9a,EAAM8a,eAE1DpD,EAAe,GACrBA,EAAa3V,MAAQZ,GAAQnB,EAAM+B,MAAOmD,GAC1CwS,EAAakD,OAASzZ,GAAQnB,EAAM4a,OAAQL,GAC5C7C,EAAauC,WAAa9Y,GAAQnB,EAAMia,WAAYA,GACpDvC,EAAaoD,cAAgB3Z,GAAQnB,EAAM8a,cAAeA,GAE1D,IAAMnD,EAAa,CACjB,CACE9L,MAAO,QACP5P,MAAOiJ,EACP+G,QAAS,IACTzO,SAAU,EACVsO,WAAYiP,EACZhP,SAAUgP,GAAY,EACtBnD,SAAUmD,EAAW,EACrB/N,YAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAClDxB,SAAU,CACR,CACEK,MAAO,QACP4G,KAAM,QACNI,YAAa,IACbF,YAAa,qBACbD,gBAAiB,uBACjB3S,KAAM2X,EAAa3V,SAIzB,CACE8J,MAAO,iCACP5P,MAAO6e,EACPhP,WAAYoP,EACZnP,SAAUmP,GAAoB,EAC9BtD,SAAUsD,EAAmB,EAC7BlO,YAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAClDxB,SAAU,CACR,CACEK,MAAO,QACP4G,KAAM,QACNI,YAAa,IACbF,YAAa,qBACbD,gBAAiB,uBACjB3S,KAAM2X,EAAaoD,iBAIzB,CACEjP,MAAO,oBACP5P,MAAOge,EACPnO,WAAYmP,EACZlP,SAAUkP,GAAW,EACrBrD,SAAUqD,EAAU,EACpBjO,YAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAClDxB,SAAU,CACR,CACEK,MAAO,QACP4G,KAAM,QACNI,YAAa,IACbF,YAAa,qBACbD,gBAAiB,uBACjB3S,KAAM2X,EAAauC,cAIzB,CACEpO,MAAO,eACP5P,MAAOse,EACPzO,WAAYkP,EACZjP,SAAUiP,GAAa,EACvBpD,SAAUoD,EAAY,EACtBhO,YAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAClDxB,SAAU,CACR,CACEK,MAAO,QACP4G,KAAM,QACNI,YAAa,IACbF,YAAa,qBACbD,gBAAiB,uBACjB3S,KAAM2X,EAAakD,WAM3B,OACE,eAAC,IAAD,CAAWvV,OAAK,EAACrC,UAAU,8BAA3B,UACE,cAAC,IAAD,CAAK+U,WAAS,EAAC/U,UAAU,mBAAzB,SACE,cAAC,GAAD,CACE0D,MAAM,cACNkB,SAAS,oBAIb,eAAC,IAAD,WACE,cAAC,IAAD,CAAK5E,UAAU,OAAO0E,GAAG,IAAIZ,GAAG,IAAIE,GAAG,IAAvC,SACE,cAAC,GAAD,CACEtI,UAAWiZ,EAAW,GAAGnM,SACzBK,MAAO8L,EAAW,GAAG9L,MACrB5P,MAAO0b,EAAW,GAAG1b,MACrB6P,WAAY6L,EAAW,GAAG7L,WAC1BC,SAAU4L,EAAW,GAAG5L,SACxB6L,SAAUD,EAAW,GAAGC,SACxB5L,OAAQ2L,EAAW,GAAG3L,OACtBC,QAAS0L,EAAW,GAAG1L,QACvBC,UAAWyL,EAAW,GAAGzL,UACzB1O,SAAUma,EAAW,GAAGna,aAG5B,cAAC,IAAD,CAAKwF,UAAU,OAAO0E,GAAG,IAAIZ,GAAG,IAAIE,GAAG,IAAvC,SACE,cAAC,GAAD,CACEtI,UAAWiZ,EAAW,GAAGnM,SACzBK,MAAO8L,EAAW,GAAG9L,MACrB5P,MAAO0b,EAAW,GAAG1b,MACrB6P,WAAY6L,EAAW,GAAG7L,WAC1BC,SAAU4L,EAAW,GAAG5L,SACxB6L,SAAUD,EAAW,GAAGC,SACxB5L,OAAQ2L,EAAW,GAAG3L,OACtBC,QAAS0L,EAAW,GAAG1L,QACvBzO,SAAUma,EAAW,GAAGna,aAG5B,cAAC,IAAD,CAAKwF,UAAU,OAAO0E,GAAG,IAAIZ,GAAG,IAAIE,GAAG,IAAvC,SACE,cAAC,GAAD,CACEtI,UAAWiZ,EAAW,GAAGnM,SACzBK,MAAO8L,EAAW,GAAG9L,MACrB5P,MAAO0b,EAAW,GAAG1b,MACrB6P,WAAY6L,EAAW,GAAG7L,WAC1BC,SAAU4L,EAAW,GAAG5L,SACxB6L,SAAUD,EAAW,GAAGC,SACxB5L,OAAQ2L,EAAW,GAAG3L,OACtBC,QAAS0L,EAAW,GAAG1L,QACvBzO,SAAUma,EAAW,GAAGna,aAG5B,cAAC,IAAD,CAAKwF,UAAU,OAAO0E,GAAG,IAAIZ,GAAG,IAAIE,GAAG,IAAvC,SACE,cAAC,GAAD,CACEtI,UAAWiZ,EAAW,GAAGnM,SACzBK,MAAO8L,EAAW,GAAG9L,MACrB5P,MAAO0b,EAAW,GAAG1b,MACrB6P,WAAY6L,EAAW,GAAG7L,WAC1BC,SAAU4L,EAAW,GAAG5L,SACxB6L,SAAUD,EAAW,GAAGC,SACxB5L,OAAQ2L,EAAW,GAAG3L,OACtBC,QAAS0L,EAAW,GAAG1L,QACvBzO,SAAUma,EAAW,GAAGna,gBAM9B,eAAC,IAAD,WACE,cAAC,IAAD,CAAKsJ,GAAG,IAAIE,GAAG,KAAKU,GAAG,KAAK1E,UAAU,OAAtC,SACE,cAAC,GAAD,CACEmX,aAAa,eACbzT,MAAM,2BACNyL,QAAQ,eACRpS,KAAM0a,EACNL,SAAUM,MAGd,cAAC,IAAD,CAAK5T,GAAG,IAAIE,GAAG,KAAKU,GAAG,KAAK1E,UAAU,OAAtC,SACE,cAAC,GAAD,CACEmX,aAAa,eACbhI,QAAQ,OACRzL,MAAM,mBACN3G,KAAM4a,EACNP,SAAUS,SAKhB,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,GAAD,YCtMKM,GAnBQ,kBACrB,cAAC,IAAD,CAAW9V,OAAK,EAACrC,UAAU,mCAA3B,SACE,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oDACA,oBAAIA,UAAU,gBAAd,8CACA,oDAAsB,mBACpB6B,KAAK,kCACLc,OAAO,SACPC,IAAI,sBAHgB,oBAAtB,gBAOA,cAAC,OAAD,CAAMS,GAAG,YAAT,SAAqB,cAAC,IAAD,CAAQwK,SAAO,EAAC3N,MAAM,SAAtB,6CCIvBkY,GAAY,SAAC,GAAD,IAAGhgB,EAAH,EAAGA,SAAH,OAChB,cAAC,IAAD,CACEigB,QtDdqB,EsDerBC,WAAY,CACVC,cAAe,CAAEC,OtDjBC,uCsDctB,SAME,cAAC,EAAD,UACE,cAAC,GAAD,UACGpgB,SAoCMqgB,OA9Bf,WACE,OACE,cAAC,GAAD,UACE,cAAC,gBAAD,UACE,cAAC,IAAD,CAAW3V,GAAG,iBAAd,SACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4V,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,IAAD,CAAUtV,GAAG,gBAEf,cAAC,IAAD,CAAOqV,KAAK,YAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,GAAD,kBC/CDE,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGd9F,GAAUha,OAEVsgB,IAASpI,OACP,cAAC,IAAMqI,WAAP,UAEE,cAAC,GAAD,MAGFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.0a2e10b9.chunk.js","sourcesContent":["import * as ethers from 'ethers';\nimport {\n  Pair,\n  Token,\n  WETH\n} from '@uniswap/sdk';\nimport { Contract } from 'ethers';\nimport ERC20Abi from './abi/ERC20.json';\nimport { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\n\nconst CHAIN_ID_MAINNET = 1;\nconst RPC_URL_MAINNET = 'https://mainnet.eth.aragon.network';\nconst RINKEBY_CHAIN_ID = 4;\nconst RINKEBY_RPC_URL = 'https://rinkeby.eth.aragon.network';\nconst GOERLI_CHAIN_ID = 5;\nconst GOERLI_RPC_URL = 'https://goerli.eth.aragon.network';\nconst LOCAL_CHAIN_ID = 1337;\n\nexport const CONTRACT_ADDRESSES = {\n  worldToken: {\n    [RINKEBY_CHAIN_ID]: '0x88E2C54cc98D9211E2dA6bBe50CE1D1a4B501941',\n    [LOCAL_CHAIN_ID]: '0x31FFbe9bf84b4d9d02cd40eCcAB4Af1E2877Bbc6'\n  },\n  worldFarm: {\n    [RINKEBY_CHAIN_ID]: '0x45e9Bfa363DBb2D34Bc6615B3D25E0590f0e07E4',\n  }\n};\n\nconst INFURA_PROJECT_ID = '7d202bf325f64be09f716d636db35131';\nconst ALCHEMY_API_KEY = 'EO7ieJ1gfiSe0jdyQHEWlpDIbvieBDsm';\nconst ETHERSCAN_API_KEY = 'U26Y5YH9JNH4DVFHD3THA5KH4RRNHY33SF';\n\n// change to mainnet before deploying!\nconst DEFAULT_CHAIN_ID = RINKEBY_CHAIN_ID;\nexport const CHAIN_ID = DEFAULT_CHAIN_ID;\nexport const RPC_URL = RPC_URL_MAINNET;\n\nexport const DEFAULT_PROVIDER = DEFAULT_CHAIN_ID !== LOCAL_CHAIN_ID\n  ? ethers.getDefaultProvider(DEFAULT_CHAIN_ID, {\n    infura: INFURA_PROJECT_ID,\n    alchemy: ALCHEMY_API_KEY,\n    etherscan: ETHERSCAN_API_KEY\n  })\n  : new ethers.providers.JsonRpcProvider();\n\nDEFAULT_PROVIDER.pollingInterval = 15000;\n\nexport const WORLD_ETH_PAIR = {\n  address: Pair.getAddress(\n    new Token(DEFAULT_CHAIN_ID, CONTRACT_ADDRESSES.worldToken[DEFAULT_CHAIN_ID], 18, 'any'),\n    WETH[DEFAULT_CHAIN_ID]\n  ),\n  pid: 0\n};\n\nexport const WETH_CONTRACT = new ethers.Contract(\n  WETH[DEFAULT_CHAIN_ID].address,\n  ERC20Abi,\n  DEFAULT_PROVIDER\n);\n\nexport const LP_TOKEN_CONTRACT = new Contract(\n  WORLD_ETH_PAIR.address,\n  ERC20Abi,\n  DEFAULT_PROVIDER\n);\n\nexport const BLOCKS_PER_DAY = 6525;\n\nexport const FIREBASE_CONFIG =  {\n  apiKey: 'AIzaSyDBjsZcdMFOTx_k5hPArQf8aD9GM1Z0',\n  authDomain: 'world-token.firebaseapp.com',\n  databaseURL: 'https://world-token.firebaseio.com',\n  projectId: 'world-token',\n  storageBucket: 'world-token.appspot.com',\n  messagingSenderId: 'world-token',\n  appId: 'world-token'\n};\n\nexport const uniClient = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2',\n  }),\n  cache: new InMemoryCache(),\n  shouldBatch: true,\n});\n\nexport const BURN_ADDRESS = '0x000000000000000000000000000000000000dEaD';\nexport const MARKETING_ADDRESS = '0x4d4bD4A63B42eCADafF1a465446cFA3320E17f38';\nexport const LOCKED_MARKETING_TOKENS= 20_000_000;\nexport const TOTAL_SUPPLY = 100_000_000;\n","import {\n  utils,\n  Contract\n} from 'ethers';\nimport WorldTokenAbi from './abi/WorldToken.json';\nimport {\n  CHAIN_ID,\n  CONTRACT_ADDRESSES,\n  DEFAULT_PROVIDER\n} from './constants';\n\nexport default class WorldToken {\n  static read = new Contract(\n    CONTRACT_ADDRESSES.worldToken[CHAIN_ID],\n    WorldTokenAbi,\n    DEFAULT_PROVIDER\n  );\n\n  static address = CONTRACT_ADDRESSES.worldToken[CHAIN_ID]\n\n  constructor(signer) {\n    this.signer = signer;\n  }\n\n  async wallet() {\n    return this.signer.getAddress();\n  }\n\n  async balance() {\n    return WorldToken.read.balanceOf(await this.wallet());\n  }\n\n  static async balanceOf(address) {\n    return WorldToken.read.balanceOf(address);\n  }\n\n  async allowance() {\n    return WorldToken.read.allowance(await this.wallet(), WorldToken.read.address);\n  }\n}\n","import React,\n{\n  createContext,\n  useEffect,\n  useState\n} from 'react';\n\nimport { useWallet } from 'use-wallet';\nimport * as ethers from 'ethers';\nimport WorldToken from '../world/WorldToken';\n\nexport const Context = createContext({\n  worldToken: undefined,\n});\n\nconst WorldTokenContext = ({ children }) => {\n  const { account, ethereum } = useWallet();\n  const [worldToken, setWorldToken] = useState(null);\n\n  useEffect(() => {\n    const init = async () => {\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        setWorldToken(new WorldToken(provider.getSigner()));\n      }\n    };\n\n    init();\n  }, [account, ethereum]);\n\n  return <Context.Provider value={{ worldToken }}>{children}</Context.Provider>;\n};\n\nexport default WorldTokenContext;\n","import {\n  useEffect,\n  useState\n} from 'react';\nimport { DEFAULT_PROVIDER } from '../world/constants';\n\nlet currentBlockNumber;\nlet fetched = false;\nconst fetchBlockNumber = async () => {\n  const latestBlockNumber = await DEFAULT_PROVIDER.getBlockNumber();\n  if (currentBlockNumber !== latestBlockNumber) {\n    currentBlockNumber = latestBlockNumber;\n  }\n  console.log('Block number:', latestBlockNumber);\n};\nsetInterval(fetchBlockNumber, 15000);\n\nconst useBlock = () => {\n  const [block, setBlock] = useState(currentBlockNumber);\n\n  useEffect(() => {\n    if (!fetched) {\n      fetchBlockNumber();\n      fetched = true;\n    }\n\n    const interval = setInterval(async () => {\n      if (block !== currentBlockNumber) {\n        setBlock(currentBlockNumber);\n      }\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return block;\n};\n\nexport default useBlock;\n","import { useCallback, useEffect, useState } from 'react';\n\nimport useBlock from './useBlock';\nimport { BigNumber } from 'ethers';\nimport WorldToken from '../world/WorldToken';\n\nconst useTokenBalance = (address) => {\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const block = useBlock();\n\n  const fetchBalance = useCallback(async () => {\n    if (address) {\n      const balance = await WorldToken.balanceOf(address);\n      setBalance(balance);\n    }\n  }, [block, address]);\n\n  useEffect(() => {\n    fetchBalance();\n  }, [block, address]);\n\n  return balance;\n};\n\nexport default useTokenBalance;\n","import {\n  BigNumber, ethers,\n  utils\n} from 'ethers';\nimport dayjs from 'dayjs';\n\nexport const ZERO_BN = BigNumber.from(0);\n\nexport const displayAmount = (amount, decimals) => {\n  if (typeof amount === 'object') {\n    try {\n      amount = utils.formatEther(amount);\n    } catch (e) {\n    }\n  }\n\n  if (!isNaN(amount) && amount !== Infinity) {\n    return +toFixedString(amount, decimals || 2);\n  }\n\n  return '0';\n};\n\nfunction toFixedString(num, fixed) {\n  const re = new RegExp(`^-?\\\\d+(?:\\.\\\\d{0,${fixed || -1}})?`);\n  return num.toString()\n    .match(re)[0];\n}\n\nexport const formatTime = (time) => {\n  if (!time) {\n    return '';\n  }\n  return `${time.format('MMM D, YYYY')\n    .toString()} @ ${time.format('hh:mm A')\n    .toString()} (UTC${time.format('Z')\n    .toString()})`;\n};\n\n// export const formatNumber = (num, useApprox) => {\n//   if (!num || num === Infinity) {\n//     return '0';\n//   }\n//   if (useApprox) {\n//     return approx(num, {min10k: true});\n//   }\n//   return +parseFloat(num).toFixed(4);\n// };\n\nexport const shortenAddress = (account, length = 5) => {\n  if (!account) {\n    return '';\n  }\n  return `${account.substr(0, length)}...${account.substr(account.length - (length - 1), account.length - 1)}`;\n};\n\nexport const getStatPercentage = (currentValue, chartData) => {\n  if (!chartData || !currentValue) {\n    return 0.00;\n  }\n\n  const lastValue = chartData[chartData.length - 1];\n  const pct = ((lastValue / currentValue) - 1) * 100;\n  return currentValue >= lastValue ? pct : -pct;\n};\n\nexport const getAverage = (arr) => {\n  if (!arr) {\n    return 0;\n  }\n  return arr.filter((n) => n)\n    .reduce((p, c) => p + c, 0) / arr.length;\n};\n\nexport const toNumber = (bn) => +ethers.utils.formatEther(bn);\n\nexport const getFeeDistribution = (fees, pastFees) => {\n  if (!fees) {\n    return [];\n  }\n\n  const pastFee = pastFees?.length ? pastFees[pastFees.length - 1] : 0;\n  const distributed = [];\n  let a = pastFee;\n  let b = 0;\n\n  fees.forEach((fee) => {\n    b = fee - a;\n    a = b;\n\n    distributed.push(a);\n  });\n\n  return distributed;\n};\n\nexport const groupDataByKey = (data, stats, pastStats, monday) => {\n  data.forEach((d) => {\n    const date = dayjs.unix(d.timestamp.seconds);\n    const obj = date.isBefore(monday) ? pastStats : stats;\n\n    Object.keys(d)\n      .forEach((k) => {\n        if (!obj[k]) {\n          obj[k] = Array.from(new Array(7), () => 0);\n        }\n\n        let idx = date.day() - 1;\n        if (idx < 0) {\n          idx = 6; // sunday\n        }\n\n        obj[k][idx] = d[k];\n      });\n  });\n\n  Object.keys(stats)\n    .forEach((k) => {\n      const arr = stats[k];\n      let idx;\n      for (let i = arr.length - 1; i >= 0; i--) {\n        if (arr[i] > 0) {\n          idx = i;\n          break;\n        }\n      }\n\n      stats[k] = stats[k].slice(0, idx + 1);\n    });\n\n};\n\nexport const flatten = (...elements) => {\n  const arr = [];\n  elements.forEach((el) => {\n    if (!el) {\n      return;\n    }\n    if (Array.isArray(el)) {\n      el.forEach((e) => arr.push(e));\n      return;\n    }\n    arr.push(el);\n  });\n  return arr;\n};\n","import {\n  useEffect,\n  useState\n} from 'react';\n\nconst url = 'https://api.coingecko.com/api/v3/simple/price?vs_currencies=usd&ids=ethereum';\nlet cgPrice = 0;\nlet fetched = false;\n\nconst fetchEthUsdPrice = async () => {\n  const response = await fetch(url);\n  if (response.ok) {\n    const json = await response.json();\n    cgPrice = json.ethereum.usd;\n  }\n};\nsetInterval(fetchEthUsdPrice, 60000);\n\nconst useEthUsdPrice = () => {\n  const [price, setEthUsdPrice] = useState(cgPrice);\n\n  useEffect(() => {\n    if (!fetched) {\n      fetchEthUsdPrice();\n      fetched = true;\n    }\n\n    if (cgPrice !== price) {\n      setEthUsdPrice(cgPrice);\n    }\n  });\n\n  return price;\n};\n\nexport default useEthUsdPrice;\n","import {\n  useEffect,\n  useState,\n  useCallback\n} from 'react';\nimport { useWallet } from 'use-wallet';\nimport { utils } from 'ethers';\nimport useBlock from './useBlock';\nimport WorldToken from '../world/WorldToken';\nimport {\n  LP_TOKEN_CONTRACT,\n  WETH_CONTRACT\n} from '../world/constants';\nimport useEthUsdPrice from './useEthUsdPrice';\n\nconst useTokenPrice = () => {\n  const [price, setTokenPrice] = useState({\n    eth: 0,\n    usd: 0\n  });\n  const ethUsdPrice = useEthUsdPrice();\n  const block = useBlock();\n\n  const fetchTokenPrice = useCallback(async () => {\n    const lpWethAmount = await WETH_CONTRACT.balanceOf(LP_TOKEN_CONTRACT.address);\n    const lpTokenAmount = await WorldToken.read.balanceOf(LP_TOKEN_CONTRACT.address);\n\n    // WITH UNISWAP FEES\n    // const oneWorldToken = utils.parseEther('1');\n    // const deductedInputAmount = oneWorldToken.mul(997);\n    // const a = deductedInputAmount.mul(lpWethAmount);\n    // const b = lpTokenAmount.mul(1000).add(deductedInputAmount);\n    // const tokenPriceInWeth = a.div(b).toString() / 1e18;\n\n    const tokenPriceInWeth = lpWethAmount.toString() / lpTokenAmount.toString();\n\n    setTokenPrice({\n      eth: tokenPriceInWeth,\n      usd: tokenPriceInWeth * ethUsdPrice,\n    });\n  }, [block, ethUsdPrice]);\n\n  useEffect(() => {\n    fetchTokenPrice();\n  }, [block, ethUsdPrice, setTokenPrice]);\n\n  return price;\n};\n\nexport default useTokenPrice;\n","import React, { useState, useEffect } from 'react';\nimport CountUp from 'react-countup';\n\nconst Value = ({\n  value,\n  decimals\n}) => {\n  const [start, updateStart] = useState(0);\n  const [end, updateEnd] = useState(0);\n\n  useEffect(() => {\n    if (typeof value === 'number') {\n      updateStart(end);\n      updateEnd(value);\n    }\n  }, [value]);\n\n  return typeof value == 'string' ? (\n    value\n  ) : (\n    <CountUp\n      start={start}\n      end={end}\n      decimals={\n        decimals !== undefined ? decimals : end < 0 ? 4 : end > 1e5 ? 0 : 2\n      }\n      duration={1}\n      separator=\",\"\n    />\n  );\n};\n\nexport default Value;\n","import { useWallet } from 'use-wallet';\nimport { Badge, Fade, Navbar } from 'shards-react';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport { displayAmount } from '../../../world/utils';\nimport useTokenPrice from '../../../hooks/useTokenPrice';\nimport Value from '../../common/Value';\nimport React, { useState } from 'react';\n\nexport default () => {\n  const { account } = useWallet();\n  const balance = useTokenBalance(account);\n\n  return (\n    <div className=\"d-flex align-items-center mr-4\">\n      <Fade in={account}>\n          <Badge theme=\"success\" className=\"mr-2\">\n            <Value value={(balance)}/> WORLD\n          </Badge>\n        </Fade>\n        <Fade in={account}>\n          <Badge className=\"d-none d-lg-block\" theme=\"secondary\">{account}</Badge>\n        </Fade>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/metamask-fox.7db94670.svg\";","export default __webpack_public_path__ + \"static/media/wallet-connect.dfa25e47.svg\";","import { useState } from \"react\";\nimport { Fade, NavItem, NavLink, Collapse, DropdownItem } from \"shards-react\";\nimport { useWallet } from 'use-wallet';\nimport metamaskLogo from \"../../../../assets/metamask-fox.svg\";\nimport walletConnectLogo from \"../../../../assets/wallet-connect.svg\";\nimport { shortenAddress } from \"../../../../world/utils\";\n\nconst Notifications = () => {\n  const {connect, account, reset, connector} = useWallet();\n  const [visible, setVisible] = useState(false);\n\n  return (\n    <NavItem className=\"border-right dropdown notifications\">\n      <NavLink\n        className=\"nav-link-icon text-center\"\n        onClick={() => setVisible(!visible)}\n      >\n        <div\n          className=\"nav-link-icon__wrapper px-2\"\n          style={{cursor: 'pointer'}}\n        >\n          {visible\n            ? <span>Close<br/>Dropdown</span>\n            : account ? <span>Change<br/>Wallet</span> : <span>Connect<br/>Wallet</span>}\n        </div>\n      </NavLink>\n      <Collapse\n        open={visible}\n        className=\"dropdown-menu dropdown-menu-small\"\n        style={{minWidth: '15rem'}}\n      >\n        <DropdownItem\n          className=\"connect-wallet-item-wrapper\"\n          onClick={async () => {\n            if (connector === 'injected') {\n              return;\n            }\n            await connect('injected');\n            setVisible(false);\n          }}\n        >\n          <div className=\"notification__icon-wrapper\">\n            <div className=\"notification__icon\">\n              <img\n                className=\"user-avatar rounded-circle\"\n                src={metamaskLogo}\n                alt=\"Metamask\"\n                height={31}\n                width={31}\n              />{\" \"}\n            </div>\n          </div>\n          <div className=\"notification__content\">\n            <span className=\"notification__category select-wallet\">Metamask</span>\n            {connector === 'injected' ? (\n              <Fade in={true}>\n                <p>Connected: {shortenAddress(account)}</p>\n              </Fade>\n            ) : null}\n          </div>\n        </DropdownItem>\n        <DropdownItem\n          className=\"connect-wallet-item-wrapper\"\n          onClick={async () => {\n            if (connector === 'walletconnect') {\n              return;\n            }\n            await connect('walletconnect');\n            setVisible(false);\n          }}\n        >\n          <div className=\"notification__icon-wrapper\">\n            <div className=\"notification__icon\">\n              <img\n                className=\"user-avatar rounded-circle\"\n                src={walletConnectLogo}\n                alt=\"WalletConnect\"\n                height={31}\n                width={31}\n              />{\" \"}\n            </div>\n          </div>\n          <div className=\"notification__content\">\n            <span className=\"notification__category select-wallet\">WalletConnect</span>\n            {connector === 'walletconnect' ? (\n              <Fade in={true}>\n                <p>Connected: {shortenAddress(account)}</p>\n              </Fade>\n            ) : null}\n          </div>\n        </DropdownItem>\n        {account ? (\n          <Fade in={true}>\n            <DropdownItem\n              className=\"notification__all text-danger\"\n              onClick={async () => {\n                await reset();\n                setVisible(false);\n              }}\n            >\n              <i className=\"material-icons text-danger\">&#xE879;</i> Disconnect Wallet\n            </DropdownItem>\n          </Fade>\n        ) : null}\n      </Collapse>\n    </NavItem>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\n\nexport default () => (\n  <Nav navbar className=\"border-left flex-row\">\n    <Notifications />\n    {/*<UserActions />*/}\n  </Nav>\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink\n} from \"shards-react\";\nimport metamaskLogo from \"../../../../assets/metamask-fox.svg\";\n\nexport default class UserActions extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false\n    };\n\n    this.toggleUserActions = this.toggleUserActions.bind(this);\n  }\n\n  toggleUserActions() {\n    this.setState({\n      visible: !this.state.visible\n    });\n  }\n\n  render() {\n    return (\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <span className=\"d-none d-md-inline-block\">Connect Wallet</span>\n        </DropdownToggle>\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\n          <DropdownItem tag={Link}>\n            <div className=\"notification__icon-wrapper\">\n              <div className=\"notification__icon\">\n                <img\n                  className=\"user-avatar rounded-circle mr-2\"\n                  src={metamaskLogo}\n                  alt=\"User Avatar\"\n                />{\" \"}\n              </div>\n            </div>\n           Metamask\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"edit-user-profile\">\n            <i className=\"material-icons\">&#xE8B8;</i> Edit Profile\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"file-manager-list\">\n            <i className=\"material-icons\">&#xE2C7;</i> Files\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"transaction-history\">\n            <i className=\"material-icons\">&#xE896;</i> Transactions\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem tag={Link} to=\"/\" className=\"text-danger\">\n            <i className=\"material-icons text-danger\">&#xE879;</i> Disconnect\n          </DropdownItem>\n        </Collapse>\n      </NavItem>\n    );\n  }\n}\n","import React, { createContext, useState } from 'react';\n\nexport const Context = createContext({\n  open: false,\n});\n\nconst SidebarContext = ({ children }) => {\n  const [open, setOpen] = useState(false);\n  const toggle = () => setOpen(!open);\n  return <Context.Provider value={{ open, toggle }}>{children}</Context.Provider>;\n};\n\nexport default SidebarContext;\n","import { useContext } from 'react';\nimport { Context } from '../contexts/SidebarContext';\n\nconst useSidebar = () => {\n  return useContext(Context);\n};\n\nexport default useSidebar;\n","import React from 'react';\nimport useSidebar from '../../../hooks/useSidebar';\n\nconst NavbarToggle = () => {\n  const { toggle } = useSidebar();\n  return (\n    <nav className=\"nav\">\n      <a href=\"#\" onClick={toggle}\n         className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-none d-lg-none text-center\">\n        <i className=\"material-icons\">&#xE5D2;</i>\n      </a>\n    </nav>\n  );\n};\n\nexport default NavbarToggle;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Badge, Container, Navbar } from 'shards-react';\n\nimport NavbarSearch from './NavbarSearch';\nimport NavbarNav from './NavbarNav/NavbarNav';\nimport NavbarToggle from './NavbarToggle';\nimport Value from '../../common/Value';\nimport useTokenPrice from '../../../hooks/useTokenPrice';\n\nconst MainNavbar = ({ stickyTop }) => {\n  const [ethPrice, setEthPrice] = useState(false);\n  const tokenPrice = useTokenPrice();\n  const classes = classNames(\n    'main-navbar',\n    'bg-white',\n    stickyTop && 'sticky-top'\n  );\n\n  return (\n    <div className={classes}>\n      <Container fluid className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\n          <div className=\"d-flex align-items-center ml-4\">\n            <Badge\n              href=\"javascript:void(0)\"\n              theme=\"secondary\"\n              className=\"mr-2 gradient-bg\"\n              onClick={() => {\n                setEthPrice(!ethPrice);\n              }}>\n              1 WORLD = <Value value={ethPrice ? tokenPrice.eth : tokenPrice.usd}\n                               decimals={6}/> {ethPrice ? 'ETH' : 'USD'}\n            </Badge>\n          </div>\n          <div>\n            <NavbarSearch/>\n            <NavbarNav/>\n            <NavbarToggle/>\n          </div>\n        </Navbar>\n      </Container>\n    </div>\n  );\n};\n\nMainNavbar.propTypes = {\n  /**\n   * The layout type where the MainNavbar is used.\n   */\n  layout: PropTypes.string,\n  /**\n   * Whether the main navbar is sticky to the top, or not.\n   */\n  stickyTop: PropTypes.bool\n};\n\nMainNavbar.defaultProps = {\n  stickyTop: true\n};\n\nexport default MainNavbar;\n","export default __webpack_public_path__ + \"static/media/logo.6d7b674c.png\";","import React from 'react';\nimport { Navbar, NavbarBrand } from 'shards-react';\nimport useSidebar from '../../../hooks/useSidebar';\nimport worldLogo from '../../../assets/logo.png';\n\nconst SidebarMainNavbar = () => {\n  const {\n    toggle\n  } = useSidebar();\n\n  return (\n    <div className=\"main-navbar\">\n      <Navbar\n        className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n        type=\"light\"\n      >\n        <NavbarBrand\n          className=\"w-100 mr-0 d-flex justify-content-center align-items-center\"\n          href=\"http://worldtoken.network/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ lineHeight: '25px' }}\n        >\n          <img\n            id=\"main-logo\"\n            className=\"d-inline-block align-top mr-1\"\n            style={{ maxWidth: '40px' }}\n            src={worldLogo}\n            alt=\"World Token\"\n          />\n          <span className=\"sidebar-title gradient-text\">WORLD</span>\n        </NavbarBrand>\n        {/* eslint-disable-next-line */}\n        <a\n          className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none nav-link nav-link-icon \"\n          onClick={() => {\n            toggle();\n          }}\n        >\n          <i className=\"material-icons\" style={{ lineHeight: 'normal' }}>&#xE5C4;</i>\n        </a>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default SidebarMainNavbar;\n","const NavLinkAnchorTag = ({ children, href }) => (\n  <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" className=\"nav-link\">\n    {children}\n  </a>\n);\n\nexport default NavLinkAnchorTag;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink as RouteNavLink } from 'react-router-dom';\nimport {\n  NavItem,\n  NavLink\n} from 'shards-react';\nimport NavLinkAnchorTag from '../../common/NavLinkAnchorTag';\nimport useSidebar from '../../../hooks/useSidebar';\n\nconst SidebarNavItem = ({ item }) => {\n  const { toggle } = useSidebar();\n  return (\n    <NavItem>\n      <NavLink\n        onClick={toggle}\n        tag={item.to ? RouteNavLink : NavLinkAnchorTag}\n        href={item.href}\n        to={item.to}>\n        {item.htmlBefore && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n          />\n        )}\n        {item.title && <span>{item.title}</span>}\n        {item.htmlAfter && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n          />\n        )}\n      </NavLink>\n    </NavItem>\n  );\n};\n\nSidebarNavItem.propTypes = {\n  /**\n   * The item object.\n   */\n  item: PropTypes.object\n};\n\nexport default SidebarNavItem;\n","import React from 'react';\nimport { Nav } from 'shards-react';\n\nimport SidebarNavItem from './SidebarNavItem';\nimport { CHAIN_ID, CONTRACT_ADDRESSES } from '../../../world/constants';\nimport useSidebar from '../../../hooks/useSidebar';\n\nconst SidebarNavItems = () => {\n  return (\n    <div className=\"nav-wrapper\">\n      <div>\n        <h6 className=\"main-sidebar__nav-title\">Dashboard</h6>\n        <Nav className=\"nav--no-borders flex-column\">\n          <SidebarNavItem\n            item={{\n              title: 'Overview',\n              to: '/overview',\n              htmlBefore: '<i class=\"material-icons\">public</i>',\n              htmlAfter: ''\n            }}\n          />\n          <SidebarNavItem\n            item={{\n              title: 'Farm',\n              to: '/farm',\n              htmlBefore: '<i class=\"material-icons\">agriculture</i>',\n              htmlAfter: ''\n            }}\n          />\n          <SidebarNavItem\n            item={{\n              title: 'Marketplace',\n              to: '/marketplace',\n              htmlBefore: '<i class=\"material-icons\">store</i>',\n              htmlAfter: ''\n            }}\n          />\n        </Nav>\n      </div>\n      <div>\n        <h6 className=\"main-sidebar__nav-title\">Trade</h6>\n        <Nav className=\"nav--no-borders flex-column\">\n          <SidebarNavItem\n            item={{\n              title: 'Uniswap',\n              href: '/uniswap',\n              htmlBefore: '<i class=\"material-icons\">swap_horiz</i>',\n              htmlAfter: ''\n            }}\n          />\n          <SidebarNavItem\n            item={{\n              title: 'Dextools',\n              href: '/dextools',\n              htmlBefore: '<i class=\"material-icons\">trending_up</i>',\n              htmlAfter: ''\n            }}\n          />\n        </Nav>\n      </div>\n      <div>\n        <h6 className=\"main-sidebar__nav-title\">Information</h6>\n        <Nav className=\"nav--no-borders flex-column\">\n          <SidebarNavItem\n            item={{\n              title: 'Litepaper',\n              href: 'https://worldtoken.network/Litepaper.pdf',\n              htmlBefore: '<i class=\"material-icons\">library_books</i>',\n              htmlAfter: ''\n            }}\n          />\n          <SidebarNavItem\n            item={{\n              title: 'One-pager',\n              href: 'https://worldtoken.network/One%20Pager.pdf',\n              htmlBefore: '<i class=\"material-icons\">sticky_note_2</i>',\n              htmlAfter: ''\n            }}\n          />\n          <SidebarNavItem\n            item={{\n              title: 'Audit',\n              href: 'https://solidity.finance/audits/World/',\n              htmlBefore: '<i class=\"material-icons\">verified_user</i>',\n              htmlAfter: ''\n            }}\n          />\n          <SidebarNavItem\n            item={{\n              title: 'Etherscan',\n              href: `http://etherscan.io/token/${CONTRACT_ADDRESSES.worldToken[CHAIN_ID]}`,\n              htmlBefore: '<i class=\"material-icons\">search</i>',\n              htmlAfter: ''\n            }}\n          />\n        </Nav>\n      </div>\n      <div>\n        <h6 className=\"main-sidebar__nav-title\">Community</h6>\n        <Nav className=\"nav--no-borders flex-column\">\n          <SidebarNavItem\n            item={{\n              title: 'Telegram',\n              href: 'https://t.me/worldtokenofficial',\n              htmlBefore: '<i class=\"material-icons fab fa-telegram\"></i>',\n              htmlAfter: ''\n            }}\n          />\n          <SidebarNavItem\n            item={{\n              title: 'Twitter',\n              href: 'https://twitter.com/worldtoken_',\n              htmlBefore: '<i class=\"material-icons fab fa-twitter\"></i>',\n              htmlAfter: ''\n            }}\n          />\n          <SidebarNavItem\n            item={{\n              title: 'Github',\n              href: 'https://github.com/worldtoken/WORLD',\n              htmlBefore: '<i class=\"material-icons fab fa-github\"></i>',\n              htmlAfter: ''\n            }}\n          />\n        </Nav>\n      </div>\n    </div>\n  );\n};\n\nexport default SidebarNavItems;\n","import classNames from 'classnames';\nimport { Col } from 'shards-react';\n\nimport SidebarMainNavbar from './SidebarMainNavbar';\nimport SidebarNavItems from './SidebarNavItems';\nimport useSidebar from '../../../hooks/useSidebar';\n\nconst MainSidebar = () => {\n  const { open } = useSidebar();\n  const classes = classNames(\n    'main-sidebar',\n    'px-0',\n    'col-12',\n    open && 'open'\n  );\n\n  return (\n    <Col\n      tag=\"aside\"\n      className={classes}\n      lg={{ size: 2 }}\n      md={{ size: 3 }}\n    >\n      <SidebarMainNavbar/>\n      <SidebarNavItems/>\n    </Col>\n  );\n};\n\nexport default MainSidebar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Nav, NavItem, NavLink } from \"shards-react\";\nimport { Link } from \"react-router-dom\";\nimport { CHAIN_ID, CONTRACT_ADDRESSES } from \"../../world/constants\";\n\nconst MainFooter = ({contained, menuItems, copyright}) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid={contained}>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <NavItem key={idx}>\n              <NavLink\n                // tag={Link}\n                href={item.to}\n              >\n                {item.title}\n              </NavLink>\n            </NavItem>\n          ))}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.propTypes = {\n  /**\n   * Whether the content is contained, or not.\n   */\n  contained: PropTypes.bool,\n  /**\n   * The menu items array.\n   */\n  menuItems: PropTypes.array,\n  /**\n   * The copyright info.\n   */\n  copyright: PropTypes.string\n};\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © 2021 WORLD Token\",\n  menuItems: [\n    {\n      title: `Token: ${CONTRACT_ADDRESSES.worldToken[CHAIN_ID]}`,\n      to: `https://etherscan.io/token/${CONTRACT_ADDRESSES.worldToken[CHAIN_ID]}`\n    },\n  ]\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"./MainNavbar/MainNavbar\";\nimport MainSidebar from \"./MainSidebar/MainSidebar\";\nimport MainFooter from \"./MainFooter\";\n\nconst DefaultLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n        {!noFooter && <MainFooter />}\n      </Col>\n    </Row>\n  </Container>\n);\n\nDefaultLayout.propTypes = {\n  /**\n   * Whether to display the navbar, or not.\n   */\n  noNavbar: PropTypes.bool,\n  /**\n   * Whether to display the footer, or not.\n   */\n  noFooter: PropTypes.bool\n};\n\nDefaultLayout.defaultProps = {\n  noNavbar: false,\n  noFooter: false\n};\n\nexport default DefaultLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Col } from \"shards-react\";\n\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    // \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"12\" className={classes} { ...attrs }>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h1 className=\"page-title gradient-text page-title-h1\">{title}</h1>\n    </Col>\n  )\n};\n\nPageTitle.propTypes = {\n  /**\n   * The page title.\n   */\n  title: PropTypes.string,\n  /**\n   * The page subtitle.\n   */\n  subtitle: PropTypes.string\n};\n\nexport default PageTitle;\n","import Chart from 'chart.js';\n\nChart.defaults.LineWithLine = Chart.defaults.line;\nChart.controllers.LineWithLine = Chart.controllers.line.extend({\n  draw(ease) {\n    Chart.controllers.line.prototype.draw.call(this, ease);\n\n    if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\n      const activePoint = this.chart.tooltip._active[0];\n      const { ctx } = this.chart;\n      const { x } = activePoint.tooltipPosition();\n      const topY = this.chart.scales['y-axis-0'].top;\n      const bottomY = this.chart.scales['y-axis-0'].bottom;\n\n      // Draw the line\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(x, topY);\n      ctx.lineTo(x, bottomY);\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = '#ddd';\n      ctx.stroke();\n      ctx.restore();\n    }\n  },\n});\n\nexport default Chart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shortid from 'shortid';\nimport { Card, CardBody } from 'shards-react';\n\nimport Chart from '../../world/chart';\nimport Value from './Value';\n\nconst labels = Array.from(new Array(15), (_, i) => null);\n\nclass SmallStats extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          enabled: false,\n          custom: false\n        },\n        elements: {\n          point: {\n            radius: 0\n          },\n          line: {\n            tension: 0.33\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false\n              }\n            }\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                isplay: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: Math.max(...this.props.chartData[0].data) + 1\n              }\n            }\n          ]\n        }\n      },\n      ...this.props.chartOptions\n    };\n\n    this.chartConfig = {\n      ...{\n        type: 'line',\n        data: {\n          ...{\n            labels\n          },\n          ...{\n            datasets: this.props.chartData\n          }\n        },\n        options: chartOptions\n      },\n      ...this.props.chartConfig\n    };\n\n    new Chart(this.canvasRef.current, this.chartConfig);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.chartData[0].data.length === this.props.chartData[0].data.length) {\n      return;\n    }\n\n    this.chartConfig.data.datasets[0].data = this.props.chartData[0].data;\n    new Chart(this.canvasRef.current, this.chartConfig);\n  }\n\n  render() {\n    const {\n      variation,\n      label,\n      value,\n      percentage,\n      increase,\n      append,\n      prepend,\n      decimals,\n      subAppend\n    } = this.props;\n\n    const cardClasses = classNames(\n      'stats-small',\n      variation && `stats-small--${variation}`\n    );\n\n    const cardBodyClasses = classNames(\n      variation === '1' ? 'p-0 d-flex' : 'px-0 pb-0'\n    );\n\n    const innerWrapperClasses = classNames(\n      'd-flex',\n      variation === '1' ? 'flex-column m-auto' : 'px-3'\n    );\n\n    const dataFieldClasses = classNames(\n      'stats-small__data',\n      variation === '1' && 'text-center'\n    );\n\n    const labelClasses = classNames(\n      'stats-small__label',\n      'text-uppercase',\n      variation !== '1' && 'mb-1'\n    );\n\n    const valueClasses = classNames(\n      'stats-small__value',\n      'count',\n      variation === '1' ? 'my-3' : 'm-0'\n    );\n\n    const innerDataFieldClasses = classNames(\n      'stats-small__data',\n      variation !== '1' && 'text-right align-items-center',\n      'percentage'\n    );\n\n    const percentageClasses = classNames(\n      'stats-small__percentage',\n      `stats-small__percentage--${increase ? 'increase' : 'decrease'}`\n    );\n\n    const canvasHeight = variation === '1' ? 120 : 60;\n\n    return (\n      <Card small className={cardClasses}>\n        <CardBody className={cardBodyClasses}>\n          <div className={innerWrapperClasses}>\n            <div className={dataFieldClasses}>\n              <span className={labelClasses}>{label}</span>\n              <h6 className={valueClasses}>\n                {prepend}<Value value={(value)} decimals={decimals}/>{append}\n                &nbsp;<span className={labelClasses}>{subAppend}</span>\n              </h6>\n            </div>\n            <div className={innerDataFieldClasses}>\n              <span className={percentageClasses}>\n                <Value value={(percentage)} decimals={2}/>%\n              </span>\n            </div>\n          </div>\n          <canvas\n            height={canvasHeight}\n            ref={this.canvasRef}\n            className={`stats-small-${shortid()}`}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nSmallStats.propTypes = {\n  /**\n   * The Small Stats variation.\n   */\n  variation: PropTypes.string,\n  /**\n   * The label.\n   */\n  label: PropTypes.string,\n  /**\n   * The value.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The percentage number or string.\n   */\n  percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Whether is a value increase, or not.\n   */\n  increase: PropTypes.bool,\n  /**\n   * The Chart.js configuration object.\n   */\n  chartConfig: PropTypes.object,\n  /**\n   * The Chart.js options object.\n   */\n  chartOptions: PropTypes.object,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.array.isRequired,\n  /**\n   * The chart labels.\n   */\n  chartLabels: PropTypes.array,\n  append: PropTypes.string,\n  decimal: PropTypes.number\n};\n\nSmallStats.defaultProps = {\n  increase: true,\n  percentage: 0,\n  value: 0,\n  label: 'Label',\n  chartOptions: Object.create(null),\n  chartConfig: Object.create(null),\n  chartData: [],\n  chartLabels: []\n};\n\nexport default SmallStats;\n","import { Contract, ethers, utils } from 'ethers';\nimport WorldFarmingAbi from './abi/WorldFarming.json';\nimport ERC20Abi from './abi/ERC20.json';\nimport {\n  BLOCKS_PER_DAY,\n  CHAIN_ID,\n  CONTRACT_ADDRESSES,\n  DEFAULT_PROVIDER,\n  LP_TOKEN_CONTRACT,\n  WETH_CONTRACT,\n  WORLD_ETH_PAIR\n} from './constants';\nimport WorldToken from './WorldToken';\nimport { ZERO_BN } from './utils';\n\nexport default class WorldFarm {\n  static address = CONTRACT_ADDRESSES.worldFarm[CHAIN_ID];\n\n  static read = new Contract(WorldFarm.address, WorldFarmingAbi, DEFAULT_PROVIDER);\n\n  constructor(signer) {\n    this.contract = new Contract(WorldFarm.address, WorldFarmingAbi, signer);\n    this.signer = signer;\n  }\n\n  async wallet() {\n    return this.signer.getAddress();\n  }\n\n  async lpTokenBalance() {\n    return LP_TOKEN_CONTRACT.balanceOf(await this.wallet());\n  }\n\n  async lpTokenAllowance() {\n    return LP_TOKEN_CONTRACT.allowance(await this.wallet(), this.contract.address);\n  }\n\n  async lpTokenMaxApprove() {\n    const lpToken = new Contract(\n      WORLD_ETH_PAIR.address,\n      ERC20Abi,\n      this.signer\n    );\n    const amount = ethers.constants.MaxUint256;\n    const tx = await lpToken.approve(this.contract.address, amount);\n    await tx.wait();\n\n    return amount;\n  }\n\n  async stakedBalance() {\n    const { amount } = await this.contract.userInfo(WORLD_ETH_PAIR.pid, await this.wallet());\n    return amount;\n  }\n\n  static async roi(worldPerBlock, ethUsdPrice) {\n    let lpContractToken = await WorldToken.read.balanceOf(LP_TOKEN_CONTRACT.address);\n    lpContractToken = +lpContractToken.toString() / 1e18;\n\n    let lpContractWeth = await WETH_CONTRACT.balanceOf(LP_TOKEN_CONTRACT.address);\n    lpContractWeth = +lpContractWeth.toString() / 1e18;\n\n    let balance = await LP_TOKEN_CONTRACT.balanceOf(WorldFarm.address);\n    balance = +balance.toString() / 1e18;\n\n    let totalSupply = await LP_TOKEN_CONTRACT.totalSupply();\n    totalSupply = +totalSupply.toString() / 1e18;\n\n    const portionLp = balance / totalSupply;\n\n    const tokenAmount = (lpContractToken * portionLp);\n    const wethAmount = (lpContractWeth * portionLp);\n\n    const tokenPriceInWeth = wethAmount / tokenAmount;\n    const tokenPriceUSD = tokenPriceInWeth * ethUsdPrice;\n\n    // const averageBlockTime = 13.2;\n    // const blocksPerHour = 3600 / averageBlockTime;\n\n    const reserveETH = lpContractWeth + (lpContractToken * tokenPriceInWeth);\n    const reserveUSD = reserveETH * ethUsdPrice;\n    const balanceUSD = portionLp * reserveUSD;\n\n    const roiPerBlock = (worldPerBlock * tokenPriceUSD) / balanceUSD;\n\n    // const blocksPerHour = BLOCKS_PER_DAY / 24;\n    // const roiPerHour = roiPerBlock * blocksPerHour;\n    // const roiPerDay = roiPerHour * 24;\n    const roiPerDay = roiPerBlock * BLOCKS_PER_DAY;\n    const roiPerMonth = roiPerDay * 30;\n    const roiPerYear = roiPerMonth * 12;\n\n    return {\n      // roiPerBlock,\n      // roiPerHour,\n      roiPerDay,\n      roiPerMonth,\n      roiPerYear,\n      rewardPerThousand: roiPerDay * (1000 / tokenPriceUSD),\n      totalStakedLP: utils.parseEther(balance.toString()),\n      totalValueLocked: balanceUSD\n    };\n  }\n\n  static async poolWeight() {\n    const { allocPoint } = await WorldFarm.read.poolInfo(WORLD_ETH_PAIR.pid);\n    const totalAllocPoint = await WorldFarm.read.totalAllocPoint();\n    return allocPoint.div(totalAllocPoint);\n  }\n\n  static async totalLpWethValue() {\n    // Get balance of the token address\n    let tokenAmountWholeLP = await WorldToken.read.balanceOf(LP_TOKEN_CONTRACT.address);\n    tokenAmountWholeLP = +tokenAmountWholeLP.toString();\n\n    // Get the share of lpContract that WorldFarm owns\n    let balance = await LP_TOKEN_CONTRACT.balanceOf(WorldFarm.address);\n    balance = +balance.toString();\n\n    // Convert that into the portion of total lpContract = p1\n    let totalSupply = await LP_TOKEN_CONTRACT.totalSupply();\n    totalSupply = +totalSupply.toString();\n\n    // Get total weth value for the lpContract = w1\n    let lpContractWeth = await WETH_CONTRACT.balanceOf(LP_TOKEN_CONTRACT.address);\n    lpContractWeth = +lpContractWeth.toString();\n\n    // Return p1 * w1 * 2\n    const portionLp = balance / totalSupply;\n    const totalLpWethValue = portionLp * lpContractWeth * 2;\n\n    // Calculate\n    const tokenAmount = (tokenAmountWholeLP * portionLp) / 1e18;\n    const wethAmount = (lpContractWeth * portionLp) / 1e18;\n\n    let poolWeight = await WorldFarm.poolWeight();\n    poolWeight = +poolWeight.toString();\n\n    return {\n      tokenAmount,\n      wethAmount,\n      poolWeight,\n      totalWethValue: totalLpWethValue / 1e18,\n      tokenPriceInWeth: wethAmount * tokenAmount,\n      totalStakedLp: balance / 1e18\n    };\n  }\n\n  async pendingRewards() {\n    return this.contract.pendingRewards(WORLD_ETH_PAIR.pid, await this.wallet());\n  }\n\n  async stake(amount) {\n    const tx = await this.contract.deposit(WORLD_ETH_PAIR.pid, utils.parseEther(amount));\n    await tx.wait();\n  }\n\n  async unstake(amount) {\n    const tx = await this.contract.withdraw(WORLD_ETH_PAIR.pid, utils.parseEther(amount));\n    await tx.wait();\n  }\n\n  async claimRewards() {\n    const tx = await this.contract.deposit(WORLD_ETH_PAIR.pid, ZERO_BN);\n    await tx.wait();\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport * as ethers from 'ethers';\nimport WorldFarm from '../world/WorldFarm';\n\nconst useWorldFarm = () => {\n  const { account, ethereum } = useWallet();\n  const [worldFarm, setWorldFarm] = useState(null);\n\n  const init = async () =>{\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      setWorldFarm(new WorldFarm(provider.getSigner()));\n      return;\n    }\n    setWorldFarm(null);\n  };\n\n  useEffect(() => {\n    init();\n  }, [account, ethereum]);\n\n  return worldFarm;\n};\n\nexport default useWorldFarm;\n","import { useCallback, useEffect, useState } from 'react'\n\nimport { useWallet } from 'use-wallet'\n\nimport useBlock from './useBlock'\nimport useWorldToken from \"./useWorldToken\";\nimport { BigNumber } from \"ethers\";\nimport useWorldFarm from \"./useWorldFarm\";\nimport { ZERO_BN } from \"../world/utils\";\n\nconst useLpTokenBalance = () => {\n  const [balance, setBalance] = useState(ZERO_BN);\n  const block = useBlock();\n  const worldFarm = useWorldFarm();\n\n  const fetchBalance = useCallback(async () => {\n    const balance = await worldFarm?.lpTokenBalance();\n    setBalance(balance);\n  }, [block]);\n\n  useEffect(() => {\n    fetchBalance();\n  }, [block, setBalance]);\n\n  return balance;\n}\n\nexport default useLpTokenBalance;\n","import { useCallback, useEffect, useState } from 'react'\n\nimport { useWallet } from 'use-wallet'\n\nimport useBlock from './useBlock'\nimport useWorldToken from \"./useWorldToken\";\nimport { BigNumber } from \"ethers\";\nimport useWorldFarm from \"./useWorldFarm\";\n\nconst useLpTokenAllowance = () => {\n  const [allowance, setAllowance] = useState(BigNumber.from(0));\n  const {\n    account,\n    ethereum,\n  } = useWallet();\n  const block = useBlock();\n  const worldFarm = useWorldFarm();\n\n  const fetchAllowance = useCallback(async () => {\n    const allowance = await worldFarm?.lpTokenAllowance();\n    setAllowance(allowance);\n  }, [worldFarm]);\n\n  useEffect(() => {\n    fetchAllowance();\n  }, [account, ethereum, block]);\n\n  return {\n    allowance: allowance || BigNumber.from(0),\n    setAllowance\n  };\n}\n\nexport default useLpTokenAllowance;\n","const BadgeAnchorTag = ({ children, href }) => (\n  <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" className=\"badge badge-light wrap-text\">\n    {children}\n  </a>\n);\n\nexport default BadgeAnchorTag;\n","import { useState } from 'react';\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  ListGroup,\n  ListGroupItem,\n  ListGroupItemHeading,\n  Row\n} from 'shards-react';\nimport {\n  BigNumber,\n  utils\n} from 'ethers';\nimport { useWallet } from 'use-wallet';\nimport useWorldFarm from '../../hooks/useWorldFarm';\nimport {\n  displayAmount,\n  shortenAddress\n} from '../../world/utils';\nimport useLpTokenBalance from '../../hooks/useLpTokenBalance';\nimport useLpTokenAllowance from '../../hooks/useLpTokenAllowance';\nimport {\n  BLOCKS_PER_DAY,\n  CHAIN_ID,\n  CONTRACT_ADDRESSES\n} from '../../world/constants';\nimport Value from '../common/Value';\nimport BadgeAnchorTag from '../common/BadgeAnchorTag';\n\nconst Stake = ({\n  tokenPrice,\n  worldPerBlock,\n  totalStakedLP,\n  totalValueLocked\n}) => {\n  const { account } = useWallet();\n  const [amount, setAmount] = useState(0);\n  const {\n    setAllowance,\n    allowance\n  } = useLpTokenAllowance();\n  const worldFarm = useWorldFarm();\n  const balance = useLpTokenBalance();\n  const stakingAllowed = !allowance.isZero();\n\n  const stakeAmount = utils.parseEther(amount.toString());\n  const totalStaked = totalStakedLP.add(stakeAmount);\n\n  let worldPerDay = 0;\n  let stakeValue = 0;\n  if (!totalStakedLP.isZero() && amount) {\n    const share = stakeAmount.toString() / totalStaked.toString();\n    worldPerDay = share * worldPerBlock * BLOCKS_PER_DAY;\n    stakeValue = totalValueLocked * share;\n  }\n\n  return (\n    <Card small className=\"blog-comments\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Stake WORLD-ETH LP Tokens</h6>\n      </CardHeader>\n\n      <CardBody className=\"d-flex flex-column\">\n        <label htmlFor=\"lpAmount\">Enter LP amount to stake</label>\n        <InputGroup>\n          <FormInput\n            id=\"lpAmount\"\n            placeholder=\"0\"\n            onChange={(e) => {\n              const num = e.target.value;\n              setAmount(num || '0');\n            }}\n            value={amount}\n          />\n          <InputGroupAddon type=\"append\">\n            <Button\n              theme=\"white\"\n              onClick={() => {\n                if (!balance.isZero()) {\n                  setAmount(utils.formatEther(balance));\n                }\n              }}\n            >\n              Max\n            </Button>\n          </InputGroupAddon>\n          <InputGroupAddon type=\"append\">\n            <Button\n              theme='accent'\n              outline\n              onClick={async () => {\n                if (stakingAllowed) {\n                  try {\n                    await worldFarm?.stake(amount);\n                    setAmount('0');\n                  } catch (e) {\n                    console.log('Stake error: ', e);\n                    setAllowance(BigNumber.from(0));\n                  }\n                  return;\n                }\n\n                try {\n                  const amount = await worldFarm?.lpTokenMaxApprove();\n                  setAllowance(amount);\n                } catch (e) {\n                  console.log('Approve error: ', e);\n                }\n              }}\n            >\n              {stakingAllowed ? 'Stake' : 'Approve'}\n            </Button>\n          </InputGroupAddon>\n        </InputGroup>\n\n        <ListGroup flush className=\"list-group-small\">\n          <ListGroupItemHeading/>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\"><b>Available balance</b></span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              <b><Value value={(balance)}/></b>\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">Stake value</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              ~$<Value value={(stakeValue)} decimals={4}/>\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">WORLD per day</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              ~<Value value={(worldPerDay)}/>\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">Earnings per day (USD)</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              ~$<Value value={(worldPerDay * tokenPrice.usd)} decimals={4}/>\n            </span>\n          </ListGroupItem>\n        </ListGroup>\n      </CardBody>\n\n      <CardFooter className=\"border-top\">\n        <Row>\n          <Col className=\"view-report \" sm=\"12\" md=\"12\">\n            <Badge\n              href={`https://etherscan.com/address/${CONTRACT_ADDRESSES.worldFarm[CHAIN_ID]}`}\n              tag={BadgeAnchorTag}\n            >\n              Contract: {CONTRACT_ADDRESSES.worldFarm[CHAIN_ID]}\n            </Badge>\n          </Col>\n        </Row>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default Stake;\n","import {\n  Badge,\n  Card,\n  CardBody, CardFooter,\n  CardHeader, Col,\n  ListGroup,\n  ListGroupItem, Row\n} from 'shards-react';\nimport { displayAmount } from '../../world/utils';\nimport { BLOCKS_PER_DAY, CHAIN_ID, CONTRACT_ADDRESSES } from '../../world/constants';\nimport Value from '../common/Value';\nimport useEthUsdPrice from '../../hooks/useEthUsdPrice';\nimport BadgeAnchorTag from '../common/BadgeAnchorTag';\n\nconst StakingInfo = ({\n  stakedBalance,\n  totalStakedLP,\n  worldPerBlock,\n  tokenPrice,\n  totalValueLocked\n}) => {\n  let worldPerDay = 0;\n  let stakedValue = 0;\n\n  if (!totalStakedLP.isZero() && !stakedBalance.isZero()) {\n    const share = stakedBalance.toString() / totalStakedLP.toString();\n    worldPerDay = share * worldPerBlock * BLOCKS_PER_DAY;\n    stakedValue = totalValueLocked * share;\n  }\n\n  return (\n    <Card small className=\"blog-comments\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Staking Information</h6>\n      </CardHeader>\n\n      <CardBody className=\"d-flex flex-column\">\n        <ListGroup flush className=\"list-group-small\">\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\"><b>Staked value</b></span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              <b>$<Value value={(stakedValue)} decimals={4} /></b>\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">WORLD per day</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              <Value value={(worldPerDay)} />\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">WORLD per week</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              <Value value={(worldPerDay * 7)} />\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">WORLD per month</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              <Value value={(worldPerDay * 31)} />\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">Earnings per day (USD)</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              $<Value value={(worldPerDay * tokenPrice.usd)} decimals={4} />\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">Earnings per week (USD)</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              $<Value value={((worldPerDay * 7) * tokenPrice.usd)} decimals={4} />\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">Earnings per month (USD)</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              $<Value value={((worldPerDay * 31) * tokenPrice.usd)} decimals={4} />\n            </span>\n          </ListGroupItem>\n        </ListGroup>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default StakingInfo;\n","import { useCallback, useEffect, useState } from 'react'\n\nimport { useWallet } from 'use-wallet'\n\nimport useBlock from './useBlock'\nimport useWorldFarm from \"./useWorldFarm\";\nimport { ZERO_BN } from \"../world/utils\";\n\nconst useStakedBalance = () => {\n  const [balance, setBalance] = useState(ZERO_BN);\n  const {account, ethereum} = useWallet();\n  const worldFarm = useWorldFarm();\n  const block = useBlock();\n\n  const fetchBalance = async () => {\n    if (!account || !worldFarm) {\n      setBalance(ZERO_BN);\n      return;\n    }\n    const balance = await worldFarm?.stakedBalance();\n    setBalance(balance);\n  };\n\n  useEffect(() => {\n    fetchBalance();\n  }, [account, worldFarm, ethereum, block]);\n\n  return balance;\n}\n\nexport default useStakedBalance;\n","import { useEffect, useState } from 'react'\n\nimport { useWallet } from 'use-wallet'\n\nimport useBlock from './useBlock'\nimport useWorldFarm from \"./useWorldFarm\";\nimport { BigNumber } from \"ethers\";\n\nconst usePendingRewards = () => {\n  const [rewards, setRewards] = useState(BigNumber.from(0));\n  const {account, ethereum} = useWallet();\n  const worldFarm = useWorldFarm();\n  const block = useBlock();\n\n  const fetchRewards = async () => {\n    if (!account) {\n      setRewards(BigNumber.from(0));\n      return;\n    }\n    const rewards = await worldFarm?.pendingRewards();\n    setRewards(rewards);\n  };\n\n  useEffect(() => {\n    fetchRewards();\n  }, [account, ethereum, block, worldFarm]);\n\n  return rewards;\n}\n\nexport default usePendingRewards;\n","import {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col, Form, FormGroup, FormInput,\n  InputGroup, InputGroupAddon,\n  ListGroup,\n  ListGroupItem, ListGroupItemHeading,\n  Row\n} from \"shards-react\";\nimport { displayAmount } from \"../../world/utils\";\nimport useStakedBalance from \"../../hooks/useStakedBalance\";\nimport usePendingRewards from \"../../hooks/usePendingRewards\";\nimport Value from \"../common/Value\";\nimport useTokenPrice from \"../../hooks/useTokenPrice\";\nimport { BigNumber, utils } from 'ethers';\nimport WorldFarm from \"../../world/WorldFarm\";\nimport useWorldFarm from \"../../hooks/useWorldFarm\";\nimport React, { useState } from \"react\";\n\nconst StakingInfo = ({\n stakedBalance,\n tokenPrice\n}) => {\n  const [amount, setAmount] = useState();\n  const pendingRewards = usePendingRewards() || '0';\n  const worldFarm = useWorldFarm();\n\n  return (\n    <Card small className=\"blog-comments\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Staking Actions</h6>\n      </CardHeader>\n\n      <CardBody className=\"d-flex flex-column\">\n        <Button\n          theme=\"accent\"\n          outline\n          onClick={async () => {\n            await worldFarm?.claimRewards();\n          }}\n        >\n          Claim Rewards\n        </Button>\n        <ListGroup flush className=\"list-group-small\">\n          <ListGroupItemHeading/>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\"><b>Pending rewards</b></span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              <b><Value value={(pendingRewards)}/> WORLD</b>\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">Current earnings (USD)</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              $<Value value={(utils.formatEther(pendingRewards) * tokenPrice.usd)} decimals={4}/>\n            </span>\n          </ListGroupItem>\n        </ListGroup>\n\n      </CardBody>\n\n      <CardFooter className=\"border-top\">\n        <label htmlFor=\"unstakeAmount\">Enter LP amount to unstake</label>\n        <InputGroup>\n          <FormInput\n            id=\"unstakeAmount\"\n            placeholder=\"0\"\n            onChange={(e) => {\n              const num = e.target.value;\n              setAmount(num ? num : '');\n            }}\n            value={amount}\n          />\n          <InputGroupAddon type=\"append\">\n            <Button\n              theme=\"white\"\n              onClick={() => {\n                if (!stakedBalance.isZero()) {\n                  setAmount(utils.formatEther(stakedBalance));\n                }\n              }}>\n              Max\n            </Button>\n          </InputGroupAddon>\n          <InputGroupAddon type=\"append\">\n            <Button\n              theme='accent'\n              outline\n              onClick={async () => {\n                await worldFarm?.unstake(amount);\n                setAmount('0');\n              }}\n            >\n              Unstake\n            </Button>\n          </InputGroupAddon>\n        </InputGroup>\n\n        <ListGroup flush className=\"list-group-small\">\n          <ListGroupItemHeading/>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\"><b>Staked balance</b></span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              <b><Value value={(stakedBalance)}/></b>\n            </span>\n          </ListGroupItem>\n        </ListGroup>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default StakingInfo;\n","import { createRef, useEffect, useState } from 'react';\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardHeader,\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Row\n} from 'shards-react';\nimport Chart from '../../world/chart';\nimport { displayAmount, getAverage } from '../../world/utils';\nimport Value from '../common/Value';\nimport approx from 'approximate-number';\n\n// const pastWeeksDates = Array.from(new Array(7), (_, i) => i)\n//   .reverse()\n//   .map(num => {\n//     const date = dayjs()\n//       .subtract(num, 'day');\n//     return date.format('ddd');\n//   });\nconst days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n\nconst FarmLineChart = ({\n  stats,\n  pastStats,\n  chartOptions\n}) => {\n  const canvasRef = createRef();\n  const [typeOpen, setTypeOpen] = useState(false);\n  const [type, setType] = useState('APY');\n  const [chart, setChart] = useState(null);\n\n  const data = {\n    'APY': {\n      current: stats.apy,\n      past: pastStats.apy,\n      subject: 'APY'\n    },\n    'Pool Rewards': {\n      current: stats.poolRewards,\n      past: pastStats.poolRewards,\n      subject: 'Pool Rewards'\n    },\n    'Total Value Locked': {\n      current: stats.tvl,\n      past: pastStats.tvl,\n      subject: 'TVL'\n    },\n    'Daily Yield Per $1000': {\n      current: stats.rewardPerThousand,\n      past: pastStats.rewardPerThousand,\n      subject: 'Yield'\n    },\n    'WORLD Per Block': {\n      current: stats.blockReward,\n      past: pastStats.blockReward,\n      subject: 'Reward'\n    }\n  }[type];\n  const currentValue = data.current[data.current.length - 1] || 0;\n\n  const pastAverage = getAverage(data.past);\n  const average = getAverage(data.current);\n\n  useEffect(() => {\n    // const ctx = canvasRef.current.getContext('2d');\n    // const gradient = ctx.createLinearGradient(0, 0, 0, 300);\n    // gradient.addColorStop(.5, 'rgba(33,212,253,0.1)');\n    // gradient.addColorStop(1, 'rgba(183, 33, 255, 0.1)');\n\n    const chartData = {\n      labels: days,\n      datasets: [\n        {\n          label: 'Past Week',\n          fill: 'start',\n          data: data.past,\n          backgroundColor: 'rgba(109,202,255,0.1)',\n          borderColor: 'rgba(109,202,255,1)',\n          // pointBackgroundColor: '#ffffff',\n          // pointHoverBackgroundColor: 'rgba(255,65,105,1)',\n          borderDash: [3, 3],\n          borderWidth: 1,\n          pointRadius: 0,\n          pointHoverRadius: 2,\n          // pointBorderColor: 'rgba(255,65,105,1)'\n        },\n        {\n          label: 'Current Week',\n          fill: 'start',\n          data: data.current,\n          borderColor: 'rgba(160,38,255,1)',\n          backgroundColor: 'rgba(160,38,255,0.1)',\n          // pointBackgroundColor: '#ffffff',\n          // pointHoverBackgroundColor: 'rgb(0,123,255)',\n          borderWidth: 1.5,\n          pointRadius: 0,\n          pointHoverRadius: 3\n        },\n      ]\n    };\n\n    const options = {\n      ...{\n        responsive: true,\n        legend: {\n          position: 'top'\n        },\n        elements: {\n          line: {\n            // A higher value makes the line look skewed at this ratio.\n            tension: 0.3\n          },\n          point: {\n            radius: 0\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                callback(tick, index) {\n                  // const date = dayjs().subtract(tick, 'day');\n                  // console.log(tick);\n                  // console.log(date.toString());\n                  // return date.format('DD-MM');\n                  // Jump every 7 values on the X axis labels to avoid clutter.\n                  // return index % 2 !== 0 ? '' : tick;\n                  return tick;\n                }\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                suggestedMax: 45,\n                callback(tick) {\n                  if (tick === 0) {\n                    return tick;\n                  }\n                  return approx(tick, { min10k: true });\n                }\n              }\n            }\n          ]\n        },\n        hover: {\n          mode: 'nearest',\n          intersect: false\n        },\n        tooltips: {\n          custom: false,\n          mode: 'nearest',\n          intersect: false,\n          callbacks: {\n            label(item, data) {\n              const decimals = type === 'APY' ? 2 : 3;\n              let label = displayAmount(+item.value, decimals)\n                .toLocaleString();\n\n              if (type === 'APY') {\n                label += '%';\n              }\n\n              if (type === 'Total Value Locked') {\n                label = '$' + label;\n              }\n\n              const prepend = data.datasets[item.datasetIndex].label;\n\n              return prepend + ': ' + label;\n            }\n          }\n        }\n      },\n      ...chartOptions\n    };\n\n    if (chart) {\n      chart.destroy();\n    }\n\n    const Overview = new Chart(canvasRef.current, {\n      type: 'LineWithLine',\n      data: chartData,\n      options\n    });\n\n    // They can still be triggered on hover.\n    const buoMeta = Overview.getDatasetMeta(0);\n    if (buoMeta && buoMeta.data[0]) {\n      buoMeta.data[0]._model.radius = 0;\n      buoMeta.data[chartData.datasets[0].data.length - 1]._model.radius = 0;\n    }\n\n    // Render the chart.\n    Overview.render();\n\n    setChart(Overview);\n  }, [currentValue]);\n\n  return (\n    <Card small className=\"h-100\">\n      <CardHeader className=\"border-bottom\">\n        <Dropdown\n          open={typeOpen}\n          toggle={() => setTypeOpen(!typeOpen)}\n          size=\"xs\"\n          className=\"mr-2 d-inline-block\"\n        >\n          <DropdownToggle caret theme=\"accent\" outline>{type}</DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem onClick={() => setType('APY')}>APY</DropdownItem>\n            <DropdownItem onClick={() => setType('Pool Rewards')}>Pool Rewards</DropdownItem>\n            <DropdownItem onClick={() => setType('Total Value Locked')}>Total Value Locked</DropdownItem>\n            <DropdownItem onClick={() => setType('Daily Yield Per $1000')}>Yield Per $1000 (WORLD Per\n              Day)</DropdownItem>\n            <DropdownItem onClick={() => setType('WORLD Per Block')}>WORLD Per Block</DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n        <h6 className=\"m-0 d-inline-block\">\n          Daily Overview\n        </h6>\n      </CardHeader>\n      <CardBody className=\"pt-0\">\n        <Row className=\"border-bottom py-2 bg-light\">\n          {/* <Col sm=\"6\" className=\"d-flex mb-2 mb-sm-0\"> */}\n          {/*  <RangeDatePicker /> */}\n          {/* </Col> */}\n          <div className=\"d-flex justify-content-between w-100 px-3\">\n            <div>\n              <Badge\n                size=\"sm\"\n                theme=\"light\"\n                outline\n              >\n                Past Average: <Value value={pastAverage}/>\n              </Badge>\n              <Badge\n                size=\"sm\"\n                theme=\"light\"\n                outline\n              >\n                Current Average: <Value value={average}/>\n              </Badge>\n            </div>\n            <div className='d-flex align-items-center'>\n              <Badge\n                size=\"sm\"\n                theme=\"secondary\"\n                className=\"gradient-bg\"\n              >\n                Current {data.subject}: {data.subject === 'TVL' ? '$' : ''}<Value value={currentValue}/>{data.subject === 'APY' ? '%' : ''}\n              </Badge>\n            </div>\n          </div>\n        </Row>\n        <canvas\n          height=\"120\"\n          ref={canvasRef}\n          style={{ maxWidth: '100% !important' }}\n        />\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default FarmLineChart;\n","import { useCallback, useEffect, useState } from 'react';\nimport WorldFarm from '../world/WorldFarm';\nimport { ZERO_BN } from '../world/utils';\n\nconst useWorldPerBlock = (block) => {\n  const [worldPerBlock, setWorldPerBlock] = useState({\n    worldPerBlock: ZERO_BN,\n    worldPerBlockUpdated: false\n  });\n\n  const fetchWorldPerBlock = useCallback(async () => {\n    const [worldPerBlock, update] = await WorldFarm.read.getWorldPerBlock();\n    setWorldPerBlock({\n      worldPerBlock,\n      worldPerBlockUpdated: update\n    });\n  }, [block]);\n\n  useEffect(() => {\n    fetchWorldPerBlock();\n  }, [block, setWorldPerBlock]);\n\n  return worldPerBlock;\n}\n\nexport default useWorldPerBlock;\n","import {\n  useEffect,\n  useCallback,\n  useState\n} from 'react';\n\nimport { useWallet } from 'use-wallet';\n\nimport {\n  BigNumber,\n  utils\n} from 'ethers';\nimport useBlock from './useBlock';\nimport useWorldPerBlock from './useWorldPerBlock';\nimport WorldFarm from '../world/WorldFarm';\nimport useEthUsdPrice from './useEthUsdPrice';\n\nconst useFarmROI = () => {\n  const [roi, setROI] = useState({\n    roiPerHour: 0,\n    roiPerDay: 0,\n    roiPerMonth: 0,\n    roiPerYear: 0,\n    rewardPerThousand: 0,\n    totalStakedLP: BigNumber.from(0),\n    totalValueLocked: 0,\n    worldPerBlock: 0\n  });\n  const block = useBlock();\n\n  let {worldPerBlock, worldPerBlockUpdated} = useWorldPerBlock(block);\n  worldPerBlock = worldPerBlock.toString() / 1e18;\n\n  const ethUsdPrice = useEthUsdPrice();\n  const fetchFarmingAPY = useCallback(async () => {\n    const roi = await WorldFarm.roi(worldPerBlock, ethUsdPrice);\n    setROI({\n      ...roi,\n      worldPerBlock,\n      worldPerBlockUpdated\n    });\n  }, [block]);\n\n  useEffect(() => {\n    fetchFarmingAPY();\n  }, [block, setROI]);\n\n  return roi;\n};\n\nexport default useFarmROI;\n","import { useCallback, useEffect, useState } from 'react'\nimport WorldFarm from \"../world/WorldFarm\";\nimport { ZERO_BN } from \"../world/utils\";\nimport useBlock from \"./useBlock\";\n\nconst useWorldPerBlockUpdate = () => {\n  const [time, setTime] = useState(ZERO_BN);\n  const block = useBlock();\n\n  const fetchUpdateTime = useCallback(async () => {\n    const updateTime = await WorldFarm.read.getWorldPerBlockUpdateTime()\n    setTime(updateTime);\n  }, [block]);\n\n  useEffect(() => {\n    fetchUpdateTime();\n  }, [block, setTime]);\n\n  return time;\n}\n\nexport default useWorldPerBlockUpdate;\n","import { useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\nimport { groupDataByKey } from '../world/utils';\n\nlet pastStats = {};\nlet stats = {};\nconst fetchStats = async (fetcher, cb) => {\n  const date = dayjs()\n    .millisecond(0)\n    .second(0)\n    .minute(0)\n    .hour(0);\n  const pastWeekMonday = date.day(-6);\n  const monday = date.day(1);\n\n  const data = await fetcher(pastWeekMonday.unix());\n  groupDataByKey(data, stats, pastStats, monday);\n\n  if (cb) {\n    cb();\n  }\n};\n\nconst useStats = (fetcher) => {\n  const [dataset, setDataset] = useState({\n    pastStats,\n    stats\n  });\n\n  useEffect(() => {\n    fetchStats(fetcher, () => {\n      setDataset({\n        pastStats,\n        stats\n      });\n    });\n  }, []);\n\n  return dataset;\n};\n\nexport default useStats;\n","import firebase from '@firebase/app';\nimport '@firebase/firestore';\nimport { FIREBASE_CONFIG } from './constants';\n\nexport default class WorldData {\n\n  static farmRef;\n  static tokenRef;\n\n  static init() {\n    firebase.initializeApp(FIREBASE_CONFIG);\n    const db = firebase.firestore();\n    WorldData.farmRef = db.collection('farm-stats');\n    WorldData.tokenRef = db.collection('token-stats');\n  }\n\n  static async getFarmStats(startDate) {\n    const snapshot = await WorldData.farmRef\n      .orderBy('timestamp')\n      .startAt(startDate)\n      .get();\n    const data = snapshot.docs.map((doc) => doc.data());\n\n    // const latestVal = data[data.length - 1];\n    // const latestDate = dayjs(latestVal.timestamp.seconds * 1000);\n    // if (latestDate.format('MM-DD-YYYY') === dayjs().format('MM-DD-YYYY')) {\n    //   return data.slice(0, data.length - 1);\n    // }\n\n    return data || [];\n  }\n\n  static async getTokenStats(startDate) {\n    const snapshot = await WorldData.tokenRef\n      .orderBy('timestamp')\n      .startAt(startDate)\n      .get();\n    const data = snapshot.docs.map((doc) => doc.data());\n    return data || [];\n  }\n}\n","import { useState } from 'react';\nimport { Badge, Col, Container, Row } from 'shards-react';\n\nimport Countdown from 'react-countdown';\nimport dayjs from 'dayjs';\nimport Calendar from 'dayjs/plugin/calendar';\nimport PageTitle from '../components/common/PageTitle';\nimport SmallStats from '../components/common/SmallStats';\nimport Stake from '../components/farm/Stake';\nimport StakingInfo from '../components/farm/StakingInfo';\nimport { flatten, getStatPercentage, toNumber } from '../world/utils';\nimport StakingActions from '../components/farm/StakingActions';\nimport FarmLineChart from '../components/farm/FarmLineChart';\nimport useFarmROI from '../hooks/useFarmROI';\nimport useStakedBalance from '../hooks/useStakedBalance';\nimport useTokenPrice from '../hooks/useTokenPrice';\nimport useWorldPerBlockUpdate from '../hooks/useWorldPerBlockUpdate';\nimport useTokenBalance from '../hooks/useTokenBalance';\nimport { CHAIN_ID, CONTRACT_ADDRESSES } from '../world/constants';\nimport useStats from '../hooks/useStats';\nimport WorldData from '../world/WorldData';\n\ndayjs.extend(Calendar);\n\nconst Farm = () => {\n  const [calendarRewardUpdate, setCalendarRewardUpdate] = useState(false);\n  const {\n    roiPerYear,\n    rewardPerThousand,\n    worldPerBlock,\n    worldPerBlockUpdated,\n    totalStakedLP,\n    totalValueLocked\n  } = useFarmROI();\n  const stakedBalance = useStakedBalance();\n  const tokenPrice = useTokenPrice();\n  const rewardUpdateTime = useWorldPerBlockUpdate();\n  const rewardUpdateDay = dayjs(new Date(rewardUpdateTime * 1000));\n  const {\n    pastStats,\n    stats\n  } = useStats(async (date) => await WorldData.getFarmStats(date));\n  const poolReward = toNumber(useTokenBalance(CONTRACT_ADDRESSES.worldFarm[CHAIN_ID]));\n\n  const totalValueLockedPct = getStatPercentage(totalValueLocked, stats.tvl);\n  const rewardPerThousandPct = getStatPercentage(rewardPerThousand, stats.rewardPerThousand);\n  const blockRewardPct = getStatPercentage(worldPerBlock, stats.blockReward);\n\n  const currentStats = {};\n  currentStats.apy = flatten(stats.apy, roiPerYear * 100);\n  currentStats.poolRewards = flatten(stats.poolRewards, poolReward);\n  currentStats.tvl = flatten(stats.tvl, totalValueLocked);\n  currentStats.rewardPerThousand = flatten(stats.rewardPerThousand, rewardPerThousand);\n  currentStats.blockReward = flatten(stats.blockReward, worldPerBlock);\n\n  const smallStats = [\n    {\n      label: 'Total Value Locked',\n      value: totalValueLocked,\n      prepend: '$',\n      percentage: totalValueLockedPct,\n      increase: totalValueLockedPct >= 0,\n      decrease: totalValueLockedPct < 0,\n      chartLabels: [null, null, null, null, null, null, null],\n      datasets: [\n        {\n          label: 'Today',\n          fill: 'start',\n          borderWidth: 1.5,\n          borderColor: 'rgba(160,38,255,1)',\n          backgroundColor: 'rgba(160,38,255,0.1)',\n          data: currentStats.tvl\n        }\n      ]\n    },\n    {\n      label: 'Daily Yield Per $1000',\n      value: rewardPerThousand,\n      percentage: rewardPerThousandPct,\n      decimals: 2,\n      increase: rewardPerThousandPct >= 0,\n      decrease: rewardPerThousandPct < 0,\n      chartLabels: [null, null, null, null, null, null, null],\n      datasets: [\n        {\n          label: 'Today',\n          fill: 'start',\n          borderWidth: 1.5,\n          borderColor: 'rgba(160,38,255,1)',\n          backgroundColor: 'rgba(160,38,255,0.1)',\n          data: currentStats.rewardPerThousand\n        }\n      ]\n    },\n    {\n      label: (\n        <>\n          WORLD per block\n          {!rewardUpdateTime.isZero()\n          && !worldPerBlockUpdated\n          && dayjs()\n            .isBefore(rewardUpdateDay) ? (\n            <span style={{ fontSize: '.6rem' }}>\n                <Badge\n                  href=\"javascript:void(0)\"\n                  theme=\"light\"\n                  onClick={() => {\n                    setCalendarRewardUpdate(!calendarRewardUpdate);\n                  }}\n                >\n                  {calendarRewardUpdate ? (\n                    <>Updates {rewardUpdateDay.calendar()}</>\n                  ) : (\n                    <>Updates in <Countdown date={rewardUpdateDay}/></>\n                  )}\n                </Badge>\n              </span>\n          ) : null}\n        </>\n      ),\n      value: worldPerBlock,\n      percentage: blockRewardPct,\n      increase: blockRewardPct >= 0,\n      decrease: blockRewardPct < 0,\n      chartLabels: [null, null, null, null, null, null, null],\n      datasets: [\n        {\n          label: 'Today',\n          fill: 'start',\n          borderWidth: 1.5,\n          borderColor: 'rgba(160,38,255,1)',\n          backgroundColor: 'rgba(160,38,255,0.1)',\n          data: currentStats.blockReward\n        }\n      ]\n    }\n  ];\n\n  return (\n    <Container fluid className=\"main-content-container px-4\">\n      <Row noGutters className=\"page-header py-4\">\n        <PageTitle\n          title=\"Farm WORLD Tokens\"\n          subtitle=\"Earn by staking WORLD-ETH UNI LP\"\n          // className=\"text-sm-left mb-3\"\n        />\n      </Row>\n\n      <Row>\n        <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\n          <FarmLineChart\n            roiPerYear={roiPerYear}\n            pastStats={pastStats}\n            stats={currentStats}\n          />\n        </Col>\n        <Col lg=\"4\" md=\"12\" sm=\"12\" className=\"mb-4 d-flex flex-column justify-content-center\">\n          <div>\n            <SmallStats\n              chartData={smallStats[0].datasets}\n              label={smallStats[0].label}\n              value={smallStats[0].value}\n              percentage={smallStats[0].percentage}\n              increase={smallStats[0].increase}\n              decrease={smallStats[0].decrease}\n              append={smallStats[0].append}\n              prepend={smallStats[0].prepend}\n              decimals={smallStats[0].decimals}\n            />\n          </div>\n          <div className=\"my-4\">\n            <SmallStats\n              chartData={smallStats[1].datasets}\n              label={smallStats[1].label}\n              value={smallStats[1].value}\n              percentage={smallStats[1].percentage}\n              increase={smallStats[1].increase}\n              decrease={smallStats[1].decrease}\n              append={smallStats[1].append}\n              prepend={smallStats[1].prepend}\n              decimals={smallStats[1].decimals}\n            />\n          </div>\n          <div>\n            <SmallStats\n              chartData={smallStats[2].datasets}\n              label={smallStats[2].label}\n              value={smallStats[2].value}\n              percentage={smallStats[2].percentage}\n              increase={smallStats[2].increase}\n              decrease={smallStats[2].decrease}\n              append={smallStats[2].append}\n              prepend={smallStats[2].prepend}\n              decimals={smallStats[2].decimals}\n            />\n          </div>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col lg=\"4\" md=\"12\" sm=\"12\" className=\"mb-4\">\n          <Stake\n            totalStakedLP={totalStakedLP}\n            tokenPrice={tokenPrice}\n            worldPerBlock={worldPerBlock}\n            totalValueLocked={totalValueLocked}\n          />\n        </Col>\n\n        <Col lg=\"4\" md=\"12\" sm=\"12\" className=\"mb-4\">\n          <StakingActions\n            stakedBalance={stakedBalance}\n            tokenPrice={tokenPrice}\n          />\n        </Col>\n\n        <Col lg=\"4\" md=\"12\" sm=\"12\" className=\"mb-4\">\n          <StakingInfo\n            stakedBalance={stakedBalance}\n            totalStakedLP={totalStakedLP}\n            worldPerBlock={worldPerBlock}\n            tokenPrice={tokenPrice}\n            totalValueLocked={totalValueLocked}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Farm;\n","import React from 'react';\nimport {\n  Container,\n  Button\n} from 'shards-react';\nimport { Link } from 'react-router-dom';\n\nconst PageNotFound = () => (\n  <Container fluid className=\"main-content-container px-4 pb-4\">\n    <div className=\"error\">\n      <div className=\"error__content\">\n        <h2>404</h2>\n        <h3 className=\"gradient-text\">Page not found!</h3>\n        <p>Please contact the <a\n          href=\"https://t.me/worldtokenofficial\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >admins\n        </a> for help.\n        </p>\n        <Link to=\"/overview\"><Button outline theme=\"accent\">&larr; Go to Overview</Button></Link>\n      </div>\n    </div>\n  </Container>\n);\n\nexport default PageNotFound;\n","import { useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\nimport RelativeTime from 'dayjs/plugin/relativeTime';\nimport { uniClient } from '../world/constants';\nimport { gql } from '@apollo/client';\n\ndayjs.extend(RelativeTime);\n\nlet fetching = false;\nlet trades = [];\nconst fetchTrades = async (cb) => {\n  const {data: {swaps}} = await uniClient.query({\n    query: gql`\n    query {\n      swaps(first: 10, where: { pair: \"0xa478c2975ab1ea89e8196811f51a7b7ade33eb11\" } orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        id\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        amount0In\n        amount0Out\n        amount1In\n        amount1Out\n        amountUSD\n        to\n      }\n    }\n  `\n  });\n\n  trades = swaps.map((data) => {\n    const token1Weth = data.pair.token1.symbol === 'WETH';\n    const buy = token1Weth ? +data.amount1In : +data.amount0In;\n    const time =  dayjs(+data.transaction.timestamp * 1000).fromNow();\n\n    let amount;\n    if (buy) {\n      amount = token1Weth ? +data.amount0Out : +data.amount1Out;\n    } else {\n      amount = token1Weth ? +data.amount0In : +data.amount1In;\n    }\n\n    let totalEth;\n    if (buy) {\n      totalEth = token1Weth ? +data.amount1In : +data.amount0In;\n    } else {\n      totalEth = token1Weth ? +data.amount1Out : +data.amount0Out;\n    }\n\n    return {\n      tx: data.transaction.id,\n      priceEth: totalEth / amount,\n      buy,\n      amount,\n      time,\n      totalEth\n    }\n  });\n\n  if (cb) {\n    cb();\n  }\n};\n\nconst useRecentTrades = () => {\n  const [recentTrades, setRecentTrades] = useState(trades);\n\n  useEffect(() => {\n    if (fetching) {\n      return;\n    }\n\n    if (!fetching) {\n      fetching = true;\n      fetchTrades(() => {\n        setRecentTrades(trades);\n      });\n    }\n  }, []);\n\n  return recentTrades;\n};\n\nexport default useRecentTrades;\n","import React from 'react';\nimport { Card, CardBody, CardHeader, Badge } from 'shards-react';\nimport useRecentTrades from '../../hooks/useRecentTrades';\nimport { shortenAddress } from '../../world/utils';\n\nconst RecentTrades = () => {\n  const trades = useRecentTrades();\n\n  return (\n    <Card small className=\"mb-4\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Recent Trades</h6>\n      </CardHeader>\n      <CardBody className=\"p-0 pb-3\" style={{overflowX: 'auto'}}>\n        <table className=\"table mb-0\">\n          <thead className=\"bg-light\">\n          <tr>\n            <th scope=\"col\" className=\"border-0\">\n              Type\n            </th>\n            <th scope=\"col\" className=\"border-0\">\n              Time\n            </th>\n            <th scope=\"col\" className=\"border-0\">\n              Price (ETH)\n            </th>\n            <th scope=\"col\" className=\"border-0\">\n              Amount (WORLD)\n            </th>\n            <th scope=\"col\" className=\"border-0\">\n              Total (ETH)\n            </th>\n            <th scope=\"col\" className=\"border-0\">\n              Tx\n            </th>\n          </tr>\n          </thead>\n          <tbody>\n          {trades.map((trade, i) => (\n            <tr key={i} className=\"normal-font-weight\">\n              <td>{trade.buy ? <Badge theme='success'>Buy</Badge> :\n                <Badge theme='secondary'>Sell</Badge>}</td>\n              <td>{trade.time}</td>\n              <td>{trade.priceEth.toFixed(5)}</td>\n              <td>{trade.amount.toFixed(2)}</td>\n              <td>{trade.totalEth.toFixed(5)}</td>\n              <td>\n                <a href={`https://etherscan.com/tx/${trade.tx}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {shortenAddress(trade.tx)}\n                </a></td>\n            </tr>\n          ))}\n          </tbody>\n        </table>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default RecentTrades;\n","import { useCallback, useEffect, useState } from 'react';\n\nimport useBlock from './useBlock';\nimport { BigNumber } from 'ethers';\nimport WorldToken from '../world/WorldToken';\n\nconst useHolderFees = () => {\n  const [fees, setFees] = useState(BigNumber.from(0));\n  const block = useBlock();\n\n  const fetchBalance = useCallback(async () => {\n    const holderFees = await WorldToken.read.totalFees();\n    setFees(holderFees);\n  }, [block]);\n\n  useEffect(() => {\n    fetchBalance();\n  }, [block]);\n\n  return fees;\n}\n\nexport default useHolderFees;\n","import { createRef, useEffect, useState } from 'react';\nimport {\n  Badge,\n  Card,\n  CardBody,\n  CardHeader,\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Row\n} from 'shards-react';\nimport Chart from '../../world/chart';\nimport { displayAmount, getAverage } from '../../world/utils';\nimport Value from '../common/Value';\nimport approx from 'approximate-number';\n\nconst days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n// const fillWithZeros = (data) => {\n//   const zeros = Array.from(new Array(7), () => 0);\n//\n//   for (let i = 0; i < data.length; i++) {\n//     zeros[i] = data[i];\n//   }\n//\n//   return zeros;\n// }\n\nconst FeeDistributionLineChart = ({\n  prependTitle,\n  subject,\n  title,\n  data,\n  pastData,\n  chartOptions\n}) => {\n  const canvasRef = createRef();\n  // const [typeOpen, setTypeOpen] = useState(false);\n  // const [type, setType] = useState('WORLD');\n  const [chart, setChart] = useState(null);\n  const currentValue = data?.length ? data[data?.length - 1] : 0;\n  const pastAverage = getAverage(pastData);\n  const average = getAverage(data);\n\n  useEffect(() => {\n    // const ctx = canvasRef.current.getContext('2d');\n    // const gradient = ctx.createLinearGradient(0, 0, 0, 300);\n    // gradient.addColorStop(.5, 'rgba(33,212,253,0.2)');\n    // gradient.addColorStop(1, 'rgba(183, 33, 255, 0.1)');\n    // gradient.addColorStop(0.6, '#00BCD4');\n    // gradient.addColorStop(1, '#1DE9B6');\n\n    // gradient.addColorStop(0, 'rgba(255, 0,0, 0.5)');\n    // gradient.addColorStop(0.5, 'rgba(255, 0, 0, 0.25)');\n    // gradient.addColorStop(1, 'rgba(255, 0, 0, 0)');\n\n    const chartData = {\n      labels: days,\n      datasets: [\n        {\n          label: 'Past Week',\n          fill: 'start',\n          data: pastData,\n          backgroundColor: 'rgba(109,202,255,0.1)',\n          borderColor: 'rgba(109,202,255,1)',\n          // pointBackgroundColor: '#ffffff',\n          // pointHoverBackgroundColor: 'rgba(255,65,105,1)',\n          borderDash: [3, 3],\n          borderWidth: 1,\n          pointRadius: 0,\n          pointHoverRadius: 2,\n          // pointBorderColor: 'rgba(255,65,105,1)'\n        },\n        {\n          label: 'Current Week',\n          fill: 'start',\n          data: data,\n          borderColor: 'rgba(160,38,255,1)',\n          backgroundColor: 'rgba(160,38,255,0.1)',\n          // pointBackgroundColor: '#ffffff',\n          // pointHoverBackgroundColor: 'rgb(0,123,255)',\n          borderWidth: 1.5,\n          pointRadius: 0,\n          pointHoverRadius: 3\n        },\n      ]\n    };\n\n    const options = {\n      ...{\n        responsive: true,\n        legend: {\n          position: 'top'\n        },\n        elements: {\n          line: {\n            // A higher value makes the line look skewed at this ratio.\n            tension: 0.3\n          },\n          point: {\n            radius: 0\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                callback(tick, index) {\n                  // const date = dayjs().subtract(tick, 'day');\n                  // console.log(tick);\n                  // console.log(date.toString());\n                  // return date.format('DD-MM');\n                  // Jump every 7 values on the X axis labels to avoid clutter.\n                  // return index % 2 !== 0 ? '' : tick;\n                  return tick;\n                }\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                suggestedMax: 45,\n                callback(tick) {\n                  if (tick === 0) {\n                    return tick;\n                  }\n                  return approx(tick, { min10k: true });\n                }\n              }\n            }\n          ]\n        },\n        hover: {\n          mode: 'nearest',\n          intersect: false\n        },\n        tooltips: {\n          custom: false,\n          mode: 'nearest',\n          intersect: false,\n          callbacks: {\n            label(item, data) {\n              const label = displayAmount(+item.value)\n                .toLocaleString();\n              const prepend = data.datasets[item.datasetIndex].label;\n              return prepend + ': ' + label;\n            }\n          }\n        }\n      },\n      ...chartOptions\n    };\n\n    if (chart) {\n      chart.destroy();\n    }\n\n    const Overview = new Chart(canvasRef.current, {\n      type: 'LineWithLine',\n      data: chartData,\n      options\n    });\n\n    // They can still be triggered on hover.\n    const buoMeta = Overview.getDatasetMeta(0);\n    if (buoMeta && buoMeta.data[0]) {\n      buoMeta.data[0]._model.radius = 0;\n      buoMeta.data[chartData.datasets[0].data.length - 1]._model.radius = 0;\n    }\n\n    // Render the chart.\n    Overview.render();\n\n    setChart(Overview);\n  }, [currentValue]);\n\n  return (\n    <Card small className=\"h-100\">\n      <CardHeader className=\"border-bottom\">\n        {/*<Dropdown*/}\n        {/*  open={typeOpen}*/}\n        {/*  toggle={() => setTypeOpen(!typeOpen)}*/}\n        {/*  size=\"xs\"*/}\n        {/*  className=\"mr-2 d-inline-block\"*/}\n        {/*>*/}\n        {/*  <DropdownToggle caret theme=\"secondary\">{type}</DropdownToggle>*/}\n        {/*  <DropdownMenu>*/}\n        {/*    <DropdownItem onClick={() => setType('WORLD')}>WORLD</DropdownItem>*/}\n        {/*    <DropdownItem onClick={() => setType('WORLD (USD)')}>WORLD (USD)</DropdownItem>*/}\n        {/*  </DropdownMenu>*/}\n        {/*</Dropdown>*/}\n        <h6 className=\"m-0 d-inline-block\">\n          {prependTitle}&nbsp;&nbsp;{title}\n        </h6>\n      </CardHeader>\n      <CardBody className=\"pt-0\">\n        <Row className=\"border-bottom py-2 bg-light\">\n          <div className=\"d-flex justify-content-between w-100 px-3\">\n            <div>\n              <Badge\n                size=\"sm\"\n                theme=\"light\"\n                outline\n              >\n                Past Average: <Value value={pastAverage}/>\n              </Badge>\n              <Badge\n                size=\"sm\"\n                theme=\"light\"\n                outline\n              >\n                Current Average: <Value value={average}/>\n              </Badge>\n            </div>\n            <div className='d-flex align-items-center'>\n              <Badge\n                size=\"sm\"\n                theme=\"secondary\"\n                className=\"gradient-bg\"\n              >\n                Current {subject}: <Value value={currentValue}/>\n              </Badge>\n            </div>\n          </div>\n        </Row>\n        <canvas\n          height=\"120\"\n          ref={canvasRef}\n          style={{ maxWidth: '100% !important' }}\n        />\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default FeeDistributionLineChart;\n","import { Col, Container, Row } from 'shards-react';\nimport dayjs from 'dayjs';\nimport Calendar from 'dayjs/plugin/calendar';\nimport PageTitle from '../components/common/PageTitle';\nimport SmallStats from '../components/common/SmallStats';\nimport { flatten, getAverage, getFeeDistribution, getStatPercentage, toNumber } from '../world/utils';\nimport useTokenPrice from '../hooks/useTokenPrice';\nimport useTokenBalance from '../hooks/useTokenBalance';\nimport {\n  BURN_ADDRESS,\n  LOCKED_MARKETING_TOKENS,\n  MARKETING_ADDRESS,\n  TOTAL_SUPPLY,\n  WORLD_ETH_PAIR\n} from '../world/constants';\nimport RecentTrades from '../components/overview/RecentTrades';\nimport useHolderFees from '../hooks/useHolderFees';\nimport FeeDistributionLineChart from '../components/overview/FeeDistributionLineChart';\nimport useStats from '../hooks/useStats';\nimport WorldData from '../world/WorldData';\n\ndayjs.extend(Calendar);\n\nconst Overview = () => {\n  const { usd: tokenPrice } = useTokenPrice();\n  const marketingBalance = toNumber(useTokenBalance(MARKETING_ADDRESS));\n  const uniLpBalance = toNumber(useTokenBalance(WORLD_ETH_PAIR.address));\n  const burnedWorld = toNumber(useTokenBalance(BURN_ADDRESS));\n  const holderFees = toNumber(useHolderFees());\n  let {\n    pastStats,\n    stats\n  } = useStats(async (date) => await WorldData.getTokenStats(date));\n\n  const feeDistribution = getFeeDistribution(flatten(stats.holderFees, holderFees), pastStats.holderFees);\n  const pastFeeDistribution = getFeeDistribution(pastStats.holderFees);\n\n  const worldBurn = getFeeDistribution(flatten(stats.burned, burnedWorld), pastStats.burned);\n  const pastWorldBurn = getFeeDistribution(pastStats.burned);\n\n  // console.log(worldBurn);\n\n  const avgFee = getAverage(flatten(holderFees, stats.holderFees, pastStats.holderFees));\n  const supply = (TOTAL_SUPPLY - marketingBalance - LOCKED_MARKETING_TOKENS - uniLpBalance);\n  const share = (50_000 / supply) * 100;\n  const avgDailyYield = share * avgFee;\n\n  const pricePct = getStatPercentage(tokenPrice, stats.price);\n  const burnedPct = getStatPercentage(burnedWorld, stats.burned);\n  const feesPct = getStatPercentage(holderFees, stats.holderFees);\n  const avgDailyYieldPct = getStatPercentage(avgDailyYield, stats.avgDailyYield);\n\n  const currentStats = {};\n  currentStats.price = flatten(stats.price, tokenPrice);\n  currentStats.burned = flatten(stats.burned, burnedWorld);\n  currentStats.holderFees = flatten(stats.holderFees, holderFees);\n  currentStats.avgDailyYield = flatten(stats.avgDailyYield, avgDailyYield);\n\n  const smallStats = [\n    {\n      label: 'Price',\n      value: tokenPrice,\n      prepend: '$',\n      decimals: 4,\n      percentage: pricePct,\n      increase: pricePct >= 0,\n      decrease: pricePct < 0,\n      chartLabels: [null, null, null, null, null, null, null],\n      datasets: [\n        {\n          label: 'Today',\n          fill: 'start',\n          borderWidth: 1.5,\n          borderColor: 'rgba(160,38,255,1)',\n          backgroundColor: 'rgba(160,38,255,0.1)',\n          data: currentStats.price\n        }\n      ]\n    },\n    {\n      label: 'Avg. Daily Yield per 50k WORLD',\n      value: avgDailyYield,\n      percentage: avgDailyYieldPct,\n      increase: avgDailyYieldPct >= 0,\n      decrease: avgDailyYieldPct < 0,\n      chartLabels: [null, null, null, null, null, null, null],\n      datasets: [\n        {\n          label: 'Today',\n          fill: 'start',\n          borderWidth: 1.5,\n          borderColor: 'rgba(160,38,255,1)',\n          backgroundColor: 'rgba(160,38,255,0.1)',\n          data: currentStats.avgDailyYield\n        }\n      ]\n    },\n    {\n      label: 'Distributed WORLD',\n      value: holderFees,\n      percentage: feesPct,\n      increase: feesPct >= 0,\n      decrease: feesPct < 0,\n      chartLabels: [null, null, null, null, null, null, null],\n      datasets: [\n        {\n          label: 'Today',\n          fill: 'start',\n          borderWidth: 1.5,\n          borderColor: 'rgba(160,38,255,1)',\n          backgroundColor: 'rgba(160,38,255,0.1)',\n          data: currentStats.holderFees\n        }\n      ]\n    },\n    {\n      label: 'Burned WORLD',\n      value: burnedWorld,\n      percentage: burnedPct,\n      increase: burnedPct >= 0,\n      decrease: burnedPct < 0,\n      chartLabels: [null, null, null, null, null, null, null],\n      datasets: [\n        {\n          label: 'Today',\n          fill: 'start',\n          borderWidth: 1.5,\n          borderColor: 'rgba(160,38,255,1)',\n          backgroundColor: 'rgba(160,38,255,0.1)',\n          data: currentStats.burned\n        }\n      ]\n    },\n  ];\n\n  return (\n    <Container fluid className=\"main-content-container px-4\">\n      <Row noGutters className=\"page-header py-4\">\n        <PageTitle\n          title=\"WORLD Token\"\n          subtitle=\"HOLD AND EARN\"\n        />\n      </Row>\n\n      <Row>\n        <Col className=\"mb-4\" sm=\"6\" lg=\"3\" md=\"6\">\n          <SmallStats\n            chartData={smallStats[1].datasets}\n            label={smallStats[1].label}\n            value={smallStats[1].value}\n            percentage={smallStats[1].percentage}\n            increase={smallStats[1].increase}\n            decrease={smallStats[1].decrease}\n            append={smallStats[1].append}\n            prepend={smallStats[1].prepend}\n            subAppend={smallStats[1].subAppend}\n            decimals={smallStats[1].decimals}\n          />\n        </Col>\n        <Col className=\"mb-4\" sm=\"6\" lg=\"3\" md=\"6\">\n          <SmallStats\n            chartData={smallStats[0].datasets}\n            label={smallStats[0].label}\n            value={smallStats[0].value}\n            percentage={smallStats[0].percentage}\n            increase={smallStats[0].increase}\n            decrease={smallStats[0].decrease}\n            append={smallStats[0].append}\n            prepend={smallStats[0].prepend}\n            decimals={smallStats[0].decimals}\n          />\n        </Col>\n        <Col className=\"mb-4\" sm=\"6\" lg=\"3\" md=\"6\">\n          <SmallStats\n            chartData={smallStats[2].datasets}\n            label={smallStats[2].label}\n            value={smallStats[2].value}\n            percentage={smallStats[2].percentage}\n            increase={smallStats[2].increase}\n            decrease={smallStats[2].decrease}\n            append={smallStats[2].append}\n            prepend={smallStats[2].prepend}\n            decimals={smallStats[2].decimals}\n          />\n        </Col>\n        <Col className=\"mb-4\" sm=\"6\" lg=\"3\" md=\"6\">\n          <SmallStats\n            chartData={smallStats[3].datasets}\n            label={smallStats[3].label}\n            value={smallStats[3].value}\n            percentage={smallStats[3].percentage}\n            increase={smallStats[3].increase}\n            decrease={smallStats[3].decrease}\n            append={smallStats[3].append}\n            prepend={smallStats[3].prepend}\n            decimals={smallStats[3].decimals}\n          />\n        </Col>\n\n      </Row>\n\n      <Row>\n        <Col lg=\"6\" md=\"12\" sm=\"12\" className=\"mb-4\">\n          <FeeDistributionLineChart\n            prependTitle='🌎'\n            title='WORLD Daily Distribution'\n            subject='Distribution'\n            data={feeDistribution}\n            pastData={pastFeeDistribution}\n          />\n        </Col>\n        <Col lg=\"6\" md=\"12\" sm=\"12\" className=\"mb-4\">\n          <FeeDistributionLineChart\n            prependTitle='🔥'\n            subject='Burn'\n            title='WORLD Daily Burn'\n            data={worldBurn}\n            pastData={pastWorldBurn}\n          />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <RecentTrades/>\n        </Col>\n      </Row>\n\n    </Container>\n  );\n};\n\nexport default Overview;\n","import React from 'react';\nimport {\n  Container,\n  Button\n} from 'shards-react';\nimport { Link } from 'react-router-dom';\n\nconst PageInProgress = () => (\n  <Container fluid className=\"main-content-container px-4 pb-4\">\n    <div className=\"error\">\n      <div className=\"error__content\">\n        <h2>🛠️</h2>\n        <h3 className=\"gradient-text\">This page is under construction.</h3>\n        <p>Please contact the <a\n          href=\"https://t.me/worldtokenofficial\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >admins\n        </a> for help.\n        </p>\n        <Link to=\"/overview\"><Button outline theme=\"accent\">&larr; Go to Overview</Button></Link>\n      </div>\n    </div>\n  </Container>\n);\n\nexport default PageInProgress;\n","import './shards-styles/shards-dashboards.1.1.0.min.css';\nimport './App.css';\nimport {\n  BrowserRouter,\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport { UseWalletProvider } from 'use-wallet';\nimport Analytics from 'react-router-ga';\nimport {\n  CHAIN_ID,\n  RINKEBY_CHAIN_ID,\n  RINKEBY_RPC_URL,\n  RPC_URL,\n} from './world/constants';\nimport WorldTokenContext from './contexts/WorldTokenContext';\nimport DefaultLayout from './components/layout/DefaultLayout';\nimport Farm from './views/Farm';\nimport PageNotFound from './views/PageNotFound';\nimport Overview from './views/Overview';\nimport PageInProgress from './views/PageInProgress';\nimport SidebarContext from './contexts/SidebarContext';\n\nconst Providers = ({ children }) => (\n  <UseWalletProvider\n    chainId={CHAIN_ID}\n    connectors={{\n      walletconnect: { rpcUrl: RPC_URL },\n    }}\n  >\n    <WorldTokenContext>\n      <SidebarContext>\n        {children}\n      </SidebarContext>\n    </WorldTokenContext>\n  </UseWalletProvider>\n);\n\nfunction App() {\n  return (\n    <Providers>\n      <BrowserRouter>\n        <Analytics id=\"UA-185956664-1\">\n          <DefaultLayout>\n            <Switch>\n              <Route path=\"/\" exact>\n                <Redirect to=\"/overview\"/>\n              </Route>\n              <Route path=\"/overview\">\n                <Overview/>\n              </Route>\n              <Route path=\"/farm\">\n                <Farm/>\n              </Route>\n              <Route path=\"/marketplace\">\n                <PageInProgress/>\n              </Route>\n              <Route path=\"*\">\n                <PageNotFound/>\n              </Route>\n            </Switch>\n          </DefaultLayout>\n        </Analytics>\n      </BrowserRouter>\n    </Providers>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'react-datepicker/dist/react-datepicker.min.css';\n// import \"nprogress/nprogress.css\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport WorldData from './world/WorldData';\n\nWorldData.init();\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Devtools> */}\n    <App />\n    {/* </Devtools> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}