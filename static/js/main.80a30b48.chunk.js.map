{"version":3,"sources":["world/constants.js","world/WorldToken.js","contexts/WorldTokenContext.js","hooks/useBlock.js","hooks/useWorldToken.js","hooks/useTokenBalance.js","world/utils.js","hooks/useEthUsdPrice.js","hooks/useTokenPrice.js","components/common/Value.js","components/layout/MainNavbar/NavbarSearch.js","assets/metamask-fox.svg","assets/wallet-connect.svg","components/layout/MainNavbar/NavbarNav/Notifications.js","components/layout/MainNavbar/NavbarNav/NavbarNav.js","components/layout/MainNavbar/NavbarNav/UserActions.js","components/layout/MainNavbar/NavbarToggle.js","components/layout/MainNavbar/MainNavbar.js","components/layout/MainSidebar/SidebarMainNavbar.js","components/layout/MainSidebar/SidebarSearch.js","components/layout/MainSidebar/SidebarNavItem.js","components/layout/MainSidebar/SidebarNavItems.js","components/layout/MainSidebar/MainSidebar.js","components/layout/MainFooter.js","components/layout/DefaultLayout.js","components/common/PageTitle.js","world/chart.js","components/common/SmallStats.js","world/WorldFarm.js","hooks/useWorldFarm.js","hooks/useLpTokenBalance.js","hooks/useLpTokenAllowance.js","hooks/useStakedBalance.js","hooks/useWorldPerBlock.js","hooks/useFarmROI.js","components/farm/Stake.jsx","components/farm/StakingInfo.jsx","components/common/RangeDatePicker.js","components/blog/UsersOverview.js","hooks/usePendingRewards.js","components/farm/StakingActions.jsx","components/farm/APYOverview.jsx","views/Farm.js","views/NotFound.js","components/blog/UsersByDevice.js","components/blog/NewDraft.js","components/blog/Discussions.js","components/common/TopReferrals.js","views/Overview.js","App.jsx","reportWebVitals.jsx","index.jsx"],"names":["CONTRACT_ADDRESSES","worldToken","worldFarm","DEFAULT_PROVIDER","ethers","infura","WORLD_ETH_PAIR","address","Pair","getAddress","Token","WETH","pid","WETH_CONTRACT","ERC20Abi","LP_TOKEN_CONTRACT","Contract","BLOCKS_PER_DAY","WorldToken","signer","this","read","wallet","balanceOf","allowance","WorldTokenAbi","Context","createContext","undefined","WorldTokenContext","children","useWallet","account","ethereum","useState","setWorldToken","useEffect","a","provider","Web3Provider","getSigner","init","Provider","value","useBlock","block","setBlock","interval","setInterval","getBlockNumber","latestBlockNumber","clearInterval","useWorldToken","useContext","useTokenBalance","BigNumber","from","balance","setBalance","fetchBalance","ZERO_BN","displayAmount","amount","isNaN","Infinity","utils","formatEther","e","num","fixed","re","RegExp","toString","match","toFixedString","shortenAddress","length","substr","cgPrice","fetchEthUsdPrice","fetch","response","ok","json","useEthUsdPrice","price","setEthUsdPrice","useTokenPrice","eth","usd","setTokenPrice","ethUsdPrice","fetchTokenPrice","lpWethAmount","lpTokenAmount","oneWorldToken","parseEther","deductedInputAmount","mul","b","add","tokenPriceInWeth","div","Value","decimals","start","updateStart","end","updateEnd","duration","separator","ethPrice","setEthPrice","tokenPrice","className","href","theme","onClick","in","outline","Notifications","connect","reset","connector","visible","setVisible","style","cursor","open","minWidth","src","metamaskLogo","alt","height","width","walletConnectLogo","React","Component","navbar","NavbarToggle","props","handleClick","bind","MainNavbar","layout","stickyTop","classes","classNames","fluid","type","NavbarSearch","NavbarNav","defaultProps","SidebarMainNavbar","handleToggleSidebar","hideLogoText","lineHeight","display","minHeight","seamless","placeholder","aria-label","SidebarNavItem","item","tag","RouteNavLink","to","htmlBefore","dangerouslySetInnerHTML","__html","title","htmlAfter","navItems","SidebarNavItems","map","idx","MainSidebar","state","menuVisible","onChange","setState","lg","size","md","SidebarSearch","MainFooter","contained","menuItems","copyright","DefaultLayout","noNavbar","noFooter","offset","sm","PageTitle","subtitle","attrs","xs","Chart","defaults","LineWithLine","line","controllers","extend","draw","ease","prototype","call","chart","tooltip","_active","activePoint","ctx","x","tooltipPosition","topY","scales","top","bottomY","bottom","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","SmallStats","canvasRef","createRef","chartOptions","maintainAspectRatio","responsive","legend","tooltips","enabled","custom","elements","point","radius","tension","xAxes","gridLines","ticks","yAxes","scaleLabel","isplay","suggestedMax","Math","max","chartData","data","chartConfig","labels","chartLabels","datasets","options","current","variation","label","percentage","increase","append","cardClasses","cardBodyClasses","innerWrapperClasses","dataFieldClasses","labelClasses","valueClasses","innerDataFieldClasses","percentageClasses","canvasHeight","small","ref","shortid","Object","create","WorldFarm","contract","WorldFarmingAbi","lpToken","constants","MaxUint256","approve","tx","wait","userInfo","pendingRewards","deposit","worldPerBlock","lpContractToken","lpContractWeth","totalSupply","roiPerYear","roiPerMonth","roiPerDay","roiPerHour","roiPerBlock","portionLp","rewardPerThousand","totalStakedLP","poolInfo","allocPoint","totalAllocPoint","tokenAmountWholeLP","totalLpWethValue","tokenAmount","wethAmount","poolWeight","totalWethValue","totalStakedLp","useWorldFarm","setWorldFarm","useLpTokenBalance","lpTokenBalance","useLpTokenAllowance","setAllowance","fetchAllowance","useCallback","lpTokenAllowance","useStakedBalance","stakedBalance","useWorldPerBlock","setWorldPerBlock","fetchWorldPerBlock","getWorldPerBlock","useFarmROI","roi","setROI","fetchFarmingAPY","Stake","setAmount","stakingAllowed","isZero","worldPerDay","htmlFor","id","target","stake","console","log","lpTokenMaxApprove","flush","StakingInfo","RangeDatePicker","startDate","endDate","handleStartDateChange","handleEndDateChange","Date","selected","placeholderText","dropdownMode","UsersOverview","position","callback","tick","index","toFixed","hover","mode","intersect","BlogUsersOverview","buoMeta","getDatasetMeta","_model","render","maxWidth","Array","_","i","fill","backgroundColor","borderColor","pointBackgroundColor","pointHoverBackgroundColor","borderWidth","pointRadius","pointHoverRadius","borderDash","pointBorderColor","usePendingRewards","rewards","setRewards","fetchRewards","APYOverview","Overview","Farm","smallStats","decrease","noGutters","stats","StakingActions","NotFound","rel","pill","UsersByDevice","padding","boxWidth","cutoutPercentage","hoverBorderColor","NewDraft","Discussions","discussions","discussion","author","name","url","post","date","body","image","TopReferrals","referralData","Providers","chainId","connectors","walletconnect","rpcUrl","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80a30b48.chunk.js","sourcesContent":["import * as ethers from 'ethers';\nimport { Pair, Token, WETH } from \"@uniswap/sdk\";\nimport ERC20Abi from './abi/ERC20.json';\nimport { Contract } from \"ethers\";\n\nconst CHAIN_ID_MAINNET = 1;\nconst RPC_URL_MAINNET = 'https://mainnet.eth.aragon.network';\nconst RINKEBY_CHAIN_ID = 4;\nconst RINKEBY_RPC_URL = 'https://rinkeby.eth.aragon.network';\nconst GOERLI_CHAIN_ID = 5;\nconst GOERLI_RPC_URL = 'https://goerli.eth.aragon.network';\nconst LOCAL_CHAIN_ID = 1337;\n\nexport const CONTRACT_ADDRESSES = {\n  worldToken: {\n    [RINKEBY_CHAIN_ID]: '0xc408a3D4EeC7E3EA24aCF6A4EAd3c477c0c0835f',\n    [LOCAL_CHAIN_ID]: '0x31FFbe9bf84b4d9d02cd40eCcAB4Af1E2877Bbc6'\n  },\n  worldFarm: {\n    [RINKEBY_CHAIN_ID]: '0x968De44D1B8918E8d63301BeBa06337445bd7C23',\n  }\n};\n\nconst INFURA_PROJECT_ID = 'e72329feb2f245d7afc3132fb6eafacf';\nconst ALCHEMY_API_KEY = '4xTAOSVfq0CTlOg0jho2qfhuDUTdFlBd';\nconst ETHERSCAN_API_KEY = 'A9RGXU9D34PJQS8J8UP9JKXWNWI4H9I3EG';\n\n// change to mainnet before deploying!\nconst DEFAULT_CHAIN_ID = RINKEBY_CHAIN_ID;\nexport const CHAIN_ID = DEFAULT_CHAIN_ID;\nexport const RPC_URL = RPC_URL_MAINNET;\n\nexport const DEFAULT_PROVIDER = DEFAULT_CHAIN_ID !== LOCAL_CHAIN_ID\n  ? ethers.getDefaultProvider(DEFAULT_CHAIN_ID, {\n    infura: INFURA_PROJECT_ID,\n    // alchemy: ALCHEMY_API_KEY,\n    // etherscan: ETHERSCAN_API_KEY\n  })\n  : new ethers.providers.JsonRpcProvider()\n\nexport const WORLD_ETH_PAIR = {\n  address: Pair.getAddress(\n    new Token(DEFAULT_CHAIN_ID, CONTRACT_ADDRESSES.worldToken[DEFAULT_CHAIN_ID], 18, 'any'),\n    WETH[DEFAULT_CHAIN_ID]\n  ),\n  pid: 0\n};\n\nexport const WETH_CONTRACT = new ethers.Contract(\n  WETH[DEFAULT_CHAIN_ID].address,\n  ERC20Abi,\n  DEFAULT_PROVIDER\n);\n\nexport const LP_TOKEN_CONTRACT = new Contract(\n  WORLD_ETH_PAIR.address,\n  ERC20Abi,\n  DEFAULT_PROVIDER\n);\n\nexport const BLOCKS_PER_DAY = 6550;\n","import { utils, Contract } from 'ethers';\nimport WorldTokenAbi from './abi/WorldToken.json';\nimport {\n  CHAIN_ID,\n  CONTRACT_ADDRESSES,\n  DEFAULT_PROVIDER\n} from './constants';\n\nexport default class WorldToken {\n\n  static read = new Contract(\n    CONTRACT_ADDRESSES.worldToken[CHAIN_ID],\n    WorldTokenAbi,\n    DEFAULT_PROVIDER\n  );\n\n  static address = CONTRACT_ADDRESSES.worldToken[CHAIN_ID]\n\n  constructor(signer) {\n    this.signer = signer;\n  }\n\n  async wallet() {\n    return this.signer.getAddress();\n  }\n\n  async balance() {\n    return WorldToken.read.balanceOf(await this.wallet());\n  }\n\n  async allowance() {\n    return WorldToken.read.allowance(await this.wallet(), WorldToken.read.address);\n  }\n}\n","import React,\n{\n  createContext,\n  useEffect,\n  useState\n} from 'react';\n\nimport { useWallet } from 'use-wallet';\nimport * as ethers from 'ethers';\nimport WorldToken from '../world/WorldToken';\n\nexport const Context = createContext({\n  worldToken: undefined,\n});\n\nconst WorldTokenContext = ({ children }) => {\n  const { account, ethereum } = useWallet();\n  const [worldToken, setWorldToken] = useState(null);\n\n  useEffect(() => {\n    const init = async () =>{\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        setWorldToken(new WorldToken(provider.getSigner()));\n      }\n    };\n\n    init();\n  }, [account, ethereum]);\n\n  return <Context.Provider value={{ worldToken }}>{children}</Context.Provider>;\n};\n\nexport default WorldTokenContext;\n","import { useEffect, useState } from 'react'\nimport { DEFAULT_PROVIDER } from \"../world/constants\";\n\nconst useBlock = () => {\n  const [block, setBlock] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const latestBlockNumber = await DEFAULT_PROVIDER.getBlockNumber();\n      if (block !== latestBlockNumber) {\n        setBlock(latestBlockNumber);\n      }\n    }, 10000);\n\n    return () => clearInterval(interval)\n  });\n\n  return block\n}\n\nexport default useBlock","import { useContext } from 'react';\nimport { Context } from '../contexts/WorldTokenContext';\n\nconst useWorldToken = () => {\n  const { worldToken } = useContext(Context);\n  return worldToken;\n};\n\nexport default useWorldToken;\n","import { useCallback, useEffect, useState } from 'react'\n\nimport { useWallet } from 'use-wallet'\n\nimport useBlock from './useBlock'\nimport useWorldToken from \"./useWorldToken\";\nimport { BigNumber } from \"ethers\";\n\nconst useTokenBalance = () => {\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const {\n    account,\n    ethereum,\n  } = useWallet();\n  const block = useBlock();\n  const worldToken = useWorldToken();\n\n  const fetchBalance =async () => {\n    const balance = await worldToken?.balance();\n    setBalance(balance);\n  };\n\n  useEffect(() => {\n    fetchBalance();\n  }, [account, ethereum, block]);\n\n  return balance;\n}\n\nexport default useTokenBalance;\n","import approx from 'approximate-number';\nimport { BigNumber, utils } from 'ethers';\n\nexport const ZERO_BN = BigNumber.from(0);\n\nexport const displayAmount = (amount) => {\n  if (!isNaN(amount) && amount !== Infinity) {\n    try {\n      amount = utils.formatEther(amount);\n    } catch (e) {\n    }\n    return +toFixedString(amount, 3);\n  }\n\n  return '0';\n}\n\nfunction toFixedString(num, fixed) {\n  const re = new RegExp('^-?\\\\d+(?:\\.\\\\d{0,' + (fixed || -1) + '})?');\n  return num.toString().match(re)[0];\n}\n\nexport const formatTime = (time) => {\n  if (!time) {\n    return '';\n  }\n  return `${time.format('MMM D, YYYY').toString()} @ ${time.format('hh:mm A').toString()} (UTC${time.format('Z').toString()})`;\n};\n\n// export const formatNumber = (num, useApprox) => {\n//   if (!num || num === Infinity) {\n//     return '0';\n//   }\n//   if (useApprox) {\n//     return approx(num, {min10k: true});\n//   }\n//   return +parseFloat(num).toFixed(4);\n// };\n\nexport const shortenAddress = (account, length = 5) => {\n  if (!account) {\n    return '';\n  }\n  return `${account.substr(0, length)}...${account.substr(account.length - (length - 1), account.length - 1)}`;\n}","import { useEffect, useState } from 'react'\n\nconst url = 'https://api.coingecko.com/api/v3/simple/price?vs_currencies=usd&ids=ethereum';\nlet cgPrice = 0\n\nconst fetchEthUsdPrice = async () => {\n  let response = await fetch(url);\n  if (response.ok) {\n    const json = await response.json();\n    cgPrice = json['ethereum']['usd'];\n  }\n}\nsetInterval(fetchEthUsdPrice, 15000);\n\nconst useEthUsdPrice = () => {\n  const [price, setEthUsdPrice] = useState(0);\n\n  useEffect(() => {\n    if (cgPrice === 0) {\n      fetchEthUsdPrice();\n    }\n\n    if (cgPrice !== price) {\n      setEthUsdPrice(cgPrice);\n    }\n  });\n\n  return price;\n}\n\nexport default useEthUsdPrice;\n","import { useEffect, useState } from 'react'\nimport { useWallet } from 'use-wallet'\nimport useBlock from './useBlock'\nimport { utils } from 'ethers';\nimport WorldToken from \"../world/WorldToken\";\nimport { LP_TOKEN_CONTRACT, WETH_CONTRACT } from \"../world/constants\";\nimport useEthUsdPrice from \"./useEthUsdPrice\";\n\nconst useTokenPrice = () => {\n  const [price, setTokenPrice] = useState({\n    eth: 0,\n    usd: 0\n  });\n  const ethUsdPrice = useEthUsdPrice();\n  const block = useBlock();\n\n  const fetchTokenPrice = async () => {\n    const lpWethAmount = await WETH_CONTRACT.balanceOf(LP_TOKEN_CONTRACT.address);\n    const lpTokenAmount = await WorldToken.read.balanceOf(LP_TOKEN_CONTRACT.address);\n\n    const oneWorldToken = utils.parseEther('1');\n    const deductedInputAmount = oneWorldToken.mul(997);\n    const a = deductedInputAmount.mul(lpWethAmount);\n    const b = lpTokenAmount.mul(1000).add(deductedInputAmount);\n\n    const tokenPriceInWeth = a.div(b).toString() / 1e18;\n    setTokenPrice( {\n      eth: tokenPriceInWeth,\n      usd: tokenPriceInWeth * ethUsdPrice,\n    });\n  };\n\n  useEffect(() => {\n    fetchTokenPrice();\n  }, [block, ethUsdPrice]);\n\n  return price;\n}\n\nexport default useTokenPrice;\n","import React, { useState, useEffect } from 'react'\nimport CountUp from 'react-countup'\n\nconst Value = ({value,\ndecimals}) => {\n  const [start, updateStart] = useState(0);\n  const [end, updateEnd] = useState(0);\n\n  useEffect(() => {\n    if (typeof value === 'number') {\n      updateStart(end);\n      updateEnd(value);\n    }\n  }, [value]);\n\n  return typeof value == 'string' ? (\n    value\n  ) : (\n    <CountUp\n      start={start}\n      end={end}\n      decimals={\n        decimals !== undefined ? decimals : end < 0 ? 4 : end > 1e5 ? 0 : 3\n      }\n      duration={1}\n      separator=\",\"\n    />\n  );\n}\n\nexport default Value;","import { useWallet } from 'use-wallet';\nimport { Badge, Fade } from \"shards-react\";\nimport useTokenBalance from \"../../../hooks/useTokenBalance\";\nimport { displayAmount } from \"../../../world/utils\";\nimport useTokenPrice from \"../../../hooks/useTokenPrice\";\nimport Value from \"../../common/Value\";\nimport { useState } from \"react\";\n\nexport default () => {\n  const [ethPrice, setEthPrice] = useState(false);\n  const {account} = useWallet();\n  const balance = useTokenBalance();\n  const tokenPrice = useTokenPrice();\n\n  return (\n    <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex align-items-center\">\n      <div className=\"ml-4 d-flex\">\n        <Badge\n          href=\"#\"\n          theme=\"success\"\n          className=\"mr-2\"\n          onClick={() => {\n            setEthPrice(!ethPrice);\n          }}>\n          1 WORLD = <Value value={ethPrice ? tokenPrice.eth : tokenPrice.usd} decimals={4}/> {ethPrice ? 'ETH' : 'USD'}\n        </Badge>\n        <Fade in={account}>\n          <Badge theme=\"info\" className=\"mr-2\">{displayAmount(balance)} WORLD</Badge>\n          <Badge theme=\"info\" outline>{account}</Badge>\n        </Fade>\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/metamask-fox.7db94670.svg\";","export default __webpack_public_path__ + \"static/media/wallet-connect.dfa25e47.svg\";","import { useState } from \"react\";\nimport { Fade, NavItem, NavLink, Collapse, DropdownItem } from \"shards-react\";\nimport { useWallet } from 'use-wallet';\nimport metamaskLogo from \"../../../../assets/metamask-fox.svg\";\nimport walletConnectLogo from \"../../../../assets/wallet-connect.svg\";\nimport { shortenAddress } from \"../../../../world/utils\";\n\nconst Notifications = () => {\n  const {connect, account, reset, connector} = useWallet();\n  const [visible, setVisible] = useState(false);\n\n  return (\n    <NavItem className=\"border-right dropdown notifications\">\n      <NavLink\n        className=\"nav-link-icon text-center\"\n        onClick={() => setVisible(!visible)}\n      >\n        <div\n          className=\"nav-link-icon__wrapper\"\n          style={{cursor: 'pointer'}}\n        >\n          {visible\n            ? 'Close Dropdown'\n            : account ? 'Change Wallet' : 'Connect Wallet'}\n        </div>\n      </NavLink>\n      <Collapse\n        open={visible}\n        className=\"dropdown-menu dropdown-menu-small\"\n        style={{minWidth: '15rem'}}\n      >\n        <DropdownItem\n          className=\"connect-wallet-item-wrapper\"\n          onClick={async () => {\n            if (connector === 'injected') {\n              return;\n            }\n            await connect('injected');\n            setVisible(false);\n          }}\n        >\n          <div className=\"notification__icon-wrapper\">\n            <div className=\"notification__icon\">\n              <img\n                className=\"user-avatar rounded-circle\"\n                src={metamaskLogo}\n                alt=\"Metamask\"\n                height={31}\n                width={31}\n              />{\" \"}\n            </div>\n          </div>\n          <div className=\"notification__content\">\n            <span className=\"notification__category select-wallet\">Metamask</span>\n            {connector === 'injected' ? (\n              <Fade in={true}>\n                <p>Connected: {shortenAddress(account)}</p>\n              </Fade>\n            ) : null}\n          </div>\n        </DropdownItem>\n        <DropdownItem\n          className=\"connect-wallet-item-wrapper\"\n          onClick={async () => {\n            if (connector === 'walletconnect') {\n              return;\n            }\n            await connect('walletconnect');\n            setVisible(false);\n          }}\n        >\n          <div className=\"notification__icon-wrapper\">\n            <div className=\"notification__icon\">\n              <img\n                className=\"user-avatar rounded-circle\"\n                src={walletConnectLogo}\n                alt=\"WalletConnect\"\n                height={31}\n                width={31}\n              />{\" \"}\n            </div>\n          </div>\n          <div className=\"notification__content\">\n            <span className=\"notification__category select-wallet\">WalletConnect</span>\n            {connector === 'walletconnect' ? (\n              <Fade in={true}>\n                <p>Connected: {shortenAddress(account)}</p>\n              </Fade>\n            ) : null}\n          </div>\n        </DropdownItem>\n        {account ? (\n          <Fade in={true}>\n            <DropdownItem\n              className=\"notification__all text-danger\"\n              onClick={async () => {\n                await reset();\n                setVisible(false);\n              }}\n            >\n              <i className=\"material-icons text-danger\">&#xE879;</i> Disconnect Wallet\n            </DropdownItem>\n          </Fade>\n        ) : null}\n      </Collapse>\n    </NavItem>\n  );\n};\n\nexport default Notifications;","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\n\nexport default () => (\n  <Nav navbar className=\"border-left flex-row\">\n    <Notifications />\n    {/*<UserActions />*/}\n  </Nav>\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink\n} from \"shards-react\";\nimport metamaskLogo from \"../../../../assets/metamask-fox.svg\";\n\nexport default class UserActions extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false\n    };\n\n    this.toggleUserActions = this.toggleUserActions.bind(this);\n  }\n\n  toggleUserActions() {\n    this.setState({\n      visible: !this.state.visible\n    });\n  }\n\n  render() {\n    return (\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <span className=\"d-none d-md-inline-block\">Connect Wallet</span>\n        </DropdownToggle>\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\n          <DropdownItem tag={Link}>\n            <div className=\"notification__icon-wrapper\">\n              <div className=\"notification__icon\">\n                <img\n                  className=\"user-avatar rounded-circle mr-2\"\n                  src={metamaskLogo}\n                  alt=\"User Avatar\"\n                />{\" \"}\n              </div>\n            </div>\n           Metamask\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"edit-user-profile\">\n            <i className=\"material-icons\">&#xE8B8;</i> Edit Profile\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"file-manager-list\">\n            <i className=\"material-icons\">&#xE2C7;</i> Files\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"transaction-history\">\n            <i className=\"material-icons\">&#xE896;</i> Transactions\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem tag={Link} to=\"/\" className=\"text-danger\">\n            <i className=\"material-icons text-danger\">&#xE879;</i> Disconnect\n          </DropdownItem>\n        </Collapse>\n      </NavItem>\n    );\n  }\n}\n","import React from \"react\";\n\nclass NavbarToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n  }\n\n  render() {\n    return (\n      <nav className=\"nav\">\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a href=\"#\" onClick={this.handleClick} className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\n          <i className=\"material-icons\">&#xE5D2;</i>\n        </a>\n      </nav>\n    )\n  }\n}\n\nexport default NavbarToggle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Container, Navbar } from \"shards-react\";\n\nimport NavbarSearch from \"./NavbarSearch\";\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\nimport NavbarToggle from \"./NavbarToggle\";\n\nconst MainNavbar = ({ layout, stickyTop }) => {\n  const classes = classNames(\n    \"main-navbar\",\n    \"bg-white\",\n    stickyTop && \"sticky-top\"\n  );\n\n  return (\n    <div className={classes}>\n      <Container fluid className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\n          <NavbarSearch />\n          <NavbarNav />\n          <NavbarToggle />\n        </Navbar>\n      </Container>\n    </div>\n  );\n};\n\nMainNavbar.propTypes = {\n  /**\n   * The layout type where the MainNavbar is used.\n   */\n  layout: PropTypes.string,\n  /**\n   * Whether the main navbar is sticky to the top, or not.\n   */\n  stickyTop: PropTypes.bool\n};\n\nMainNavbar.defaultProps = {\n  stickyTop: true\n};\n\nexport default MainNavbar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nclass SidebarMainNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\n  }\n\n  handleToggleSidebar() {\n  }\n\n  render() {\n    const { hideLogoText } = this.props;\n    return (\n      <div className=\"main-navbar\">\n        <Navbar\n          className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n          type=\"light\"\n        >\n          <NavbarBrand\n            className=\"w-100 mr-0\"\n            href=\"#\"\n            style={{ lineHeight: \"25px\" }}\n          >\n            <div className=\"d-table m-auto\">\n              {/*<img*/}\n              {/*  id=\"main-logo\"*/}\n              {/*  className=\"d-inline-block align-top mr-1\"*/}\n              {/*  style={{ maxWidth: \"25px\" }}*/}\n              {/*  src={null}*/}\n              {/*  alt=\"Shards Dashboard\"*/}\n              {/*/>*/}\n              {!hideLogoText && (\n                <span className=\"d-none d-md-inline ml-1\">\n                  WORLD Token App\n                </span>\n              )}\n            </div>\n          </NavbarBrand>\n          {/* eslint-disable-next-line */}\n          <a\n            className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n            onClick={this.handleToggleSidebar}\n          >\n            <i className=\"material-icons\">&#xE5C4;</i>\n          </a>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nSidebarMainNavbar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nSidebarMainNavbar.defaultProps = {\n  hideLogoText: false\n};\n\nexport default SidebarMainNavbar;\n","import React from \"react\";\nimport {\n  Form,\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText\n} from \"shards-react\";\n\nexport default () => (\n  <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\" style={{ display: \"flex\", minHeight: \"45px\" }}>\n    <InputGroup seamless className=\"ml-3\">\n      <InputGroupAddon type=\"prepend\">\n        <InputGroupText>\n          <i className=\"material-icons\">search</i>\n        </InputGroupText>\n        <FormInput\n          className=\"navbar-search\"\n          placeholder=\"Search for something...\"\n          aria-label=\"Search\"\n        />\n      </InputGroupAddon>\n    </InputGroup>\n  </Form>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport { NavItem, NavLink } from \"shards-react\";\n\nconst SidebarNavItem = ({ item }) => (\n  <NavItem>\n    <NavLink tag={RouteNavLink} to={item.to}>\n      {item.htmlBefore && (\n        <div\n          className=\"d-inline-block item-icon-wrapper\"\n          dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n        />\n      )}\n      {item.title && <span>{item.title}</span>}\n      {item.htmlAfter && (\n        <div\n          className=\"d-inline-block item-icon-wrapper\"\n          dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n        />\n      )}\n    </NavLink>\n  </NavItem>\n);\n\nSidebarNavItem.propTypes = {\n  /**\n   * The item object.\n   */\n  item: PropTypes.object\n};\n\nexport default SidebarNavItem;\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\n\nconst navItems = [\n  // {\n  //   title: \"Overview\",\n  //   to: \"/overview\",\n  //   htmlBefore: '<i class=\"material-icons\">dashboard</i>',\n  //   htmlAfter: \"\"\n  // },\n  {\n    title: \"Farm\",\n    to: \"/farm\",\n    htmlBefore: '<i class=\"material-icons\">agriculture</i>',\n    htmlAfter: \"\"\n  },\n  // {\n  //   title: \"Blog Posts\",\n  //   htmlBefore: '<i class=\"material-icons\">vertical_split</i>',\n  //   to: \"/blog-posts\",\n  // },\n  // {\n  //   title: \"Add New Post\",\n  //   htmlBefore: '<i class=\"material-icons\">note_add</i>',\n  //   to: \"/add-new-post\",\n  // },\n  // {\n  //   title: \"Forms & Components\",\n  //   htmlBefore: '<i class=\"material-icons\">view_module</i>',\n  //   to: \"/components-overview\",\n  // },\n  // {\n  //   title: \"Tables\",\n  //   htmlBefore: '<i class=\"material-icons\">table_chart</i>',\n  //   to: \"/tables\",\n  // },\n  // {\n  //   title: \"User Profile\",\n  //   htmlBefore: '<i class=\"material-icons\">person</i>',\n  //   to: \"/user-profile-lite\",\n  // },\n  // {\n  //   title: \"Errors\",\n  //   htmlBefore: '<i class=\"material-icons\">error</i>',\n  //   to: \"/errors\",\n  // }\n];\n\nclass SidebarNavItems extends React.Component {\n\n  render() {\n    return (\n      <div className=\"nav-wrapper\">\n        <Nav className=\"nav--no-borders flex-column\">\n          {navItems.map((item, idx) => (\n            <SidebarNavItem key={idx} item={item} />\n          ))}\n        </Nav>\n      </div>\n    )\n  }\n}\n\nexport default SidebarNavItems;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarSearch from \"./SidebarSearch\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menuVisible: false\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      menuVisible: true\n    });\n  }\n\n  render() {\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col\n        tag=\"aside\"\n        className={classes}\n        lg={{ size: 2 }}\n        md={{ size: 3 }}\n      >\n        <SidebarMainNavbar hideLogoText={this.props.hideLogoText} />\n        <SidebarSearch />\n        <SidebarNavItems />\n      </Col>\n    );\n  }\n}\n\nMainSidebar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nMainSidebar.defaultProps = {\n  hideLogoText: false\n};\n\nexport default MainSidebar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Nav, NavItem, NavLink } from \"shards-react\";\nimport { Link } from \"react-router-dom\";\nimport { CHAIN_ID, CONTRACT_ADDRESSES } from \"../../world/constants\";\n\nconst MainFooter = ({contained, menuItems, copyright}) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid={contained}>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <NavItem key={idx}>\n              <NavLink\n                // tag={Link}\n                href={item.to}\n              >\n                {item.title}\n              </NavLink>\n            </NavItem>\n          ))}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.propTypes = {\n  /**\n   * Whether the content is contained, or not.\n   */\n  contained: PropTypes.bool,\n  /**\n   * The menu items array.\n   */\n  menuItems: PropTypes.array,\n  /**\n   * The copyright info.\n   */\n  copyright: PropTypes.string\n};\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © 2021 WORLD Token\",\n  menuItems: [\n    {\n      title: `Token: ${CONTRACT_ADDRESSES.worldToken[CHAIN_ID]}`,\n      to: `https://etherscan.io/token/${CONTRACT_ADDRESSES.worldToken[CHAIN_ID]}`\n    },\n  ]\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"./MainNavbar/MainNavbar\";\nimport MainSidebar from \"./MainSidebar/MainSidebar\";\nimport MainFooter from \"./MainFooter\";\n\nconst DefaultLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n        {!noFooter && <MainFooter />}\n      </Col>\n    </Row>\n  </Container>\n);\n\nDefaultLayout.propTypes = {\n  /**\n   * Whether to display the navbar, or not.\n   */\n  noNavbar: PropTypes.bool,\n  /**\n   * Whether to display the footer, or not.\n   */\n  noFooter: PropTypes.bool\n};\n\nDefaultLayout.defaultProps = {\n  noNavbar: false,\n  noFooter: false\n};\n\nexport default DefaultLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Col } from \"shards-react\";\n\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"4\" className={classes} { ...attrs }>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  )\n};\n\nPageTitle.propTypes = {\n  /**\n   * The page title.\n   */\n  title: PropTypes.string,\n  /**\n   * The page subtitle.\n   */\n  subtitle: PropTypes.string\n};\n\nexport default PageTitle;\n","import Chart from 'chart.js';\n\nChart.defaults.LineWithLine = Chart.defaults.line;\nChart.controllers.LineWithLine = Chart.controllers.line.extend({\n  draw(ease) {\n    Chart.controllers.line.prototype.draw.call(this, ease);\n\n    if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\n      const activePoint = this.chart.tooltip._active[0];\n      const { ctx } = this.chart;\n      const { x } = activePoint.tooltipPosition();\n      const topY = this.chart.scales['y-axis-0'].top;\n      const bottomY = this.chart.scales['y-axis-0'].bottom;\n\n      // Draw the line\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(x, topY);\n      ctx.lineTo(x, bottomY);\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = '#ddd';\n      ctx.stroke();\n      ctx.restore();\n    }\n  },\n});\n\nexport default Chart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport shortid from \"shortid\";\nimport { Card, CardBody } from \"shards-react\";\n\nimport Chart from \"../../world/chart\";\nimport Value from \"./Value\";\nimport { displayAmount } from \"../../world/utils\";\n\nclass SmallStats extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          enabled: false,\n          custom: false\n        },\n        elements: {\n          point: {\n            radius: 0\n          },\n          line: {\n            tension: 0.33\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false\n              }\n            }\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                isplay: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: Math.max(...this.props.chartData[0].data) + 1\n              }\n            }\n          ]\n        }\n      },\n      ...this.props.chartOptions\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: this.props.chartLabels\n          },\n          ...{\n            datasets: this.props.chartData\n          }\n        },\n        options: chartOptions\n      },\n      ...this.props.chartConfig\n    };\n\n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const {variation, label, value, percentage, increase, append, decimals} = this.props;\n\n    const cardClasses = classNames(\n      \"stats-small\",\n      variation && `stats-small--${variation}`\n    );\n\n    const cardBodyClasses = classNames(\n      variation === \"1\" ? \"p-0 d-flex\" : \"px-0 pb-0\"\n    );\n\n    const innerWrapperClasses = classNames(\n      \"d-flex\",\n      variation === \"1\" ? \"flex-column m-auto\" : \"px-3\"\n    );\n\n    const dataFieldClasses = classNames(\n      \"stats-small__data\",\n      variation === \"1\" && \"text-center\"\n    );\n\n    const labelClasses = classNames(\n      \"stats-small__label\",\n      \"text-uppercase\",\n      variation !== \"1\" && \"mb-1\"\n    );\n\n    const valueClasses = classNames(\n      \"stats-small__value\",\n      \"count\",\n      variation === \"1\" ? \"my-3\" : \"m-0\"\n    );\n\n    const innerDataFieldClasses = classNames(\n      \"stats-small__data\",\n      variation !== \"1\" && \"text-right align-items-center\"\n    );\n\n    const percentageClasses = classNames(\n      \"stats-small__percentage\",\n      `stats-small__percentage--${increase ? \"increase\" : \"decrease\"}`\n    );\n\n    const canvasHeight = variation === \"1\" ? 120 : 60;\n\n    return (\n      <Card small className={cardClasses}>\n        <CardBody className={cardBodyClasses}>\n          <div className={innerWrapperClasses}>\n            <div className={dataFieldClasses}>\n              <span className={labelClasses}>{label}</span>\n              <h6 className={valueClasses}>\n                <Value value={displayAmount(value)} decimals={decimals}/>{append}\n              </h6>\n            </div>\n            <div className={innerDataFieldClasses}>\n              <span className={percentageClasses}>\n                {/*<Value value={displayAmount(percentage)}/>*/}\n                {percentage}\n              </span>\n            </div>\n          </div>\n          <canvas\n            height={canvasHeight}\n            ref={this.canvasRef}\n            className={`stats-small-${shortid()}`}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nSmallStats.propTypes = {\n  /**\n   * The Small Stats variation.\n   */\n  variation: PropTypes.string,\n  /**\n   * The label.\n   */\n  label: PropTypes.string,\n  /**\n   * The value.\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The percentage number or string.\n   */\n  percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Whether is a value increase, or not.\n   */\n  increase: PropTypes.bool,\n  /**\n   * The Chart.js configuration object.\n   */\n  chartConfig: PropTypes.object,\n  /**\n   * The Chart.js options object.\n   */\n  chartOptions: PropTypes.object,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.array.isRequired,\n  /**\n   * The chart labels.\n   */\n  chartLabels: PropTypes.array,\n  append: PropTypes.string,\n  decimal: PropTypes.number\n};\n\nSmallStats.defaultProps = {\n  increase: true,\n  percentage: 0,\n  value: 0,\n  label: \"Label\",\n  chartOptions: Object.create(null),\n  chartConfig: Object.create(null),\n  chartData: [],\n  chartLabels: []\n};\n\nexport default SmallStats;\n","import { utils, Contract, BigNumber, ethers } from 'ethers';\nimport {\n  ChainId,\n  Pair,\n  Token,\n  WETH\n} from '@uniswap/sdk';\nimport WorldFarmingAbi from './abi/WorldFarming.json';\nimport ERC20Abi from './abi/ERC20.json';\nimport {\n  CHAIN_ID,\n  CONTRACT_ADDRESSES,\n  DEFAULT_PROVIDER, LP_TOKEN_CONTRACT, WETH_CONTRACT, WORLD_ETH_PAIR, BLOCKS_PER_DAY\n} from './constants';\nimport WorldToken from \"./WorldToken\";\n\nexport default class WorldFarm {\n\n  static address = CONTRACT_ADDRESSES.worldFarm[CHAIN_ID];\n\n  static read = new Contract(WorldFarm.address, WorldFarmingAbi, DEFAULT_PROVIDER);\n\n  constructor(signer) {\n    this.contract = new Contract(WorldFarm.address, WorldFarmingAbi, signer);\n    this.signer = signer;\n  }\n\n  async wallet() {\n    return this.signer.getAddress();\n  }\n\n  async lpTokenBalance() {\n    return LP_TOKEN_CONTRACT.balanceOf(await this.wallet());\n  }\n\n  async lpTokenAllowance() {\n    return LP_TOKEN_CONTRACT.allowance(await this.wallet(), this.contract.address);\n  }\n\n  async lpTokenMaxApprove() {\n    const lpToken = new Contract(\n      WORLD_ETH_PAIR.address,\n      ERC20Abi,\n      this.signer\n    );\n    const amount = ethers.constants.MaxUint256;\n    const tx = await lpToken.approve(this.contract.address, amount);\n    await tx.wait();\n\n    return amount;\n  }\n\n  async stakedBalance() {\n    const {amount} = await this.contract.userInfo(WORLD_ETH_PAIR.pid, await this.wallet());\n    return amount;\n  }\n\n  static async roi(worldPerBlock, ethUsdPrice) {\n    let lpContractToken = await WorldToken.read.balanceOf(LP_TOKEN_CONTRACT.address);\n    lpContractToken = +lpContractToken.toString() / 1e18;\n\n    let lpContractWeth = await WETH_CONTRACT.balanceOf(LP_TOKEN_CONTRACT.address);\n    lpContractWeth = +lpContractWeth.toString() / 1e18;\n\n    let balance = await LP_TOKEN_CONTRACT.balanceOf(WorldFarm.address);\n    balance = +balance.toString() / 1e18;\n\n    let totalSupply = await LP_TOKEN_CONTRACT.totalSupply();\n    totalSupply = +totalSupply.toString() / 1e18;\n\n    const portionLp = balance / totalSupply;\n\n    const tokenAmount = (lpContractToken * portionLp);\n    const wethAmount = (lpContractWeth * portionLp);\n\n    const tokenPriceInWeth = wethAmount / tokenAmount;\n\n    // const averageBlockTime = 13.2;\n    // const blocksPerHour = 3600 / averageBlockTime;\n\n    const reserveETH = lpContractWeth + (lpContractToken * tokenPriceInWeth);\n\n    const roiPerBlock = (tokenPriceInWeth * worldPerBlock) / (reserveETH * portionLp);\n\n    const blocksPerHour = BLOCKS_PER_DAY / 24;\n    const roiPerHour = roiPerBlock * blocksPerHour;\n    const roiPerDay = roiPerHour * 24;\n    const roiPerMonth = roiPerDay * 30;\n    const roiPerYear = roiPerMonth * 12;\n\n    return {\n      roiPerBlock,\n      roiPerHour,\n      roiPerDay,\n      roiPerMonth,\n      roiPerYear,\n      rewardPerThousand: roiPerDay * (1000 / (tokenPriceInWeth * ethUsdPrice)),\n      totalStakedLP: utils.parseEther(balance.toString())\n      // tvl:\n      //   (pair.reserveUSD / pair.totalSupply) *\n      //   liquidityPosition.liquidityTokenBalance,\n    };\n  }\n\n  static async poolWeight() {\n    const {allocPoint} = await WorldFarm.read.poolInfo(WORLD_ETH_PAIR.pid);\n    const totalAllocPoint = await WorldFarm.read.totalAllocPoint();\n    return allocPoint.div(totalAllocPoint);\n  }\n\n  static async totalLpWethValue() {\n    // Get balance of the token address\n    let tokenAmountWholeLP = await WorldToken.read.balanceOf(LP_TOKEN_CONTRACT.address);\n    tokenAmountWholeLP = +tokenAmountWholeLP.toString();\n\n    // Get the share of lpContract that WorldFarm owns\n    let balance = await LP_TOKEN_CONTRACT.balanceOf(WorldFarm.address);\n    balance = +balance.toString();\n\n    // Convert that into the portion of total lpContract = p1\n    let totalSupply = await LP_TOKEN_CONTRACT.totalSupply();\n    totalSupply = +totalSupply.toString();\n\n    // Get total weth value for the lpContract = w1\n    let lpContractWeth = await WETH_CONTRACT.balanceOf(LP_TOKEN_CONTRACT.address);\n    lpContractWeth = +lpContractWeth.toString();\n\n    // Return p1 * w1 * 2\n    const portionLp = balance / totalSupply;\n    const totalLpWethValue = portionLp * lpContractWeth * 2;\n\n    // Calculate\n    const tokenAmount = (tokenAmountWholeLP * portionLp) / 1e18;\n    const wethAmount = (lpContractWeth * portionLp) / 1e18;\n\n    let poolWeight = await WorldFarm.poolWeight();\n    poolWeight = +poolWeight.toString();\n\n    return {\n      tokenAmount,\n      wethAmount,\n      poolWeight,\n      totalWethValue: totalLpWethValue / 1e18,\n      tokenPriceInWeth: wethAmount * tokenAmount,\n      totalStakedLp: balance / 1e18\n    };\n  }\n\n  async pendingRewards() {\n    return this.contract.pendingRewards(WORLD_ETH_PAIR.pid, await this.wallet());\n  }\n\n  async stake(amount) {\n    const tx = await this.contract.deposit(WORLD_ETH_PAIR.pid, utils.parseEther(amount));\n    await tx.wait();\n  }\n\n  async unstake() {\n    const tx = await this.contract.balanceOf(await this.wallet());\n    await tx.wait();\n  }\n}\n","import React,\n{\n  createContext,\n  useEffect,\n  useState\n} from 'react';\nimport { useWallet } from \"use-wallet\";\nimport * as ethers from \"ethers\";\nimport WorldFarm from \"../world/WorldFarm\";\n\nconst useWorldFarm = () => {\n  const { account, ethereum } = useWallet();\n  const [worldFarm, setWorldFarm] = useState(null);\n\n  const init = async () =>{\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      setWorldFarm(new WorldFarm(provider.getSigner()));\n      return;\n    }\n    setWorldFarm(null);\n  };\n\n  useEffect(() => {\n    init();\n  }, [account, ethereum]);\n\n  return worldFarm;\n};\n\nexport default useWorldFarm;\n","import { useCallback, useEffect, useState } from 'react'\n\nimport { useWallet } from 'use-wallet'\n\nimport useBlock from './useBlock'\nimport useWorldToken from \"./useWorldToken\";\nimport { BigNumber } from \"ethers\";\nimport useWorldFarm from \"./useWorldFarm\";\nimport { ZERO_BN } from \"../world/utils\";\n\nconst useLpTokenBalance = () => {\n  const [balance, setBalance] = useState(ZERO_BN);\n  const {\n    account,\n    ethereum,\n  } = useWallet();\n  const block = useBlock();\n  const worldFarm = useWorldFarm();\n\n  const fetchBalance = async () => {\n    const balance = await worldFarm?.lpTokenBalance();\n    setBalance(balance);\n  };\n\n  useEffect(() => {\n    fetchBalance();\n  }, [account, ethereum, block]);\n\n  return balance;\n}\n\nexport default useLpTokenBalance;\n","import { useCallback, useEffect, useState } from 'react'\n\nimport { useWallet } from 'use-wallet'\n\nimport useBlock from './useBlock'\nimport useWorldToken from \"./useWorldToken\";\nimport { BigNumber } from \"ethers\";\nimport useWorldFarm from \"./useWorldFarm\";\n\nconst useLpTokenAllowance = () => {\n  const [allowance, setAllowance] = useState(BigNumber.from(0));\n  const {\n    account,\n    ethereum,\n  } = useWallet();\n  const block = useBlock();\n  const worldFarm = useWorldFarm();\n\n  const fetchAllowance = useCallback(async () => {\n    const allowance = await worldFarm?.lpTokenAllowance();\n    setAllowance(allowance);\n  }, [worldFarm]);\n\n  useEffect(() => {\n    fetchAllowance();\n  }, [account, ethereum, block]);\n\n  return {\n    allowance: allowance || BigNumber.from(0),\n    setAllowance\n  };\n}\n\nexport default useLpTokenAllowance;\n","import { useCallback, useEffect, useState } from 'react'\n\nimport { useWallet } from 'use-wallet'\n\nimport useBlock from './useBlock'\nimport useWorldFarm from \"./useWorldFarm\";\nimport { BigNumber } from \"ethers\";\nimport { ZERO_BN } from \"../world/utils\";\n\nconst useStakedBalance = () => {\n  const [balance, setBalance] = useState(ZERO_BN);\n  const {account, ethereum} = useWallet();\n  const worldFarm = useWorldFarm();\n  const block = useBlock();\n\n  const fetchBalance = async () => {\n    if (!account || !worldFarm) {\n      setBalance(ZERO_BN);\n      return;\n    }\n    const balance = await worldFarm?.stakedBalance();\n    setBalance(balance);\n  };\n\n  useEffect(() => {\n    fetchBalance();\n  }, [account, worldFarm, ethereum, block]);\n\n  return balance;\n}\n\nexport default useStakedBalance;\n","import { useEffect, useState } from 'react'\n\nimport useBlock from './useBlock'\nimport useWorldFarm from \"./useWorldFarm\";\nimport { BigNumber } from \"ethers\";\nimport WorldFarm from \"../world/WorldFarm\";\n\nconst useWorldPerBlock = () => {\n  const [worldPerBlock, setWorldPerBlock] = useState(BigNumber.from(0));\n  const worldFarm = useWorldFarm();\n  const block = useBlock();\n\n  const fetchWorldPerBlock = async () => {\n    const worldPerBlock = await WorldFarm.read.getWorldPerBlock();\n    setWorldPerBlock(worldPerBlock);\n  };\n\n  useEffect(() => {\n    fetchWorldPerBlock();\n  }, [block, worldFarm]);\n\n  return worldPerBlock;\n}\n\nexport default useWorldPerBlock;\n","import { useEffect, useState } from 'react'\n\nimport { useWallet } from 'use-wallet'\n\nimport useBlock from './useBlock'\nimport useWorldPerBlock from \"./useWorldPerBlock\";\nimport WorldFarm from \"../world/WorldFarm\";\nimport useEthUsdPrice from \"./useEthUsdPrice\";\nimport { BigNumber, utils } from \"ethers\";\n\nconst useFarmROI = () => {\n  const [roi, setROI] = useState({\n    roiPerHour: 0,\n    roiPerDay: 0,\n    roiPerMonth: 0,\n    roiPerYear: 0,\n    rewardPerThousand: 0,\n    totalStakedLP: BigNumber.from(0),\n    worldPerBlock:0\n  });\n  const block = useBlock();\n\n  let worldPerBlock = useWorldPerBlock();\n  worldPerBlock = worldPerBlock.toString() / 1e18;\n\n  const ethUsdPrice = useEthUsdPrice();\n  const fetchFarmingAPY = async () => {\n    const roi = await WorldFarm.roi(worldPerBlock, ethUsdPrice);\n    setROI({\n      ...roi,\n      worldPerBlock\n    });\n  };\n\n  useEffect(() => {\n    fetchFarmingAPY();\n  }, [block, worldPerBlock]);\n\n  return roi;\n}\n\nexport default useFarmROI;\n","import { useState } from \"react\";\nimport {\n  Badge,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  ListGroup,\n  ListGroupItem,\n  ListGroupItemHeading,\n  Row\n} from \"shards-react\";\nimport useWorldFarm from \"../../hooks/useWorldFarm\";\nimport { displayAmount, shortenAddress } from \"../../world/utils\";\nimport useLpTokenBalance from \"../../hooks/useLpTokenBalance\";\nimport { BigNumber, utils } from \"ethers\";\nimport useLpTokenAllowance from \"../../hooks/useLpTokenAllowance\";\nimport { useWallet } from 'use-wallet';\nimport { BLOCKS_PER_DAY, CHAIN_ID, CONTRACT_ADDRESSES } from \"../../world/constants\";\nimport Value from \"../common/Value\";\nimport useStakedBalance from \"../../hooks/useStakedBalance\";\nimport useFarmROI from \"../../hooks/useFarmROI\";\nimport useTokenPrice from \"../../hooks/useTokenPrice\";\n\nconst Stake = () => {\n  const {account} = useWallet();\n  const [amount, setAmount] = useState(0);\n  const {setAllowance, allowance} = useLpTokenAllowance();\n  const worldFarm = useWorldFarm();\n  const balance = useLpTokenBalance();\n  const stakingAllowed = !allowance.isZero();\n\n  const {totalStakedLP, worldPerBlock} = useFarmROI();\n  const tokenPrice = useTokenPrice();\n  const worldPerDay = !totalStakedLP.isZero() && amount\n    ? ((amount * 1e18) / totalStakedLP.toString()) * worldPerBlock * BLOCKS_PER_DAY\n    : 0;\n\n  return (\n    <Card small className=\"blog-comments\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Stake WORLD-ETH LP Tokens</h6>\n      </CardHeader>\n\n      <CardBody className=\"d-flex flex-column\">\n        <label htmlFor=\"lpAmount\">Enter LP amount to stake</label>\n        <InputGroup>\n          <FormInput\n            id=\"lpAmount\"\n            placeholder=\"0\"\n            onChange={(e) => {\n              const num = +e.target.value;\n              setAmount(num ? num : 0);\n            }}\n            value={amount}\n          />\n          <InputGroupAddon type=\"append\">\n            <Button\n              theme=\"white\"\n              onClick={() => {\n                if (!balance.isZero()){\n                  setAmount(utils.formatEther(balance));\n                }\n              }}>\n              Max\n            </Button>\n          </InputGroupAddon>\n          <InputGroupAddon type=\"append\">\n            <Button\n              theme={stakingAllowed ? 'accent' : 'info'}\n              onClick={async () => {\n                if (stakingAllowed) {\n                  try {\n                    await worldFarm?.stake(amount);\n                    setAmount(0);\n                  } catch (e) {\n                    console.log('Stake error: ', e);\n                    setAllowance(BigNumber.from(0));\n                  }\n                  return;\n                }\n\n                try {\n                  const amount = await worldFarm?.lpTokenMaxApprove();\n                  setAllowance(amount);\n                } catch (e) {\n                  console.log('Approve error: ', e);\n                }\n              }}\n            >\n              {stakingAllowed ? 'Stake' : 'Approve'}\n            </Button>\n          </InputGroupAddon>\n        </InputGroup>\n\n        <ListGroup flush className=\"list-group-small\">\n          <ListGroupItemHeading/>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\"><b>Available balance</b></span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              <b><Value value={displayAmount(balance)}/></b>\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">WORLD per day</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              <Value value={displayAmount(worldPerDay)}/>\n            </span>\n          </ListGroupItem>\n          {/*<ListGroupItem className=\"d-flex px-3\">*/}\n          {/*  <span className=\"text-semibold text-fiord-blue\">WORLD per week</span>*/}\n          {/*  <span className=\"ml-auto text-right text-semibold text-reagent-gray\">*/}\n          {/*    123*/}\n          {/*  </span>*/}\n          {/*</ListGroupItem>*/}\n          {/*<ListGroupItem className=\"d-flex px-3\">*/}\n          {/*  <span className=\"text-semibold text-fiord-blue\">WORLD per month</span>*/}\n          {/*  <span className=\"ml-auto text-right text-semibold text-reagent-gray\">*/}\n          {/*    123*/}\n          {/*  </span>*/}\n          {/*</ListGroupItem>*/}\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">Earnings per day (USD)</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              $<Value value={displayAmount(worldPerDay * tokenPrice.usd)} decimals={4}/>\n            </span>\n          </ListGroupItem>\n          {/*<ListGroupItem className=\"d-flex px-3\">*/}\n          {/*  <span className=\"text-semibold text-fiord-blue\">Earnings per week (USD)</span>*/}\n          {/*  <span className=\"ml-auto text-right text-semibold text-reagent-gray\">*/}\n          {/*    $123*/}\n          {/*  </span>*/}\n          {/*</ListGroupItem>*/}\n          {/*<ListGroupItem className=\"d-flex px-3\">*/}\n          {/*  <span className=\"text-semibold text-fiord-blue\">Earnings per month (USD)</span>*/}\n          {/*  <span className=\"ml-auto text-right text-semibold text-reagent-gray\">*/}\n          {/*    $123*/}\n          {/*  </span>*/}\n          {/*</ListGroupItem>*/}\n        </ListGroup>\n      </CardBody>\n\n      <CardFooter className=\"border-top\">\n        <Row>\n          <Col className=\"view-report d-flex\">\n            <Badge theme=\"info\" outline>\n              1% of transaction tax goes to the reward pool\n            </Badge>\n          </Col>\n          <Col className=\"view-report d-flex justify-content-end\">\n            <Badge href={`https://etherscan.com/address/${CONTRACT_ADDRESSES.worldFarm[CHAIN_ID]}`} theme=\"light\">\n              Contract: <span className=\"text-break\">{shortenAddress(CONTRACT_ADDRESSES.worldFarm[CHAIN_ID], 7)}</span>\n            </Badge>\n          </Col>\n        </Row>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default Stake;\n","import { Card, CardBody, CardHeader, ListGroup, ListGroupItem } from \"shards-react\";\nimport { displayAmount, ZERO_BN } from \"../../world/utils\";\nimport useStakedBalance from \"../../hooks/useStakedBalance\";\nimport useFarmROI from \"../../hooks/useFarmROI\";\nimport { BLOCKS_PER_DAY } from \"../../world/constants\";\nimport useTokenPrice from \"../../hooks/useTokenPrice\";\nimport { utils } from 'ethers';\nimport Value from \"../common/Value\";\n\nconst StakingInfo = () => {\n  const stakedBalance = useStakedBalance();\n  const {totalStakedLP, worldPerBlock} = useFarmROI();\n  const tokenPrice = useTokenPrice();\n\n  const worldPerDay = !totalStakedLP.isZero() && !stakedBalance.isZero()\n    ? (stakedBalance.toString() / totalStakedLP.toString()) * worldPerBlock * BLOCKS_PER_DAY\n    : 0;\n\n  return (\n    <Card small className=\"blog-comments\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Staking Information</h6>\n      </CardHeader>\n\n      <CardBody className=\"d-flex flex-column\">\n        <ListGroup flush className=\"list-group-small\">\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\"><b>WORLD per day</b></span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              <b><Value value={displayAmount(worldPerDay)}/></b>\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">WORLD per week</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              <Value value={displayAmount(worldPerDay * 7)}/>\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">WORLD per month</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              <Value value={displayAmount(worldPerDay * 31)}/>\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">Earnings per day (USD)</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              $<Value value={displayAmount(worldPerDay * tokenPrice.usd)} decimals={4}/>\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">Earnings per week (USD)</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              $<Value value={displayAmount((worldPerDay * 7) * tokenPrice.usd)} decimals={4}/>\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">Earnings per month (USD)</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              $<Value value={displayAmount((worldPerDay * 31) * tokenPrice.usd)} decimals={4}/>\n            </span>\n          </ListGroupItem>\n        </ListGroup>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default StakingInfo;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport {\n  InputGroup,\n  DatePicker,\n  InputGroupAddon,\n  InputGroupText\n} from \"shards-react\";\n\nclass RangeDatePicker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      startDate: undefined,\n      endDate: undefined\n    };\n\n    this.handleStartDateChange = this.handleStartDateChange.bind(this);\n    this.handleEndDateChange = this.handleEndDateChange.bind(this);\n  }\n\n  handleStartDateChange(value) {\n    this.setState({\n      ...this.state,\n      ...{ startDate: new Date(value) }\n    });\n  }\n\n  handleEndDateChange(value) {\n    this.setState({\n      ...this.state,\n      ...{ endDate: new Date(value) }\n    });\n  }\n\n  render() {\n    const { className } = this.props;\n    const classes = classNames(className, \"d-flex\", \"my-auto\", \"date-range\");\n\n    return (\n      <InputGroup className={classes}>\n        <DatePicker\n          size=\"sm\"\n          selected={this.state.startDate}\n          onChange={this.handleStartDateChange}\n          placeholderText=\"Start Date\"\n          dropdownMode=\"select\"\n          className=\"text-center\"\n        />\n        <DatePicker\n          size=\"sm\"\n          selected={this.state.endDate}\n          onChange={this.handleEndDateChange}\n          placeholderText=\"End Date\"\n          dropdownMode=\"select\"\n          className=\"text-center\"\n        />\n        <InputGroupAddon type=\"append\">\n          <InputGroupText>\n            <i className=\"material-icons\">&#xE916;</i>\n          </InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n    );\n  }\n}\n\nexport default RangeDatePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\n\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport Chart from \"../../world/chart\";\n\nclass UsersOverview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartOptions = {\n      ...{\n        responsive: true,\n        legend: {\n          position: \"top\"\n        },\n        elements: {\n          line: {\n            // A higher value makes the line look skewed at this ratio.\n            tension: 0.3\n          },\n          point: {\n            radius: 0\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                callback(tick, index) {\n                  // Jump every 7 values on the X axis labels to avoid clutter.\n                  return index % 7 !== 0 ? \"\" : tick;\n                }\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                suggestedMax: 45,\n                callback(tick) {\n                  if (tick === 0) {\n                    return tick;\n                  }\n                  // Format the amounts using Ks for thousands.\n                  return tick > 999 ? `${(tick / 1000).toFixed(1)}K` : tick;\n                }\n              }\n            }\n          ]\n        },\n        hover: {\n          mode: \"nearest\",\n          intersect: false\n        },\n        tooltips: {\n          custom: false,\n          mode: \"nearest\",\n          intersect: false\n        }\n      },\n      ...this.props.chartOptions\n    };\n\n    const BlogUsersOverview = new Chart(this.canvasRef.current, {\n      type: \"LineWithLine\",\n      data: this.props.chartData,\n      options: chartOptions\n    });\n\n    // They can still be triggered on hover.\n    const buoMeta = BlogUsersOverview.getDatasetMeta(0);\n    buoMeta.data[0]._model.radius = 0;\n    buoMeta.data[\n      this.props.chartData.datasets[0].data.length - 1\n    ]._model.radius = 0;\n\n    // Render the chart.\n    BlogUsersOverview.render();\n  }\n\n  render() {\n    const { title } = this.props;\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n        </CardHeader>\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            <Col sm=\"6\" className=\"d-flex mb-2 mb-sm-0\">\n              <RangeDatePicker />\n            </Col>\n            <Col>\n              <Button\n                size=\"sm\"\n                className=\"d-flex btn-white ml-auto mr-auto ml-sm-auto mr-sm-0 mt-3 mt-sm-0\"\n              >\n                View Full Report &rarr;\n              </Button>\n            </Col>\n          </Row>\n          <canvas\n            height=\"120\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nUsersOverview.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The chart dataset.\n   */\n  chartData: PropTypes.object,\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object\n};\n\nUsersOverview.defaultProps = {\n  title: \"Users Overview\",\n  chartData: {\n    labels: Array.from(new Array(30), (_, i) => (i === 0 ? 1 : i)),\n    datasets: [\n      {\n        label: \"Current Month\",\n        fill: \"start\",\n        data: [\n          500,\n          800,\n          320,\n          180,\n          240,\n          320,\n          230,\n          650,\n          590,\n          1200,\n          750,\n          940,\n          1420,\n          1200,\n          960,\n          1450,\n          1820,\n          2800,\n          2102,\n          1920,\n          3920,\n          3202,\n          3140,\n          2800,\n          3200,\n          3200,\n          3400,\n          2910,\n          3100,\n          4250\n        ],\n        backgroundColor: \"rgba(0,123,255,0.1)\",\n        borderColor: \"rgba(0,123,255,1)\",\n        pointBackgroundColor: \"#ffffff\",\n        pointHoverBackgroundColor: \"rgb(0,123,255)\",\n        borderWidth: 1.5,\n        pointRadius: 0,\n        pointHoverRadius: 3\n      },\n      {\n        label: \"Past Month\",\n        fill: \"start\",\n        data: [\n          380,\n          430,\n          120,\n          230,\n          410,\n          740,\n          472,\n          219,\n          391,\n          229,\n          400,\n          203,\n          301,\n          380,\n          291,\n          620,\n          700,\n          300,\n          630,\n          402,\n          320,\n          380,\n          289,\n          410,\n          300,\n          530,\n          630,\n          720,\n          780,\n          1200\n        ],\n        backgroundColor: \"rgba(255,65,105,0.1)\",\n        borderColor: \"rgba(255,65,105,1)\",\n        pointBackgroundColor: \"#ffffff\",\n        pointHoverBackgroundColor: \"rgba(255,65,105,1)\",\n        borderDash: [3, 3],\n        borderWidth: 1,\n        pointRadius: 0,\n        pointHoverRadius: 2,\n        pointBorderColor: \"rgba(255,65,105,1)\"\n      }\n    ]\n  }\n};\n\nexport default UsersOverview;\n","import { useEffect, useState } from 'react'\n\nimport { useWallet } from 'use-wallet'\n\nimport useBlock from './useBlock'\nimport useWorldFarm from \"./useWorldFarm\";\nimport { BigNumber } from \"ethers\";\n\nconst usePendingRewards = () => {\n  const [rewards, setRewards] = useState(BigNumber.from(0));\n  const {account, ethereum} = useWallet();\n  const worldFarm = useWorldFarm();\n  const block = useBlock();\n\n  const fetchRewards = async () => {\n    if (!account) {\n      setRewards(BigNumber.from(0));\n      return;\n    }\n    const rewards = await worldFarm?.pendingRewards();\n    setRewards(rewards);\n  };\n\n  useEffect(() => {\n    fetchRewards();\n  }, [account, ethereum, block, worldFarm]);\n\n  return rewards;\n}\n\nexport default usePendingRewards;\n","import { Button, Card, CardBody, CardFooter, CardHeader, Col, ListGroup, ListGroupItem, Row } from \"shards-react\";\nimport { displayAmount } from \"../../world/utils\";\nimport useStakedBalance from \"../../hooks/useStakedBalance\";\nimport usePendingRewards from \"../../hooks/usePendingRewards\";\nimport Value from \"../common/Value\";\nimport useTokenPrice from \"../../hooks/useTokenPrice\";\nimport { utils } from 'ethers';\n\nconst StakingInfo = () => {\n  const stakedBalance = useStakedBalance();\n  const pendingRewards = usePendingRewards() || '0';\n  const tokenPrice = useTokenPrice();\n\n  return (\n    <Card small className=\"blog-comments\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Staking Actions</h6>\n      </CardHeader>\n\n      <CardBody className=\"d-flex flex-column\">\n        <ListGroup flush className=\"list-group-small\">\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\"><b>Pending rewards</b></span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              <b><Value value={displayAmount(pendingRewards)}/></b>\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">Current earnings (USD)</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              $<Value value={displayAmount(utils.formatEther(pendingRewards) * tokenPrice.usd)} decimals={4}/>\n            </span>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">Staked balance</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              <Value value={displayAmount(stakedBalance)}/>\n            </span>\n          </ListGroupItem>\n        </ListGroup>\n      </CardBody>\n\n      <CardFooter className=\"border-top\">\n        <Row>\n          <Col className=\"view-report d-flex justify-content-between\">\n            <Button theme=\"success\">\n              Claim rewards\n            </Button>\n            <Button theme=\"secondary\">\n              Unstake\n            </Button>\n          </Col>\n        </Row>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default StakingInfo;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Card, CardHeader, CardBody, Button, Badge } from \"shards-react\";\n\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport Chart from \"../../world/chart\";\n\nclass APYOverview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartOptions = {\n      ...{\n        responsive: true,\n        legend: {\n          position: \"top\"\n        },\n        elements: {\n          line: {\n            // A higher value makes the line look skewed at this ratio.\n            tension: 0.3\n          },\n          point: {\n            radius: 0\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                callback(tick, index) {\n                  // Jump every 7 values on the X axis labels to avoid clutter.\n                  return index % 7 !== 0 ? \"\" : tick;\n                }\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                suggestedMax: 45,\n                callback(tick) {\n                  if (tick === 0) {\n                    return tick;\n                  }\n                  // Format the amounts using Ks for thousands.\n                  return tick > 999 ? `${(tick / 1000).toFixed(1)}K` : tick;\n                }\n              }\n            }\n          ]\n        },\n        hover: {\n          mode: \"nearest\",\n          intersect: false\n        },\n        tooltips: {\n          custom: false,\n          mode: \"nearest\",\n          intersect: false\n        }\n      },\n      ...this.props.chartOptions\n    };\n\n    const Overview = new Chart(this.canvasRef.current, {\n      type: \"LineWithLine\",\n      data: this.props.chartData,\n      options: chartOptions\n    });\n\n    // They can still be triggered on hover.\n    const buoMeta = Overview.getDatasetMeta(0);\n    buoMeta.data[0]._model.radius = 0;\n    buoMeta.data[\n    this.props.chartData.datasets[0].data.length - 1\n      ]._model.radius = 0;\n\n    // Render the chart.\n    Overview.render();\n  }\n\n  render() {\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">APY Overview (1 month)</h6>\n        </CardHeader>\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            {/*<Col sm=\"6\" className=\"d-flex mb-2 mb-sm-0\">*/}\n            {/*  <RangeDatePicker />*/}\n            {/*</Col>*/}\n            <Col sm=\"6\" className=\"d-flex mb-2 mb-sm-0\">\n              <div>\n                <Badge\n                  size=\"sm\"\n                  theme=\"secondary\"\n                  outline\n                >\n                  Past Average APY: 32%\n                </Badge>\n              </div>\n            </Col>\n            <Col>\n              <div className=\"d-flex\">\n                <Badge\n                  size=\"sm\"\n                  theme=\"secondary\"\n                  className=\"d-flex ml-auto mr-auto ml-sm-auto mr-sm-0 mt-3 mt-sm-0\"\n                  outline\n                >\n                  Current Average APY: 32%\n                </Badge>\n              </div>\n            </Col>\n          </Row>\n          <canvas\n            height=\"120\"\n            ref={this.canvasRef}\n            style={{maxWidth: \"100% !important\"}}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nAPYOverview.defaultProps = {\n  title: \"APY Overview\",\n  chartData: {\n    labels: Array.from(new Array(30), (_, i) => (i === 0 ? 1 : i)),\n    // labels: [1, 2, 3, 4,5,6 ,7],\n    datasets: [\n\n      {\n        label: \"Past Month\",\n        fill: \"start\",\n        data: [\n          380,\n          430,\n          120,\n          230,\n          410,\n          740,\n          472,\n          219,\n          391,\n          229,\n          400,\n          203,\n          301,\n          380,\n          291,\n          620,\n          700,\n          300,\n          630,\n          402,\n          320,\n          380,\n          289,\n          410,\n          300,\n          530,\n          630,\n          720,\n          780,\n          1200\n        ],\n        backgroundColor: \"rgba(255,65,105,0.1)\",\n        borderColor: \"rgba(255,65,105,1)\",\n        pointBackgroundColor: \"#ffffff\",\n        pointHoverBackgroundColor: \"rgba(255,65,105,1)\",\n        borderDash: [3, 3],\n        borderWidth: 1,\n        pointRadius: 0,\n        pointHoverRadius: 2,\n        pointBorderColor: \"rgba(255,65,105,1)\"\n      },\n      {\n        label: \"Current Month\",\n        fill: \"start\",\n        data: [\n          500,\n          800,\n          320,\n          180,\n          240,\n          320,\n          230,\n          650,\n          590,\n          1200,\n          750,\n          940,\n          1420,\n          1200,\n          960,\n          1450,\n          1820,\n          2800,\n          2102,\n          1920,\n          3920,\n          3202,\n          3140,\n          2800,\n          3200,\n          3200,\n          3400,\n          2910,\n          3100,\n          4250\n        ],\n        backgroundColor: \"rgba(0,123,255,0.1)\",\n        borderColor: \"rgba(0,123,255,1)\",\n        pointBackgroundColor: \"#ffffff\",\n        pointHoverBackgroundColor: \"rgb(0,123,255)\",\n        borderWidth: 1.5,\n        pointRadius: 0,\n        pointHoverRadius: 3\n      },\n    ]\n  }\n};\n\nexport default APYOverview;\n","import React from \"react\";\nimport { Col, Container, Row } from \"shards-react\";\n\nimport PageTitle from \"./../components/common/PageTitle\";\nimport SmallStats from \"./../components/common/SmallStats\";\nimport Stake from \"../components/farm/Stake\";\nimport StakingInfo from \"../components/farm/StakingInfo\";\nimport useWorldPerBlock from \"../hooks/useWorldPerBlock\";\nimport { displayAmount } from \"../world/utils\";\nimport UsersOverview from \"../components/blog/UsersOverview\";\nimport StakingActions from \"../components/farm/StakingActions\";\nimport APYOverview from \"../components/farm/APYOverview\";\nimport useTokenPrice from \"../hooks/useTokenPrice\";\nimport useFarmROI from \"../hooks/useFarmROI\";\n\nconst Farm = () => {\n  const worldPerBlock = useWorldPerBlock();\n  const {roiPerYear, rewardPerThousand} = useFarmROI();\n\n  const smallStats = [\n    {\n      label: \"APY\",\n      value: roiPerYear ? roiPerYear : 0,\n      append: '%',\n      percentage: \"4.7%\",\n      decimals: 2,\n      increase: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: {md: \"6\", sm: \"6\"},\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(0, 184, 216, 0.1)\",\n          borderColor: \"rgb(0, 184, 216)\",\n          data: [1, 2, 1, 3, 5, 4, 7]\n        }\n      ]\n    },\n    {\n      label: \"Yield per $1000 (world per day)\",\n      value: displayAmount(rewardPerThousand),\n      percentage: \"3.8%\",\n      increase: false,\n      decrease: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: {md: \"4\", sm: \"6\"},\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: [2, 3, 3, 3, 4, 3, 3]\n        }\n      ]\n    },\n    {\n      label: \"WORLD per block\",\n      value: displayAmount(worldPerBlock),\n      percentage: \"12.4%\",\n      increase: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: {md: \"6\", sm: \"6\"},\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(23,198,113,0.1)\",\n          borderColor: \"rgb(23,198,113)\",\n          data: [1, 2, 3, 3, 3, 4, 4]\n        }\n      ]\n    },\n    // {\n    //   label: \"New Customers\",\n    //   value: \"29\",\n    //   percentage: \"2.71%\",\n    //   increase: false,\n    //   decrease: true,\n    //   chartLabels: [null, null, null, null, null, null, null],\n    //   attrs: { md: \"4\", sm: \"6\" },\n    //   datasets: [\n    //     {\n    //       label: \"Today\",\n    //       fill: \"start\",\n    //       borderWidth: 1.5,\n    //       backgroundColor: \"rgba(255,65,105,0.1)\",\n    //       borderColor: \"rgb(255,65,105)\",\n    //       data: [1, 7, 1, 3, 1, 4, 8]\n    //     }\n    //   ]\n    // },\n    // {\n    //   label: \"Subscribers\",\n    //   value: \"17,281\",\n    //   percentage: \"2.4%\",\n    //   increase: false,\n    //   decrease: true,\n    //   chartLabels: [null, null, null, null, null, null, null],\n    //   attrs: { md: \"4\", sm: \"6\" },\n    //   datasets: [\n    //     {\n    //       label: \"Today\",\n    //       fill: \"start\",\n    //       borderWidth: 1.5,\n    //       backgroundColor: \"rgb(0,123,255,0.1)\",\n    //       borderColor: \"rgb(0,123,255)\",\n    //       data: [3, 2, 3, 2, 4, 5, 4]\n    //     }\n    //   ]\n    // }\n  ];\n\n  return (\n    <Container fluid className=\"main-content-container px-4\">\n      {/* Page Header */}\n      <Row noGutters className=\"page-header py-4\">\n        <PageTitle title=\"Farm WORLD Tokens\" subtitle=\"Earn WORLD Tokens by staking WORLD-ETH LP\"\n                   className=\"text-sm-left mb-3\"/>\n      </Row>\n\n      <Row>\n        <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\n          <APYOverview/>\n        </Col>\n        <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n          {smallStats.map((stats, idx) => (\n            <Col className=\"col-lg mb-4\" key={idx} {...stats.attrs}>\n              <SmallStats\n                id={`small-stats-${idx}`}\n                // variation=\"1\"\n                chartData={stats.datasets}\n                chartLabels={stats.chartLabels}\n                label={stats.label}\n                value={stats.value}\n                percentage={stats.percentage}\n                increase={stats.increase}\n                decrease={stats.decrease}\n                append={stats.append}\n                decimals={stats.decimals}\n              />\n            </Col>\n          ))}\n        </Col>\n      </Row>\n\n      <Row>\n        <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n          <Stake/>\n        </Col>\n\n        <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n          <StakingInfo/>\n        </Col>\n\n        <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n          <StakingActions/>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Farm;\n","import React from \"react\";\nimport { Container, Button } from \"shards-react\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFound = () => (\n  <Container fluid className=\"main-content-container px-4 pb-4\">\n    <div className=\"error\">\n      <div className=\"error__content\">\n        <h2>404</h2>\n        <h3>Page not found!</h3>\n        <p>Please contact the <a href=\"https://t.me/worldtokenofficial\" target=\"_blank\"\n                                 rel=\"noopener noreferrer\">admins</a> for help.\n        </p>\n        <Link to=\"/overview\"><Button pill>&larr; Go to Overview</Button></Link>\n      </div>\n    </div>\n  </Container>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Row,\n  Col,\n  FormSelect,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter\n} from \"shards-react\";\n\nimport Chart from \"../../world/chart\";\n\nclass UsersByDevice extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartConfig = {\n      type: \"pie\",\n      data: this.props.chartData,\n      options: {\n        ...{\n          legend: {\n            position: \"bottom\",\n            labels: {\n              padding: 25,\n              boxWidth: 20\n            }\n          },\n          cutoutPercentage: 0,\n          tooltips: {\n            custom: false,\n            mode: \"index\",\n            position: \"nearest\"\n          }\n        },\n        ...this.props.chartOptions\n      }\n    };\n\n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const { title } = this.props;\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n        </CardHeader>\n        <CardBody className=\"d-flex py-0\">\n          <canvas\n            height=\"220\"\n            ref={this.canvasRef}\n            className=\"blog-users-by-device m-auto\"\n          />\n        </CardBody>\n        <CardFooter className=\"border-top\">\n          <Row>\n            <Col>\n              <FormSelect\n                size=\"sm\"\n                value=\"last-week\"\n                style={{ maxWidth: \"130px\" }}\n                onChange={() => {}}\n              >\n                <option value=\"last-week\">Last Week</option>\n                <option value=\"today\">Today</option>\n                <option value=\"last-month\">Last Month</option>\n                <option value=\"last-year\">Last Year</option>\n              </FormSelect>\n            </Col>\n            <Col className=\"text-right view-report\">\n              {/* eslint-disable-next-line */}\n              <a href=\"#\">View full report &rarr;</a>\n            </Col>\n          </Row>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\nUsersByDevice.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The chart config object.\n   */\n  chartConfig: PropTypes.object,\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.object\n};\n\nUsersByDevice.defaultProps = {\n  title: \"Users by device\",\n  chartData: {\n    datasets: [\n      {\n        hoverBorderColor: \"#ffffff\",\n        data: [68.3, 24.2, 7.5],\n        backgroundColor: [\n          \"rgba(0,123,255,0.9)\",\n          \"rgba(0,123,255,0.5)\",\n          \"rgba(0,123,255,0.3)\"\n        ]\n      }\n    ],\n    labels: [\"Desktop\", \"Tablet\", \"Mobile\"]\n  }\n};\n\nexport default UsersByDevice;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Form,\n  FormGroup,\n  FormInput,\n  FormTextarea,\n  Button\n} from \"shards-react\";\n\nconst NewDraft = ({ title }) => (\n  <Card small className=\"h-100\">\n    {/* Card Header */}\n    <CardHeader className=\"border-bottom\">\n      <h6 className=\"m-0\">{title}</h6>\n    </CardHeader>\n\n    <CardBody className=\"d-flex flex-column\">\n      <Form className=\"quick-post-form\">\n        {/* Title */}\n        <FormGroup>\n          <FormInput placeholder=\"Brave New World\" />\n        </FormGroup>\n\n        {/* Body */}\n        <FormGroup>\n          <FormTextarea placeholder=\"Words can be like X-rays if you use them properly...\" />\n        </FormGroup>\n\n        {/* Create Draft */}\n        <FormGroup className=\"mb-0\">\n          <Button theme=\"accent\" type=\"submit\">\n            Create Draft\n          </Button>\n        </FormGroup>\n      </Form>\n    </CardBody>\n  </Card>\n);\n\nNewDraft.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string\n};\n\nNewDraft.defaultProps = {\n  title: \"New Draft\"\n};\n\nexport default NewDraft;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  ButtonGroup,\n  Button,\n  Row,\n  Col\n} from \"shards-react\";\n\nconst Discussions = ({ title, discussions }) => (\n  <Card small className=\"blog-comments\">\n    <CardHeader className=\"border-bottom\">\n      <h6 className=\"m-0\">{title}</h6>\n    </CardHeader>\n\n    <CardBody className=\"p-0\">\n      {discussions.map((discussion, idx) => (\n        <div key={idx} className=\"blog-comments__item d-flex p-3\">\n          {/* Avatar */}\n          <div className=\"blog-comments__avatar mr-3\">\n            <img src={null} alt={discussion.author.name} />\n          </div>\n\n          {/* Content */}\n          <div className=\"blog-comments__content\">\n            {/* Content :: Title */}\n            <div className=\"blog-comments__meta text-mutes\">\n              <a className=\"text-secondary\" href={discussion.author.url}>\n                {discussion.author.name}\n              </a>{\" \"}\n              on{\" \"}\n              <a className=\"text-secondary\" href={discussion.post.url}>\n                {discussion.post.title}\n              </a>\n              <span className=\"text-mutes\">- {discussion.date}</span>\n            </div>\n\n            {/* Content :: Body */}\n            <p className=\"m-0 my-1 mb-2 text-muted\">{discussion.body}</p>\n\n            {/* Content :: Actions */}\n            <div className=\"blog-comments__actions\">\n              <ButtonGroup size=\"sm\">\n                <Button theme=\"white\">\n                  <span className=\"text-success\">\n                    <i className=\"material-icons\">check</i>\n                  </span>{\" \"}\n                  Approve\n                </Button>\n                <Button theme=\"white\">\n                  <span className=\"text-danger\">\n                    <i className=\"material-icons\">clear</i>\n                  </span>{\" \"}\n                  Reject\n                </Button>\n                <Button theme=\"white\">\n                  <span className=\"text-light\">\n                    <i className=\"material-icons\">more_vert</i>\n                  </span>{\" \"}\n                  Edit\n                </Button>\n              </ButtonGroup>\n            </div>\n          </div>\n        </div>\n      ))}\n    </CardBody>\n\n    <CardFooter className=\"border-top\">\n      <Row>\n        <Col className=\"text-center view-report\">\n          <Button theme=\"white\" type=\"submit\">\n            View All Comments\n          </Button>\n        </Col>\n      </Row>\n    </CardFooter>\n  </Card>\n);\n\nDiscussions.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The discussions dataset.\n   */\n  discussions: PropTypes.array\n};\n\nDiscussions.defaultProps = {\n  title: \"Discussions\",\n  discussions: [\n    {\n      id: 1,\n      date: \"3 days ago\",\n      author: {\n        image: null,\n        name: \"John Doe\",\n        url: \"#\"\n      },\n      post: {\n        title: \"Hello World!\",\n        url: \"#\"\n      },\n      body: \"Well, the way they make shows is, they make one show ...\"\n    },\n    {\n      id: 2,\n      date: \"4 days ago\",\n      author: {\n        image: null,\n        name: \"John Doe\",\n        url: \"#\"\n      },\n      post: {\n        title: \"Hello World!\",\n        url: \"#\"\n      },\n      body: \"After the avalanche, it took us a week to climb out. Now...\"\n    },\n    {\n      id: 3,\n      date: \"5 days ago\",\n      author: {\n        image: null,\n        name: \"John Doe\",\n        url: \"#\"\n      },\n      post: {\n        title: \"Hello World!\",\n        url: \"#\"\n      },\n      body: \"My money's in that office, right? If she start giving me...\"\n    }\n  ]\n};\n\nexport default Discussions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  ListGroup,\n  ListGroupItem,\n  CardFooter,\n  Row,\n  Col,\n  FormSelect\n} from \"shards-react\";\n\nconst TopReferrals = ({ title, referralData }) => (\n  <Card small>\n    <CardHeader className=\"border-bottom\">\n      <h6 className=\"m-0\">{title}</h6>\n      <div className=\"block-handle\" />\n    </CardHeader>\n\n    <CardBody className=\"p-0\">\n      <ListGroup small flush className=\"list-group-small\">\n        {referralData.map((item, idx) => (\n          <ListGroupItem key={idx} className=\"d-flex px-3\">\n            <span className=\"text-semibold text-fiord-blue\">{item.title}</span>\n            <span className=\"ml-auto text-right text-semibold text-reagent-gray\">\n              {item.value}\n            </span>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    </CardBody>\n\n    <CardFooter className=\"border-top\">\n      <Row>\n        {/* Time Span */}\n        <Col>\n          <FormSelect\n            size=\"sm\"\n            value=\"last-week\"\n            style={{ maxWidth: \"130px\" }}\n            onChange={() => {}}\n          >\n            <option value=\"last-week\">Last Week</option>\n            <option value=\"today\">Today</option>\n            <option value=\"last-month\">Last Month</option>\n            <option value=\"last-year\">Last Year</option>\n          </FormSelect>\n        </Col>\n\n        {/* View Full Report */}\n        <Col className=\"text-right view-report\">\n          {/* eslint-disable-next-line */}\n          <a href=\"#\">Full report &rarr;</a>\n        </Col>\n      </Row>\n    </CardFooter>\n  </Card>\n);\n\nTopReferrals.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The referral data.\n   */\n  referralData: PropTypes.array\n};\n\nTopReferrals.defaultProps = {\n  title: \"Top Referrals\",\n  referralData: [\n    {\n      title: \"GitHub\",\n      value: \"19,291\"\n    },\n    {\n      title: \"Stack Overflow\",\n      value: \"11,201\"\n    },\n    {\n      title: \"Hacker News\",\n      value: \"9,291\"\n    },\n    {\n      title: \"Reddit\",\n      value: \"8,281\"\n    },\n    {\n      title: \"The Next Web\",\n      value: \"7,128\"\n    },\n    {\n      title: \"Tech Crunch\",\n      value: \"6,218\"\n    },\n    {\n      title: \"YouTube\",\n      value: \"1,218\"\n    },\n    {\n      title: \"Adobe\",\n      value: \"1,171\"\n    }\n  ]\n};\n\nexport default TopReferrals;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport PageTitle from \"./../components/common/PageTitle\";\nimport SmallStats from \"./../components/common/SmallStats\";\nimport UsersOverview from \"./../components/blog/UsersOverview\";\nimport UsersByDevice from \"./../components/blog/UsersByDevice\";\nimport NewDraft from \"./../components/blog/NewDraft\";\nimport Discussions from \"./../components/blog/Discussions\";\nimport TopReferrals from \"./../components/common/TopReferrals\";\n\nconst Overview = ({ smallStats }) => (\n  <Container fluid className=\"main-content-container px-4\">\n    {/* Page Header */}\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle title=\"Blog Overview\" subtitle=\"Dashboard\" className=\"text-sm-left mb-3\" />\n    </Row>\n\n    {/* Small Stats Blocks */}\n    <Row>\n      {smallStats.map((stats, idx) => (\n        <Col className=\"col-lg mb-4\" key={idx} {...stats.attrs}>\n          <SmallStats\n            id={`small-stats-${idx}`}\n            // variation=\"1\"\n            chartData={stats.datasets}\n            chartLabels={stats.chartLabels}\n            label={stats.label}\n            value={stats.value}\n            percentage={stats.percentage}\n            increase={stats.increase}\n            decrease={stats.decrease}\n          />\n        </Col>\n      ))}\n    </Row>\n\n    <Row>\n      {/* Users Overview */}\n      <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\n        <UsersOverview />\n      </Col>\n\n      {/* Users by Device */}\n      <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n        <UsersByDevice />\n      </Col>\n\n      {/* New Draft */}\n      <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n        <NewDraft />\n      </Col>\n\n      {/* Discussions */}\n      <Col lg=\"5\" md=\"12\" sm=\"12\" className=\"mb-4\">\n        <Discussions />\n      </Col>\n\n      {/* Top Referrals */}\n      <Col lg=\"3\" md=\"12\" sm=\"12\" className=\"mb-4\">\n        <TopReferrals />\n      </Col>\n    </Row>\n  </Container>\n);\n\nOverview.propTypes = {\n  /**\n   * The small stats dataset.\n   */\n  smallStats: PropTypes.array\n};\n\nOverview.defaultProps = {\n  smallStats: [\n    {\n      label: \"Posts\",\n      value: \"2,390\",\n      percentage: \"4.7%\",\n      increase: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"6\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(0, 184, 216, 0.1)\",\n          borderColor: \"rgb(0, 184, 216)\",\n          data: [1, 2, 1, 3, 5, 4, 7]\n        }\n      ]\n    },\n    {\n      label: \"Pages\",\n      value: \"182\",\n      percentage: \"12.4\",\n      increase: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"6\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(23,198,113,0.1)\",\n          borderColor: \"rgb(23,198,113)\",\n          data: [1, 2, 3, 3, 3, 4, 4]\n        }\n      ]\n    },\n    {\n      label: \"Comments\",\n      value: \"8,147\",\n      percentage: \"3.8%\",\n      increase: false,\n      decrease: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: [2, 3, 3, 3, 4, 3, 3]\n        }\n      ]\n    },\n    {\n      label: \"New Customers\",\n      value: \"29\",\n      percentage: \"2.71%\",\n      increase: false,\n      decrease: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,65,105,0.1)\",\n          borderColor: \"rgb(255,65,105)\",\n          data: [1, 7, 1, 3, 1, 4, 8]\n        }\n      ]\n    },\n    {\n      label: \"Subscribers\",\n      value: \"17,281\",\n      percentage: \"2.4%\",\n      increase: false,\n      decrease: true,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgb(0,123,255,0.1)\",\n          borderColor: \"rgb(0,123,255)\",\n          data: [3, 2, 3, 2, 4, 5, 4]\n        }\n      ]\n    }\n  ]\n};\n\nexport default Overview;\n","import \"./shards-styles/shards-dashboards.1.1.0.min.css\";\nimport './App.css';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { UseWalletProvider } from 'use-wallet';\nimport Analytics from 'react-router-ga';\nimport { CHAIN_ID, RINKEBY_CHAIN_ID, RINKEBY_RPC_URL, RPC_URL, } from './world/constants';\nimport WorldTokenContext from './contexts/WorldTokenContext';\nimport DefaultLayout from \"./components/layout/DefaultLayout\";\nimport Farm from \"./views/Farm\";\nimport NotFound from \"./views/NotFound\";\nimport Overview from \"./views/Overview\";\nimport WorldFarmContext from \"./contexts/WorldFarmContext\";\n\nconst Providers = ({children}) => (\n  <UseWalletProvider\n    chainId={CHAIN_ID}\n    connectors={{\n      walletconnect: {rpcUrl: RPC_URL},\n    }}\n  >\n    <WorldTokenContext>\n      {children}\n    </WorldTokenContext>\n  </UseWalletProvider>\n);\n\nfunction App() {\n  return (\n    <Providers>\n      <BrowserRouter>\n        <Analytics id=\"UA-185956664-1\">\n          <DefaultLayout>\n            <Switch>\n              <Route path=\"/\" exact>\n                <Redirect to=\"/farm\"/>\n              </Route>\n              {/*<Route path=\"/overview\">*/}\n              {/*  <Overview/>*/}\n              {/*</Route>*/}\n              <Route path=\"/farm\">\n                <Farm/>\n              </Route>\n              <Route path=\"*\">\n                <NotFound/>\n              </Route>\n            </Switch>\n          </DefaultLayout>\n        </Analytics>\n      </BrowserRouter>\n    </Providers>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'react-datepicker/dist/react-datepicker.min.css';\nimport '@reach/slider/styles.css';\nimport \"nprogress/nprogress.css\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Devtools> */}\n    <App />\n    {/* </Devtools> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}